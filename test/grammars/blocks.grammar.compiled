main :- repSep(block,ws).
Placeholder :- "???".
alpha :- (['a'-'z']|['A'-'Z']|"_").
alphaNum :- (alpha|num).
block :- [label,ws,blockBody].
blockBody :- ["{",ws,repSep(instr,[";",ws]),ws,"}"].
call :- [ident,(params|"")].
comment :- ["//",repSep(commentChar,"")].
commentChar :- ^'\n'.
const :- (string|int|editorVar).
editorVar :- ["<<",int,">>"].
forkToInstr :- [forkToKW,ws,label].
forkToKW :- "forkTo".
gotoInstr :- [gotoKW,ws,(label|Placeholder),([ws,ifClause]|"")].
gotoKW :- "goto".
ident :- [alpha,repSep((alphaNum|"."),"")].
ifClause :- [ifKW,ws,ident].
ifKW :- "if".
instr :- (valueInstr|gotoInstr|forkToInstr).
int :- [['0'-'9'],repSep(['0'-'9'],"")].
label :- ident.
num :- ['0'-'9'].
params :- ["(",repSep((ident|Placeholder),[",",ws]),")"].
rvalue :- (call|const).
spaces :- repSep(" ","").
string :- ["\"",repSep(stringChar,""),"\""].
stringChar :- (^'"'|['\\','"']).
valueInstr :- [([ident,ws,"=",ws]|""),rvalue].
ws :- repSep([spaces,(comment|"")],"\n").