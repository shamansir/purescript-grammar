main :- repSep(block,ws).
block :- [label, ws, blockBody].
blockBody :- ["{", ws, repSep(instr,[";", ws]), ws, "}"].
label :- ident.
alpha :- ([a-z] | [A-Z] | "_").
instr :- (valueInstr|gotoInstr|forkToInstr).
num :- [0-9].
alphaNum :- (alpha | num).
ident :- [alpha, repSep((alphaNum | "."), "")].
ws :- repSep([spaces, (comment | "")], "\n").
spaces :- repSep(" ", "").
comment :- ["//", repSep(commentChar, "")].
commentChar :- ^'\n'.
valueInstr :- [([ident, ws, "=", ws] | ""), rvalue].
rvalue :- (ident | const).
#rvalue :- const.
call :- [ident, (params | "")].
const :- int.
int :- [[0-9], repSep([0-9], "")].
gotoInstr :- [gotoKW, ws, (label | Placeholder), ([ws, ifClause] | "")].
gotoKW :- "goto".
ifKW :- "if".
Placeholder :- "???".
ifClause :- [ifKW, ws, ident].
forkToInstr :- [forkToKW, ws, label].
forkToKW :- "forkTo".
params :- ["(", repSep((ident | Placeholder), [",", ws]), ")"].
Placeholder :- "???".