( 0 <main> seqnc 0-891 | ( 0 seq:0 ref:ws 0-0 | ( 0 rule:ws repsep 0-0 | ( 0 rep seqnc 0-0 | ( 0 seq:0 ref:spaces 0-0 | ( 0 rule:spaces repsep 0-0 | < Expected ' ', but found 'i' :: rep text @0 > ) ) : ( 0 seq:1 choice 0-0 | < Rule `comment` didn't match :: ch:0 ref:comment @0 | < Sequence failed at entry 0 :: rule:comment seqnc @0 | < Expected '#', but found 'i' :: seq:0 text @0 > > > : ( 0 ch:1 text 0-0 ) ) ) : < Expected '
', but found 'i' :: sep text @0 > ) ) : ( 0 seq:1 repsep 0-891 | ( 0 rep ref:declaration 0-12 | ( 0 rule:declaration choice 0-12 | < Rule `rule` didn't match :: ch:0 ref:rule @0 | < Sequence failed at entry 0 :: rule:rule seqnc @0 | < Rule `defKW` didn't match :: seq:0 ref:defKW @0 | < Expected 'def', but found 'imp' :: rule:defKW text @0 > > > > : < Rule `tableDecl` didn't match :: ch:1 ref:tableDecl @0 | < Sequence failed at entry 0 :: rule:tableDecl seqnc @0 | < Rule `tableKW` didn't match :: seq:0 ref:tableKW @0 | < Expected 'table', but found 'impor' :: rule:tableKW text @0 > > > > : ( 0 ch:2 ref:import 0-12 | ( 0 rule:import seqnc 0-12 | ( 0 seq:0 ref:importKW 0-6 | ( 0 rule:importKW text 0-6 ) ) : ( 0 seq:1 ref:ws 6-7 | ( 0 rule:ws repsep 6-7 | ( 0 rep seqnc 6-7 | ( 0 seq:0 ref:spaces 6-7 | ( 0 rule:spaces repsep 6-7 | ( 0 rep text 6-7 ) : ( 0 sep text 7-7 ) : < Expected ' ', but found '"' :: rep text @7 > ) ) : ( 0 seq:1 choice 7-7 | < Rule `comment` didn't match :: ch:0 ref:comment @7 | < Sequence failed at entry 0 :: rule:comment seqnc @7 | < Expected '#', but found '"' :: seq:0 text @7 > > > : ( 0 ch:1 text 7-7 ) ) ) : < Expected '
', but found '"' :: sep text @7 > ) ) : ( 0 seq:2 ref:path 7-12 | ( 0 rule:path seqnc 7-12 | ( 0 seq:0 text 7-8 ) : ( 0 seq:1 repsep 8-11 | ( 0 rep ref:pathSegment 8-11 | ( 0 rule:pathSegment repsep 8-11 | ( 0 rep choice 8-9 | ( 0 ch:0 char-range 8-9 ) ) : ( 0 sep text 9-9 ) : ( 0 rep choice 9-10 | ( 0 ch:0 char-range 9-10 ) ) : ( 0 sep text 10-10 ) : ( 0 rep choice 10-11 | ( 0 ch:0 char-range 10-11 ) ) : ( 0 sep text 11-11 ) : < None of choices matched input :: rep choice @11 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @11 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @11 > : < Expected character in range from '0' to '9', but found '"' :: ch:2 char-range @11 > : < Expected '_', but found '"' :: ch:3 char @11 > : < Expected '-', but found '"' :: ch:4 char @11 > : < Expected '.', but found '"' :: ch:5 char @11 > > ) ) : < Expected '/', but found '"' :: sep text @11 > ) : ( 0 seq:2 text 11-12 ) ) ) ) ) ) ) : ( 0 sep ref:ws 12-14 | ( 0 rule:ws repsep 12-14 | ( 0 rep seqnc 12-12 | ( 0 seq:0 ref:spaces 12-12 | ( 0 rule:spaces repsep 12-12 | < Expected ' ', but found '
' :: rep text @12 > ) ) : ( 0 seq:1 choice 12-12 | < Rule `comment` didn't match :: ch:0 ref:comment @12 | < Sequence failed at entry 0 :: rule:comment seqnc @12 | < Expected '#', but found '
' :: seq:0 text @12 > > > : ( 0 ch:1 text 12-12 ) ) ) : ( 0 sep text 12-13 ) : ( 0 rep seqnc 13-13 | ( 0 seq:0 ref:spaces 13-13 | ( 0 rule:spaces repsep 13-13 | < Expected ' ', but found '
' :: rep text @13 > ) ) : ( 0 seq:1 choice 13-13 | < Rule `comment` didn't match :: ch:0 ref:comment @13 | < Sequence failed at entry 0 :: rule:comment seqnc @13 | < Expected '#', but found '
' :: seq:0 text @13 > > > : ( 0 ch:1 text 13-13 ) ) ) : ( 0 sep text 13-14 ) : ( 0 rep seqnc 14-14 | ( 0 seq:0 ref:spaces 14-14 | ( 0 rule:spaces repsep 14-14 | < Expected ' ', but found 't' :: rep text @14 > ) ) : ( 0 seq:1 choice 14-14 | < Rule `comment` didn't match :: ch:0 ref:comment @14 | < Sequence failed at entry 0 :: rule:comment seqnc @14 | < Expected '#', but found 't' :: seq:0 text @14 > > > : ( 0 ch:1 text 14-14 ) ) ) : < Expected '
', but found 't' :: sep text @14 > ) ) : ( 0 rep ref:declaration 14-151 | ( 0 rule:declaration choice 14-151 | < Rule `rule` didn't match :: ch:0 ref:rule @14 | < Sequence failed at entry 0 :: rule:rule seqnc @14 | < Rule `defKW` didn't match :: seq:0 ref:defKW @14 | < Expected 'def', but found 'tab' :: rule:defKW text @14 > > > > : ( 0 ch:1 ref:tableDecl 14-151 | ( 0 rule:tableDecl seqnc 14-151 | ( 0 seq:0 ref:tableKW 14-19 | ( 0 rule:tableKW text 14-19 ) ) : ( 0 seq:1 ref:ws 19-20 | ( 0 rule:ws repsep 19-20 | ( 0 rep seqnc 19-20 | ( 0 seq:0 ref:spaces 19-20 | ( 0 rule:spaces repsep 19-20 | ( 0 rep text 19-20 ) : ( 0 sep text 20-20 ) : < Expected ' ', but found 'c' :: rep text @20 > ) ) : ( 0 seq:1 choice 20-20 | < Rule `comment` didn't match :: ch:0 ref:comment @20 | < Sequence failed at entry 0 :: rule:comment seqnc @20 | < Expected '#', but found 'c' :: seq:0 text @20 > > > : ( 0 ch:1 text 20-20 ) ) ) : < Expected '
', but found 'c' :: sep text @20 > ) ) : ( 0 seq:2 ref:name 20-30 | ( 0 rule:qualifier repsep 20-30 | ( 0 rep ref:ident 20-30 | ( 0 rule:ident seqnc 20-30 | ( 0 seq:0 ref:alpha 20-21 | ( 0 rule:alpha choice 20-21 | ( 0 ch:0 char-range 20-21 ) ) ) : ( 0 seq:1 repsep 21-30 | ( 0 rep ref:alphaNum 21-22 | ( 0 rule:alphaNum choice 21-22 | ( 0 ch:0 ref:alpha 21-22 | ( 0 rule:alpha choice 21-22 | ( 0 ch:0 char-range 21-22 ) ) ) ) ) : ( 0 sep text 22-22 ) : ( 0 rep ref:alphaNum 22-23 | ( 0 rule:alphaNum choice 22-23 | ( 0 ch:0 ref:alpha 22-23 | ( 0 rule:alpha choice 22-23 | ( 0 ch:0 char-range 22-23 ) ) ) ) ) : ( 0 sep text 23-23 ) : ( 0 rep ref:alphaNum 23-24 | ( 0 rule:alphaNum choice 23-24 | ( 0 ch:0 ref:alpha 23-24 | ( 0 rule:alpha choice 23-24 | ( 0 ch:0 char-range 23-24 ) ) ) ) ) : ( 0 sep text 24-24 ) : ( 0 rep ref:alphaNum 24-25 | ( 0 rule:alphaNum choice 24-25 | ( 0 ch:0 ref:alpha 24-25 | ( 0 rule:alpha choice 24-25 | ( 0 ch:0 char-range 24-25 ) ) ) ) ) : ( 0 sep text 25-25 ) : ( 0 rep ref:alphaNum 25-26 | ( 0 rule:alphaNum choice 25-26 | ( 0 ch:0 ref:alpha 25-26 | ( 0 rule:alpha choice 25-26 | ( 0 ch:0 char-range 25-26 ) ) ) ) ) : ( 0 sep text 26-26 ) : ( 0 rep ref:alphaNum 26-27 | ( 0 rule:alphaNum choice 26-27 | ( 0 ch:0 ref:alpha 26-27 | ( 0 rule:alpha choice 26-27 | ( 0 ch:0 char-range 26-27 ) ) ) ) ) : ( 0 sep text 27-27 ) : ( 0 rep ref:alphaNum 27-28 | ( 0 rule:alphaNum choice 27-28 | ( 0 ch:0 ref:alpha 27-28 | ( 0 rule:alpha choice 27-28 | ( 0 ch:0 char-range 27-28 ) ) ) ) ) : ( 0 sep text 28-28 ) : ( 0 rep ref:alphaNum 28-29 | ( 0 rule:alphaNum choice 28-29 | ( 0 ch:0 ref:alpha 28-29 | ( 0 rule:alpha choice 28-29 | ( 0 ch:0 char-range 28-29 ) ) ) ) ) : ( 0 sep text 29-29 ) : ( 0 rep ref:alphaNum 29-30 | ( 0 rule:alphaNum choice 29-30 | ( 0 ch:0 ref:alpha 29-30 | ( 0 rule:alpha choice 29-30 | ( 0 ch:0 char-range 29-30 ) ) ) ) ) : ( 0 sep text 30-30 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @30 | < None of choices matched input :: rule:alphaNum choice @30 | < Rule `alpha` didn't match :: ch:0 ref:alpha @30 | < None of choices matched input :: rule:alpha choice @30 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @30 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @30 > : < Expected '_', but found ' ' :: ch:2 text @30 > > > : < Rule `num` didn't match :: ch:1 ref:num @30 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @30 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @30 > ) ) : ( 0 seq:3 ref:ws 30-31 | ( 0 rule:ws repsep 30-31 | ( 0 rep seqnc 30-31 | ( 0 seq:0 ref:spaces 30-31 | ( 0 rule:spaces repsep 30-31 | ( 0 rep text 30-31 ) : ( 0 sep text 31-31 ) : < Expected ' ', but found '{' :: rep text @31 > ) ) : ( 0 seq:1 choice 31-31 | < Rule `comment` didn't match :: ch:0 ref:comment @31 | < Sequence failed at entry 0 :: rule:comment seqnc @31 | < Expected '#', but found '{' :: seq:0 text @31 > > > : ( 0 ch:1 text 31-31 ) ) ) : < Expected '
', but found '{' :: sep text @31 > ) ) : ( 0 seq:4 text 31-32 ) : ( 0 seq:5 ref:ws 32-35 | ( 0 rule:ws repsep 32-35 | ( 0 rep seqnc 32-32 | ( 0 seq:0 ref:spaces 32-32 | ( 0 rule:spaces repsep 32-32 | < Expected ' ', but found '
' :: rep text @32 > ) ) : ( 0 seq:1 choice 32-32 | < Rule `comment` didn't match :: ch:0 ref:comment @32 | < Sequence failed at entry 0 :: rule:comment seqnc @32 | < Expected '#', but found '
' :: seq:0 text @32 > > > : ( 0 ch:1 text 32-32 ) ) ) : ( 0 sep text 32-33 ) : ( 0 rep seqnc 33-35 | ( 0 seq:0 ref:spaces 33-35 | ( 0 rule:spaces repsep 33-35 | ( 0 rep text 33-34 ) : ( 0 sep text 34-34 ) : ( 0 rep text 34-35 ) : ( 0 sep text 35-35 ) : < Expected ' ', but found 'i' :: rep text @35 > ) ) : ( 0 seq:1 choice 35-35 | < Rule `comment` didn't match :: ch:0 ref:comment @35 | < Sequence failed at entry 0 :: rule:comment seqnc @35 | < Expected '#', but found 'i' :: seq:0 text @35 > > > : ( 0 ch:1 text 35-35 ) ) ) : < Expected '
', but found 'i' :: sep text @35 > ) ) : ( 0 seq:6 repsep 35-149 | ( 0 rep ref:tableAttr 35-37 | ( 0 rule:tableAttr seqnc 35-37 | ( 0 seq:0 ref:ident 35-37 | ( 0 rule:ident seqnc 35-37 | ( 0 seq:0 ref:alpha 35-36 | ( 0 rule:alpha choice 35-36 | ( 0 ch:0 char-range 35-36 ) ) ) : ( 0 seq:1 repsep 36-37 | ( 0 rep ref:alphaNum 36-37 | ( 0 rule:alphaNum choice 36-37 | ( 0 ch:0 ref:alpha 36-37 | ( 0 rule:alpha choice 36-37 | ( 0 ch:0 char-range 36-37 ) ) ) ) ) : ( 0 sep text 37-37 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @37 | < None of choices matched input :: rule:alphaNum choice @37 | < Rule `alpha` didn't match :: ch:0 ref:alpha @37 | < None of choices matched input :: rule:alpha choice @37 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @37 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @37 > : < Expected '_', but found ',' :: ch:2 text @37 > > > : < Rule `num` didn't match :: ch:1 ref:num @37 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @37 > > > > ) ) ) : ( 0 seq:1 choice 37-37 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @37 | < Sequence failed at entry 0 :: rule:refSpec seqnc @37 | < Expected ':', but found ',' :: seq:0 text @37 > > > : ( 0 ch:1 text 37-37 ) ) ) ) : ( 0 sep ref:commaSpace 37-41 | ( 0 rule:commaSpace seqnc 37-41 | ( 0 seq:0 text 37-38 ) : ( 0 seq:1 ref:ws 38-41 | ( 0 rule:ws repsep 38-41 | ( 0 rep seqnc 38-38 | ( 0 seq:0 ref:spaces 38-38 | ( 0 rule:spaces repsep 38-38 | < Expected ' ', but found '
' :: rep text @38 > ) ) : ( 0 seq:1 choice 38-38 | < Rule `comment` didn't match :: ch:0 ref:comment @38 | < Sequence failed at entry 0 :: rule:comment seqnc @38 | < Expected '#', but found '
' :: seq:0 text @38 > > > : ( 0 ch:1 text 38-38 ) ) ) : ( 0 sep text 38-39 ) : ( 0 rep seqnc 39-41 | ( 0 seq:0 ref:spaces 39-41 | ( 0 rule:spaces repsep 39-41 | ( 0 rep text 39-40 ) : ( 0 sep text 40-40 ) : ( 0 rep text 40-41 ) : ( 0 sep text 41-41 ) : < Expected ' ', but found 'p' :: rep text @41 > ) ) : ( 0 seq:1 choice 41-41 | < Rule `comment` didn't match :: ch:0 ref:comment @41 | < Sequence failed at entry 0 :: rule:comment seqnc @41 | < Expected '#', but found 'p' :: seq:0 text @41 > > > : ( 0 ch:1 text 41-41 ) ) ) : < Expected '
', but found 'p' :: sep text @41 > ) ) ) ) : ( 0 rep ref:tableAttr 41-49 | ( 0 rule:tableAttr seqnc 41-49 | ( 0 seq:0 ref:ident 41-49 | ( 0 rule:ident seqnc 41-49 | ( 0 seq:0 ref:alpha 41-42 | ( 0 rule:alpha choice 41-42 | ( 0 ch:0 char-range 41-42 ) ) ) : ( 0 seq:1 repsep 42-49 | ( 0 rep ref:alphaNum 42-43 | ( 0 rule:alphaNum choice 42-43 | ( 0 ch:0 ref:alpha 42-43 | ( 0 rule:alpha choice 42-43 | ( 0 ch:0 char-range 42-43 ) ) ) ) ) : ( 0 sep text 43-43 ) : ( 0 rep ref:alphaNum 43-44 | ( 0 rule:alphaNum choice 43-44 | ( 0 ch:0 ref:alpha 43-44 | ( 0 rule:alpha choice 43-44 | ( 0 ch:0 char-range 43-44 ) ) ) ) ) : ( 0 sep text 44-44 ) : ( 0 rep ref:alphaNum 44-45 | ( 0 rule:alphaNum choice 44-45 | ( 0 ch:0 ref:alpha 44-45 | ( 0 rule:alpha choice 44-45 | ( 0 ch:0 char-range 44-45 ) ) ) ) ) : ( 0 sep text 45-45 ) : ( 0 rep ref:alphaNum 45-46 | ( 0 rule:alphaNum choice 45-46 | ( 0 ch:0 ref:alpha 45-46 | ( 0 rule:alpha choice 45-46 | ( 0 ch:0 char-range 45-46 ) ) ) ) ) : ( 0 sep text 46-46 ) : ( 0 rep ref:alphaNum 46-47 | ( 0 rule:alphaNum choice 46-47 | ( 0 ch:0 ref:alpha 46-47 | ( 0 rule:alpha choice 46-47 | ( 0 ch:0 char-range 46-47 ) ) ) ) ) : ( 0 sep text 47-47 ) : ( 0 rep ref:alphaNum 47-48 | ( 0 rule:alphaNum choice 47-48 | ( 0 ch:0 ref:alpha 47-48 | ( 0 rule:alpha choice 47-48 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @47 > : ( 0 ch:1 char-range 47-48 ) ) ) ) ) : ( 0 sep text 48-48 ) : ( 0 rep ref:alphaNum 48-49 | ( 0 rule:alphaNum choice 48-49 | ( 0 ch:0 ref:alpha 48-49 | ( 0 rule:alpha choice 48-49 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @48 > : ( 0 ch:1 char-range 48-49 ) ) ) ) ) : ( 0 sep text 49-49 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @49 | < None of choices matched input :: rule:alphaNum choice @49 | < Rule `alpha` didn't match :: ch:0 ref:alpha @49 | < None of choices matched input :: rule:alpha choice @49 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @49 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @49 > : < Expected '_', but found ',' :: ch:2 text @49 > > > : < Rule `num` didn't match :: ch:1 ref:num @49 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @49 > > > > ) ) ) : ( 0 seq:1 choice 49-49 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @49 | < Sequence failed at entry 0 :: rule:refSpec seqnc @49 | < Expected ':', but found ',' :: seq:0 text @49 > > > : ( 0 ch:1 text 49-49 ) ) ) ) : ( 0 sep ref:commaSpace 49-53 | ( 0 rule:commaSpace seqnc 49-53 | ( 0 seq:0 text 49-50 ) : ( 0 seq:1 ref:ws 50-53 | ( 0 rule:ws repsep 50-53 | ( 0 rep seqnc 50-50 | ( 0 seq:0 ref:spaces 50-50 | ( 0 rule:spaces repsep 50-50 | < Expected ' ', but found '
' :: rep text @50 > ) ) : ( 0 seq:1 choice 50-50 | < Rule `comment` didn't match :: ch:0 ref:comment @50 | < Sequence failed at entry 0 :: rule:comment seqnc @50 | < Expected '#', but found '
' :: seq:0 text @50 > > > : ( 0 ch:1 text 50-50 ) ) ) : ( 0 sep text 50-51 ) : ( 0 rep seqnc 51-53 | ( 0 seq:0 ref:spaces 51-53 | ( 0 rule:spaces repsep 51-53 | ( 0 rep text 51-52 ) : ( 0 sep text 52-52 ) : ( 0 rep text 52-53 ) : ( 0 sep text 53-53 ) : < Expected ' ', but found 'r' :: rep text @53 > ) ) : ( 0 seq:1 choice 53-53 | < Rule `comment` didn't match :: ch:0 ref:comment @53 | < Sequence failed at entry 0 :: rule:comment seqnc @53 | < Expected '#', but found 'r' :: seq:0 text @53 > > > : ( 0 ch:1 text 53-53 ) ) ) : < Expected '
', but found 'r' :: sep text @53 > ) ) ) ) : ( 0 rep ref:tableAttr 53-87 | ( 0 rule:tableAttr seqnc 53-87 | ( 0 seq:0 ref:ident 53-59 | ( 0 rule:ident seqnc 53-59 | ( 0 seq:0 ref:alpha 53-54 | ( 0 rule:alpha choice 53-54 | ( 0 ch:0 char-range 53-54 ) ) ) : ( 0 seq:1 repsep 54-59 | ( 0 rep ref:alphaNum 54-55 | ( 0 rule:alphaNum choice 54-55 | ( 0 ch:0 ref:alpha 54-55 | ( 0 rule:alpha choice 54-55 | ( 0 ch:0 char-range 54-55 ) ) ) ) ) : ( 0 sep text 55-55 ) : ( 0 rep ref:alphaNum 55-56 | ( 0 rule:alphaNum choice 55-56 | ( 0 ch:0 ref:alpha 55-56 | ( 0 rule:alpha choice 55-56 | ( 0 ch:0 char-range 55-56 ) ) ) ) ) : ( 0 sep text 56-56 ) : ( 0 rep ref:alphaNum 56-57 | ( 0 rule:alphaNum choice 56-57 | ( 0 ch:0 ref:alpha 56-57 | ( 0 rule:alpha choice 56-57 | ( 0 ch:0 char-range 56-57 ) ) ) ) ) : ( 0 sep text 57-57 ) : ( 0 rep ref:alphaNum 57-58 | ( 0 rule:alphaNum choice 57-58 | ( 0 ch:0 ref:alpha 57-58 | ( 0 rule:alpha choice 57-58 | ( 0 ch:0 char-range 57-58 ) ) ) ) ) : ( 0 sep text 58-58 ) : ( 0 rep ref:alphaNum 58-59 | ( 0 rule:alphaNum choice 58-59 | ( 0 ch:0 ref:alpha 58-59 | ( 0 rule:alpha choice 58-59 | ( 0 ch:0 char-range 58-59 ) ) ) ) ) : ( 0 sep text 59-59 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @59 | < None of choices matched input :: rule:alphaNum choice @59 | < Rule `alpha` didn't match :: ch:0 ref:alpha @59 | < None of choices matched input :: rule:alpha choice @59 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @59 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @59 > : < Expected '_', but found ':' :: ch:2 text @59 > > > : < Rule `num` didn't match :: ch:1 ref:num @59 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @59 > > > > ) ) ) : ( 0 seq:1 choice 59-87 | ( 0 ch:0 ref:refSpec 59-87 | ( 0 rule:refSpec seqnc 59-87 | ( 0 seq:0 text 59-60 ) : ( 0 seq:1 ref:ws 60-61 | ( 0 rule:ws repsep 60-61 | ( 0 rep seqnc 60-61 | ( 0 seq:0 ref:spaces 60-61 | ( 0 rule:spaces repsep 60-61 | ( 0 rep text 60-61 ) : ( 0 sep text 61-61 ) : < Expected ' ', but found 'i' :: rep text @61 > ) ) : ( 0 seq:1 choice 61-61 | < Rule `comment` didn't match :: ch:0 ref:comment @61 | < Sequence failed at entry 0 :: rule:comment seqnc @61 | < Expected '#', but found 'i' :: seq:0 text @61 > > > : ( 0 ch:1 text 61-61 ) ) ) : < Expected '
', but found 'i' :: sep text @61 > ) ) : ( 0 seq:2 choice 61-87 | < Rule `outRef` didn't match :: ch:0 ref:outRef @61 | < Sequence failed at entry 0 :: rule:outRef seqnc @61 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @61 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @61 > > > > : ( 0 ch:1 ref:inRef 61-87 | ( 0 rule:inRef seqnc 61-87 | ( 0 seq:0 ref:inRefKW 61-66 | ( 0 rule:inRefKW text 61-66 ) ) : ( 0 seq:1 text 66-67 ) : ( 0 seq:2 ref:table 67-77 | ( 0 rule:qualifier repsep 67-77 | ( 0 rep ref:ident 67-70 | ( 0 rule:ident seqnc 67-70 | ( 0 seq:0 ref:alpha 67-68 | ( 0 rule:alpha choice 67-68 | ( 0 ch:0 char-range 67-68 ) ) ) : ( 0 seq:1 repsep 68-70 | ( 0 rep ref:alphaNum 68-69 | ( 0 rule:alphaNum choice 68-69 | ( 0 ch:0 ref:alpha 68-69 | ( 0 rule:alpha choice 68-69 | ( 0 ch:0 char-range 68-69 ) ) ) ) ) : ( 0 sep text 69-69 ) : ( 0 rep ref:alphaNum 69-70 | ( 0 rule:alphaNum choice 69-70 | ( 0 ch:0 ref:alpha 69-70 | ( 0 rule:alpha choice 69-70 | ( 0 ch:0 char-range 69-70 ) ) ) ) ) : ( 0 sep text 70-70 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @70 | < None of choices matched input :: rule:alphaNum choice @70 | < Rule `alpha` didn't match :: ch:0 ref:alpha @70 | < None of choices matched input :: rule:alpha choice @70 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @70 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @70 > : < Expected '_', but found '.' :: ch:2 text @70 > > > : < Rule `num` didn't match :: ch:1 ref:num @70 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @70 > > > > ) ) ) : ( 0 sep text 70-71 ) : ( 0 rep ref:ident 71-77 | ( 0 rule:ident seqnc 71-77 | ( 0 seq:0 ref:alpha 71-72 | ( 0 rule:alpha choice 71-72 | ( 0 ch:0 char-range 71-72 ) ) ) : ( 0 seq:1 repsep 72-77 | ( 0 rep ref:alphaNum 72-73 | ( 0 rule:alphaNum choice 72-73 | ( 0 ch:0 ref:alpha 72-73 | ( 0 rule:alpha choice 72-73 | ( 0 ch:0 char-range 72-73 ) ) ) ) ) : ( 0 sep text 73-73 ) : ( 0 rep ref:alphaNum 73-74 | ( 0 rule:alphaNum choice 73-74 | ( 0 ch:0 ref:alpha 73-74 | ( 0 rule:alpha choice 73-74 | ( 0 ch:0 char-range 73-74 ) ) ) ) ) : ( 0 sep text 74-74 ) : ( 0 rep ref:alphaNum 74-75 | ( 0 rule:alphaNum choice 74-75 | ( 0 ch:0 ref:alpha 74-75 | ( 0 rule:alpha choice 74-75 | ( 0 ch:0 char-range 74-75 ) ) ) ) ) : ( 0 sep text 75-75 ) : ( 0 rep ref:alphaNum 75-76 | ( 0 rule:alphaNum choice 75-76 | ( 0 ch:0 ref:alpha 75-76 | ( 0 rule:alpha choice 75-76 | ( 0 ch:0 char-range 75-76 ) ) ) ) ) : ( 0 sep text 76-76 ) : ( 0 rep ref:alphaNum 76-77 | ( 0 rule:alphaNum choice 76-77 | ( 0 ch:0 ref:alpha 76-77 | ( 0 rule:alpha choice 76-77 | ( 0 ch:0 char-range 76-77 ) ) ) ) ) : ( 0 sep text 77-77 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @77 | < None of choices matched input :: rule:alphaNum choice @77 | < Rule `alpha` didn't match :: ch:0 ref:alpha @77 | < None of choices matched input :: rule:alpha choice @77 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @77 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @77 > : < Expected '_', but found ':' :: ch:2 text @77 > > > : < Rule `num` didn't match :: ch:1 ref:num @77 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @77 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @77 > ) ) : ( 0 seq:3 text 77-78 ) : ( 0 seq:4 ref:col 78-86 | ( 0 rule:ident seqnc 78-86 | ( 0 seq:0 ref:alpha 78-79 | ( 0 rule:alpha choice 78-79 | ( 0 ch:0 char-range 78-79 ) ) ) : ( 0 seq:1 repsep 79-86 | ( 0 rep ref:alphaNum 79-80 | ( 0 rule:alphaNum choice 79-80 | ( 0 ch:0 ref:alpha 79-80 | ( 0 rule:alpha choice 79-80 | ( 0 ch:0 char-range 79-80 ) ) ) ) ) : ( 0 sep text 80-80 ) : ( 0 rep ref:alphaNum 80-81 | ( 0 rule:alphaNum choice 80-81 | ( 0 ch:0 ref:alpha 80-81 | ( 0 rule:alpha choice 80-81 | ( 0 ch:0 char-range 80-81 ) ) ) ) ) : ( 0 sep text 81-81 ) : ( 0 rep ref:alphaNum 81-82 | ( 0 rule:alphaNum choice 81-82 | ( 0 ch:0 ref:alpha 81-82 | ( 0 rule:alpha choice 81-82 | ( 0 ch:0 char-range 81-82 ) ) ) ) ) : ( 0 sep text 82-82 ) : ( 0 rep ref:alphaNum 82-83 | ( 0 rule:alphaNum choice 82-83 | ( 0 ch:0 ref:alpha 82-83 | ( 0 rule:alpha choice 82-83 | ( 0 ch:0 char-range 82-83 ) ) ) ) ) : ( 0 sep text 83-83 ) : ( 0 rep ref:alphaNum 83-84 | ( 0 rule:alphaNum choice 83-84 | ( 0 ch:0 ref:alpha 83-84 | ( 0 rule:alpha choice 83-84 | ( 0 ch:0 char-range 83-84 ) ) ) ) ) : ( 0 sep text 84-84 ) : ( 0 rep ref:alphaNum 84-85 | ( 0 rule:alphaNum choice 84-85 | ( 0 ch:0 ref:alpha 84-85 | ( 0 rule:alpha choice 84-85 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @84 > : ( 0 ch:1 char-range 84-85 ) ) ) ) ) : ( 0 sep text 85-85 ) : ( 0 rep ref:alphaNum 85-86 | ( 0 rule:alphaNum choice 85-86 | ( 0 ch:0 ref:alpha 85-86 | ( 0 rule:alpha choice 85-86 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @85 > : ( 0 ch:1 char-range 85-86 ) ) ) ) ) : ( 0 sep text 86-86 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @86 | < None of choices matched input :: rule:alphaNum choice @86 | < Rule `alpha` didn't match :: ch:0 ref:alpha @86 | < None of choices matched input :: rule:alpha choice @86 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @86 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @86 > : < Expected '_', but found ')' :: ch:2 text @86 > > > : < Rule `num` didn't match :: ch:1 ref:num @86 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @86 > > > > ) ) ) : ( 0 seq:5 text 86-87 ) ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 87-91 | ( 0 rule:commaSpace seqnc 87-91 | ( 0 seq:0 text 87-88 ) : ( 0 seq:1 ref:ws 88-91 | ( 0 rule:ws repsep 88-91 | ( 0 rep seqnc 88-88 | ( 0 seq:0 ref:spaces 88-88 | ( 0 rule:spaces repsep 88-88 | < Expected ' ', but found '
' :: rep text @88 > ) ) : ( 0 seq:1 choice 88-88 | < Rule `comment` didn't match :: ch:0 ref:comment @88 | < Sequence failed at entry 0 :: rule:comment seqnc @88 | < Expected '#', but found '
' :: seq:0 text @88 > > > : ( 0 ch:1 text 88-88 ) ) ) : ( 0 sep text 88-89 ) : ( 0 rep seqnc 89-91 | ( 0 seq:0 ref:spaces 89-91 | ( 0 rule:spaces repsep 89-91 | ( 0 rep text 89-90 ) : ( 0 sep text 90-90 ) : ( 0 rep text 90-91 ) : ( 0 sep text 91-91 ) : < Expected ' ', but found 'c' :: rep text @91 > ) ) : ( 0 seq:1 choice 91-91 | < Rule `comment` didn't match :: ch:0 ref:comment @91 | < Sequence failed at entry 0 :: rule:comment seqnc @91 | < Expected '#', but found 'c' :: seq:0 text @91 > > > : ( 0 ch:1 text 91-91 ) ) ) : < Expected '
', but found 'c' :: sep text @91 > ) ) ) ) : ( 0 rep ref:tableAttr 91-149 | ( 0 rule:tableAttr seqnc 91-149 | ( 0 seq:0 ref:ident 91-111 | ( 0 rule:ident seqnc 91-111 | ( 0 seq:0 ref:alpha 91-92 | ( 0 rule:alpha choice 91-92 | ( 0 ch:0 char-range 91-92 ) ) ) : ( 0 seq:1 repsep 92-111 | ( 0 rep ref:alphaNum 92-93 | ( 0 rule:alphaNum choice 92-93 | ( 0 ch:0 ref:alpha 92-93 | ( 0 rule:alpha choice 92-93 | ( 0 ch:0 char-range 92-93 ) ) ) ) ) : ( 0 sep text 93-93 ) : ( 0 rep ref:alphaNum 93-94 | ( 0 rule:alphaNum choice 93-94 | ( 0 ch:0 ref:alpha 93-94 | ( 0 rule:alpha choice 93-94 | ( 0 ch:0 char-range 93-94 ) ) ) ) ) : ( 0 sep text 94-94 ) : ( 0 rep ref:alphaNum 94-95 | ( 0 rule:alphaNum choice 94-95 | ( 0 ch:0 ref:alpha 94-95 | ( 0 rule:alpha choice 94-95 | ( 0 ch:0 char-range 94-95 ) ) ) ) ) : ( 0 sep text 95-95 ) : ( 0 rep ref:alphaNum 95-96 | ( 0 rule:alphaNum choice 95-96 | ( 0 ch:0 ref:alpha 95-96 | ( 0 rule:alpha choice 95-96 | ( 0 ch:0 char-range 95-96 ) ) ) ) ) : ( 0 sep text 96-96 ) : ( 0 rep ref:alphaNum 96-97 | ( 0 rule:alphaNum choice 96-97 | ( 0 ch:0 ref:alpha 96-97 | ( 0 rule:alpha choice 96-97 | ( 0 ch:0 char-range 96-97 ) ) ) ) ) : ( 0 sep text 97-97 ) : ( 0 rep ref:alphaNum 97-98 | ( 0 rule:alphaNum choice 97-98 | ( 0 ch:0 ref:alpha 97-98 | ( 0 rule:alpha choice 97-98 | ( 0 ch:0 char-range 97-98 ) ) ) ) ) : ( 0 sep text 98-98 ) : ( 0 rep ref:alphaNum 98-99 | ( 0 rule:alphaNum choice 98-99 | ( 0 ch:0 ref:alpha 98-99 | ( 0 rule:alpha choice 98-99 | ( 0 ch:0 char-range 98-99 ) ) ) ) ) : ( 0 sep text 99-99 ) : ( 0 rep ref:alphaNum 99-100 | ( 0 rule:alphaNum choice 99-100 | ( 0 ch:0 ref:alpha 99-100 | ( 0 rule:alpha choice 99-100 | ( 0 ch:0 char-range 99-100 ) ) ) ) ) : ( 0 sep text 100-100 ) : ( 0 rep ref:alphaNum 100-101 | ( 0 rule:alphaNum choice 100-101 | ( 0 ch:0 ref:alpha 100-101 | ( 0 rule:alpha choice 100-101 | ( 0 ch:0 char-range 100-101 ) ) ) ) ) : ( 0 sep text 101-101 ) : ( 0 rep ref:alphaNum 101-102 | ( 0 rule:alphaNum choice 101-102 | ( 0 ch:0 ref:alpha 101-102 | ( 0 rule:alpha choice 101-102 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @101 > : ( 0 ch:1 char-range 101-102 ) ) ) ) ) : ( 0 sep text 102-102 ) : ( 0 rep ref:alphaNum 102-103 | ( 0 rule:alphaNum choice 102-103 | ( 0 ch:0 ref:alpha 102-103 | ( 0 rule:alpha choice 102-103 | ( 0 ch:0 char-range 102-103 ) ) ) ) ) : ( 0 sep text 103-103 ) : ( 0 rep ref:alphaNum 103-104 | ( 0 rule:alphaNum choice 103-104 | ( 0 ch:0 ref:alpha 103-104 | ( 0 rule:alpha choice 103-104 | ( 0 ch:0 char-range 103-104 ) ) ) ) ) : ( 0 sep text 104-104 ) : ( 0 rep ref:alphaNum 104-105 | ( 0 rule:alphaNum choice 104-105 | ( 0 ch:0 ref:alpha 104-105 | ( 0 rule:alpha choice 104-105 | ( 0 ch:0 char-range 104-105 ) ) ) ) ) : ( 0 sep text 105-105 ) : ( 0 rep ref:alphaNum 105-106 | ( 0 rule:alphaNum choice 105-106 | ( 0 ch:0 ref:alpha 105-106 | ( 0 rule:alpha choice 105-106 | ( 0 ch:0 char-range 105-106 ) ) ) ) ) : ( 0 sep text 106-106 ) : ( 0 rep ref:alphaNum 106-107 | ( 0 rule:alphaNum choice 106-107 | ( 0 ch:0 ref:alpha 106-107 | ( 0 rule:alpha choice 106-107 | ( 0 ch:0 char-range 106-107 ) ) ) ) ) : ( 0 sep text 107-107 ) : ( 0 rep ref:alphaNum 107-108 | ( 0 rule:alphaNum choice 107-108 | ( 0 ch:0 ref:alpha 107-108 | ( 0 rule:alpha choice 107-108 | ( 0 ch:0 char-range 107-108 ) ) ) ) ) : ( 0 sep text 108-108 ) : ( 0 rep ref:alphaNum 108-109 | ( 0 rule:alphaNum choice 108-109 | ( 0 ch:0 ref:alpha 108-109 | ( 0 rule:alpha choice 108-109 | ( 0 ch:0 char-range 108-109 ) ) ) ) ) : ( 0 sep text 109-109 ) : ( 0 rep ref:alphaNum 109-110 | ( 0 rule:alphaNum choice 109-110 | ( 0 ch:0 ref:alpha 109-110 | ( 0 rule:alpha choice 109-110 | ( 0 ch:0 char-range 109-110 ) ) ) ) ) : ( 0 sep text 110-110 ) : ( 0 rep ref:alphaNum 110-111 | ( 0 rule:alphaNum choice 110-111 | ( 0 ch:0 ref:alpha 110-111 | ( 0 rule:alpha choice 110-111 | ( 0 ch:0 char-range 110-111 ) ) ) ) ) : ( 0 sep text 111-111 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @111 | < None of choices matched input :: rule:alphaNum choice @111 | < Rule `alpha` didn't match :: ch:0 ref:alpha @111 | < None of choices matched input :: rule:alpha choice @111 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @111 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @111 > : < Expected '_', but found ':' :: ch:2 text @111 > > > : < Rule `num` didn't match :: ch:1 ref:num @111 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @111 > > > > ) ) ) : ( 0 seq:1 choice 111-149 | ( 0 ch:0 ref:refSpec 111-149 | ( 0 rule:refSpec seqnc 111-149 | ( 0 seq:0 text 111-112 ) : ( 0 seq:1 ref:ws 112-113 | ( 0 rule:ws repsep 112-113 | ( 0 rep seqnc 112-113 | ( 0 seq:0 ref:spaces 112-113 | ( 0 rule:spaces repsep 112-113 | ( 0 rep text 112-113 ) : ( 0 sep text 113-113 ) : < Expected ' ', but found 'i' :: rep text @113 > ) ) : ( 0 seq:1 choice 113-113 | < Rule `comment` didn't match :: ch:0 ref:comment @113 | < Sequence failed at entry 0 :: rule:comment seqnc @113 | < Expected '#', but found 'i' :: seq:0 text @113 > > > : ( 0 ch:1 text 113-113 ) ) ) : < Expected '
', but found 'i' :: sep text @113 > ) ) : ( 0 seq:2 choice 113-149 | < Rule `outRef` didn't match :: ch:0 ref:outRef @113 | < Sequence failed at entry 0 :: rule:outRef seqnc @113 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @113 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @113 > > > > : ( 0 ch:1 ref:inRef 113-149 | ( 0 rule:inRef seqnc 113-149 | ( 0 seq:0 ref:inRefKW 113-118 | ( 0 rule:inRefKW text 113-118 ) ) : ( 0 seq:1 text 118-119 ) : ( 0 seq:2 ref:table 119-139 | ( 0 rule:qualifier repsep 119-139 | ( 0 rep ref:ident 119-139 | ( 0 rule:ident seqnc 119-139 | ( 0 seq:0 ref:alpha 119-120 | ( 0 rule:alpha choice 119-120 | ( 0 ch:0 char-range 119-120 ) ) ) : ( 0 seq:1 repsep 120-139 | ( 0 rep ref:alphaNum 120-121 | ( 0 rule:alphaNum choice 120-121 | ( 0 ch:0 ref:alpha 120-121 | ( 0 rule:alpha choice 120-121 | ( 0 ch:0 char-range 120-121 ) ) ) ) ) : ( 0 sep text 121-121 ) : ( 0 rep ref:alphaNum 121-122 | ( 0 rule:alphaNum choice 121-122 | ( 0 ch:0 ref:alpha 121-122 | ( 0 rule:alpha choice 121-122 | ( 0 ch:0 char-range 121-122 ) ) ) ) ) : ( 0 sep text 122-122 ) : ( 0 rep ref:alphaNum 122-123 | ( 0 rule:alphaNum choice 122-123 | ( 0 ch:0 ref:alpha 122-123 | ( 0 rule:alpha choice 122-123 | ( 0 ch:0 char-range 122-123 ) ) ) ) ) : ( 0 sep text 123-123 ) : ( 0 rep ref:alphaNum 123-124 | ( 0 rule:alphaNum choice 123-124 | ( 0 ch:0 ref:alpha 123-124 | ( 0 rule:alpha choice 123-124 | ( 0 ch:0 char-range 123-124 ) ) ) ) ) : ( 0 sep text 124-124 ) : ( 0 rep ref:alphaNum 124-125 | ( 0 rule:alphaNum choice 124-125 | ( 0 ch:0 ref:alpha 124-125 | ( 0 rule:alpha choice 124-125 | ( 0 ch:0 char-range 124-125 ) ) ) ) ) : ( 0 sep text 125-125 ) : ( 0 rep ref:alphaNum 125-126 | ( 0 rule:alphaNum choice 125-126 | ( 0 ch:0 ref:alpha 125-126 | ( 0 rule:alpha choice 125-126 | ( 0 ch:0 char-range 125-126 ) ) ) ) ) : ( 0 sep text 126-126 ) : ( 0 rep ref:alphaNum 126-127 | ( 0 rule:alphaNum choice 126-127 | ( 0 ch:0 ref:alpha 126-127 | ( 0 rule:alpha choice 126-127 | ( 0 ch:0 char-range 126-127 ) ) ) ) ) : ( 0 sep text 127-127 ) : ( 0 rep ref:alphaNum 127-128 | ( 0 rule:alphaNum choice 127-128 | ( 0 ch:0 ref:alpha 127-128 | ( 0 rule:alpha choice 127-128 | ( 0 ch:0 char-range 127-128 ) ) ) ) ) : ( 0 sep text 128-128 ) : ( 0 rep ref:alphaNum 128-129 | ( 0 rule:alphaNum choice 128-129 | ( 0 ch:0 ref:alpha 128-129 | ( 0 rule:alpha choice 128-129 | ( 0 ch:0 char-range 128-129 ) ) ) ) ) : ( 0 sep text 129-129 ) : ( 0 rep ref:alphaNum 129-130 | ( 0 rule:alphaNum choice 129-130 | ( 0 ch:0 ref:alpha 129-130 | ( 0 rule:alpha choice 129-130 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @129 > : ( 0 ch:1 char-range 129-130 ) ) ) ) ) : ( 0 sep text 130-130 ) : ( 0 rep ref:alphaNum 130-131 | ( 0 rule:alphaNum choice 130-131 | ( 0 ch:0 ref:alpha 130-131 | ( 0 rule:alpha choice 130-131 | ( 0 ch:0 char-range 130-131 ) ) ) ) ) : ( 0 sep text 131-131 ) : ( 0 rep ref:alphaNum 131-132 | ( 0 rule:alphaNum choice 131-132 | ( 0 ch:0 ref:alpha 131-132 | ( 0 rule:alpha choice 131-132 | ( 0 ch:0 char-range 131-132 ) ) ) ) ) : ( 0 sep text 132-132 ) : ( 0 rep ref:alphaNum 132-133 | ( 0 rule:alphaNum choice 132-133 | ( 0 ch:0 ref:alpha 132-133 | ( 0 rule:alpha choice 132-133 | ( 0 ch:0 char-range 132-133 ) ) ) ) ) : ( 0 sep text 133-133 ) : ( 0 rep ref:alphaNum 133-134 | ( 0 rule:alphaNum choice 133-134 | ( 0 ch:0 ref:alpha 133-134 | ( 0 rule:alpha choice 133-134 | ( 0 ch:0 char-range 133-134 ) ) ) ) ) : ( 0 sep text 134-134 ) : ( 0 rep ref:alphaNum 134-135 | ( 0 rule:alphaNum choice 134-135 | ( 0 ch:0 ref:alpha 134-135 | ( 0 rule:alpha choice 134-135 | ( 0 ch:0 char-range 134-135 ) ) ) ) ) : ( 0 sep text 135-135 ) : ( 0 rep ref:alphaNum 135-136 | ( 0 rule:alphaNum choice 135-136 | ( 0 ch:0 ref:alpha 135-136 | ( 0 rule:alpha choice 135-136 | ( 0 ch:0 char-range 135-136 ) ) ) ) ) : ( 0 sep text 136-136 ) : ( 0 rep ref:alphaNum 136-137 | ( 0 rule:alphaNum choice 136-137 | ( 0 ch:0 ref:alpha 136-137 | ( 0 rule:alpha choice 136-137 | ( 0 ch:0 char-range 136-137 ) ) ) ) ) : ( 0 sep text 137-137 ) : ( 0 rep ref:alphaNum 137-138 | ( 0 rule:alphaNum choice 137-138 | ( 0 ch:0 ref:alpha 137-138 | ( 0 rule:alpha choice 137-138 | ( 0 ch:0 char-range 137-138 ) ) ) ) ) : ( 0 sep text 138-138 ) : ( 0 rep ref:alphaNum 138-139 | ( 0 rule:alphaNum choice 138-139 | ( 0 ch:0 ref:alpha 138-139 | ( 0 rule:alpha choice 138-139 | ( 0 ch:0 char-range 138-139 ) ) ) ) ) : ( 0 sep text 139-139 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @139 | < None of choices matched input :: rule:alphaNum choice @139 | < Rule `alpha` didn't match :: ch:0 ref:alpha @139 | < None of choices matched input :: rule:alpha choice @139 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @139 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @139 > : < Expected '_', but found ':' :: ch:2 text @139 > > > : < Rule `num` didn't match :: ch:1 ref:num @139 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @139 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @139 > ) ) : ( 0 seq:3 text 139-140 ) : ( 0 seq:4 ref:col 140-148 | ( 0 rule:ident seqnc 140-148 | ( 0 seq:0 ref:alpha 140-141 | ( 0 rule:alpha choice 140-141 | ( 0 ch:0 char-range 140-141 ) ) ) : ( 0 seq:1 repsep 141-148 | ( 0 rep ref:alphaNum 141-142 | ( 0 rule:alphaNum choice 141-142 | ( 0 ch:0 ref:alpha 141-142 | ( 0 rule:alpha choice 141-142 | ( 0 ch:0 char-range 141-142 ) ) ) ) ) : ( 0 sep text 142-142 ) : ( 0 rep ref:alphaNum 142-143 | ( 0 rule:alphaNum choice 142-143 | ( 0 ch:0 ref:alpha 142-143 | ( 0 rule:alpha choice 142-143 | ( 0 ch:0 char-range 142-143 ) ) ) ) ) : ( 0 sep text 143-143 ) : ( 0 rep ref:alphaNum 143-144 | ( 0 rule:alphaNum choice 143-144 | ( 0 ch:0 ref:alpha 143-144 | ( 0 rule:alpha choice 143-144 | ( 0 ch:0 char-range 143-144 ) ) ) ) ) : ( 0 sep text 144-144 ) : ( 0 rep ref:alphaNum 144-145 | ( 0 rule:alphaNum choice 144-145 | ( 0 ch:0 ref:alpha 144-145 | ( 0 rule:alpha choice 144-145 | ( 0 ch:0 char-range 144-145 ) ) ) ) ) : ( 0 sep text 145-145 ) : ( 0 rep ref:alphaNum 145-146 | ( 0 rule:alphaNum choice 145-146 | ( 0 ch:0 ref:alpha 145-146 | ( 0 rule:alpha choice 145-146 | ( 0 ch:0 char-range 145-146 ) ) ) ) ) : ( 0 sep text 146-146 ) : ( 0 rep ref:alphaNum 146-147 | ( 0 rule:alphaNum choice 146-147 | ( 0 ch:0 ref:alpha 146-147 | ( 0 rule:alpha choice 146-147 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @146 > : ( 0 ch:1 char-range 146-147 ) ) ) ) ) : ( 0 sep text 147-147 ) : ( 0 rep ref:alphaNum 147-148 | ( 0 rule:alphaNum choice 147-148 | ( 0 ch:0 ref:alpha 147-148 | ( 0 rule:alpha choice 147-148 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @147 > : ( 0 ch:1 char-range 147-148 ) ) ) ) ) : ( 0 sep text 148-148 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @148 | < None of choices matched input :: rule:alphaNum choice @148 | < Rule `alpha` didn't match :: ch:0 ref:alpha @148 | < None of choices matched input :: rule:alpha choice @148 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @148 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @148 > : < Expected '_', but found ')' :: ch:2 text @148 > > > : < Rule `num` didn't match :: ch:1 ref:num @148 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @148 > > > > ) ) ) : ( 0 seq:5 text 148-149 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @149 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @149 | < Expected ',', but found '
' :: seq:0 text @149 > > > ) : ( 0 seq:7 ref:ws 149-150 | ( 0 rule:ws repsep 149-150 | ( 0 rep seqnc 149-149 | ( 0 seq:0 ref:spaces 149-149 | ( 0 rule:spaces repsep 149-149 | < Expected ' ', but found '
' :: rep text @149 > ) ) : ( 0 seq:1 choice 149-149 | < Rule `comment` didn't match :: ch:0 ref:comment @149 | < Sequence failed at entry 0 :: rule:comment seqnc @149 | < Expected '#', but found '
' :: seq:0 text @149 > > > : ( 0 ch:1 text 149-149 ) ) ) : ( 0 sep text 149-150 ) : ( 0 rep seqnc 150-150 | ( 0 seq:0 ref:spaces 150-150 | ( 0 rule:spaces repsep 150-150 | < Expected ' ', but found '}' :: rep text @150 > ) ) : ( 0 seq:1 choice 150-150 | < Rule `comment` didn't match :: ch:0 ref:comment @150 | < Sequence failed at entry 0 :: rule:comment seqnc @150 | < Expected '#', but found '}' :: seq:0 text @150 > > > : ( 0 ch:1 text 150-150 ) ) ) : < Expected '
', but found '}' :: sep text @150 > ) ) : ( 0 seq:8 text 150-151 ) ) ) ) ) : ( 0 sep ref:ws 151-152 | ( 0 rule:ws repsep 151-152 | ( 0 rep seqnc 151-151 | ( 0 seq:0 ref:spaces 151-151 | ( 0 rule:spaces repsep 151-151 | < Expected ' ', but found '
' :: rep text @151 > ) ) : ( 0 seq:1 choice 151-151 | < Rule `comment` didn't match :: ch:0 ref:comment @151 | < Sequence failed at entry 0 :: rule:comment seqnc @151 | < Expected '#', but found '
' :: seq:0 text @151 > > > : ( 0 ch:1 text 151-151 ) ) ) : ( 0 sep text 151-152 ) : ( 0 rep seqnc 152-152 | ( 0 seq:0 ref:spaces 152-152 | ( 0 rule:spaces repsep 152-152 | < Expected ' ', but found 't' :: rep text @152 > ) ) : ( 0 seq:1 choice 152-152 | < Rule `comment` didn't match :: ch:0 ref:comment @152 | < Sequence failed at entry 0 :: rule:comment seqnc @152 | < Expected '#', but found 't' :: seq:0 text @152 > > > : ( 0 ch:1 text 152-152 ) ) ) : < Expected '
', but found 't' :: sep text @152 > ) ) : ( 0 rep ref:declaration 152-221 | ( 0 rule:declaration choice 152-221 | < Rule `rule` didn't match :: ch:0 ref:rule @152 | < Sequence failed at entry 0 :: rule:rule seqnc @152 | < Rule `defKW` didn't match :: seq:0 ref:defKW @152 | < Expected 'def', but found 'tab' :: rule:defKW text @152 > > > > : ( 0 ch:1 ref:tableDecl 152-221 | ( 0 rule:tableDecl seqnc 152-221 | ( 0 seq:0 ref:tableKW 152-157 | ( 0 rule:tableKW text 152-157 ) ) : ( 0 seq:1 ref:ws 157-158 | ( 0 rule:ws repsep 157-158 | ( 0 rep seqnc 157-158 | ( 0 seq:0 ref:spaces 157-158 | ( 0 rule:spaces repsep 157-158 | ( 0 rep text 157-158 ) : ( 0 sep text 158-158 ) : < Expected ' ', but found 'a' :: rep text @158 > ) ) : ( 0 seq:1 choice 158-158 | < Rule `comment` didn't match :: ch:0 ref:comment @158 | < Sequence failed at entry 0 :: rule:comment seqnc @158 | < Expected '#', but found 'a' :: seq:0 text @158 > > > : ( 0 ch:1 text 158-158 ) ) ) : < Expected '
', but found 'a' :: sep text @158 > ) ) : ( 0 seq:2 ref:name 158-168 | ( 0 rule:qualifier repsep 158-168 | ( 0 rep ref:ident 158-161 | ( 0 rule:ident seqnc 158-161 | ( 0 seq:0 ref:alpha 158-159 | ( 0 rule:alpha choice 158-159 | ( 0 ch:0 char-range 158-159 ) ) ) : ( 0 seq:1 repsep 159-161 | ( 0 rep ref:alphaNum 159-160 | ( 0 rule:alphaNum choice 159-160 | ( 0 ch:0 ref:alpha 159-160 | ( 0 rule:alpha choice 159-160 | ( 0 ch:0 char-range 159-160 ) ) ) ) ) : ( 0 sep text 160-160 ) : ( 0 rep ref:alphaNum 160-161 | ( 0 rule:alphaNum choice 160-161 | ( 0 ch:0 ref:alpha 160-161 | ( 0 rule:alpha choice 160-161 | ( 0 ch:0 char-range 160-161 ) ) ) ) ) : ( 0 sep text 161-161 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @161 | < None of choices matched input :: rule:alphaNum choice @161 | < Rule `alpha` didn't match :: ch:0 ref:alpha @161 | < None of choices matched input :: rule:alpha choice @161 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @161 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @161 > : < Expected '_', but found '.' :: ch:2 text @161 > > > : < Rule `num` didn't match :: ch:1 ref:num @161 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @161 > > > > ) ) ) : ( 0 sep text 161-162 ) : ( 0 rep ref:ident 162-168 | ( 0 rule:ident seqnc 162-168 | ( 0 seq:0 ref:alpha 162-163 | ( 0 rule:alpha choice 162-163 | ( 0 ch:0 char-range 162-163 ) ) ) : ( 0 seq:1 repsep 163-168 | ( 0 rep ref:alphaNum 163-164 | ( 0 rule:alphaNum choice 163-164 | ( 0 ch:0 ref:alpha 163-164 | ( 0 rule:alpha choice 163-164 | ( 0 ch:0 char-range 163-164 ) ) ) ) ) : ( 0 sep text 164-164 ) : ( 0 rep ref:alphaNum 164-165 | ( 0 rule:alphaNum choice 164-165 | ( 0 ch:0 ref:alpha 164-165 | ( 0 rule:alpha choice 164-165 | ( 0 ch:0 char-range 164-165 ) ) ) ) ) : ( 0 sep text 165-165 ) : ( 0 rep ref:alphaNum 165-166 | ( 0 rule:alphaNum choice 165-166 | ( 0 ch:0 ref:alpha 165-166 | ( 0 rule:alpha choice 165-166 | ( 0 ch:0 char-range 165-166 ) ) ) ) ) : ( 0 sep text 166-166 ) : ( 0 rep ref:alphaNum 166-167 | ( 0 rule:alphaNum choice 166-167 | ( 0 ch:0 ref:alpha 166-167 | ( 0 rule:alpha choice 166-167 | ( 0 ch:0 char-range 166-167 ) ) ) ) ) : ( 0 sep text 167-167 ) : ( 0 rep ref:alphaNum 167-168 | ( 0 rule:alphaNum choice 167-168 | ( 0 ch:0 ref:alpha 167-168 | ( 0 rule:alpha choice 167-168 | ( 0 ch:0 char-range 167-168 ) ) ) ) ) : ( 0 sep text 168-168 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @168 | < None of choices matched input :: rule:alphaNum choice @168 | < Rule `alpha` didn't match :: ch:0 ref:alpha @168 | < None of choices matched input :: rule:alpha choice @168 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @168 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @168 > : < Expected '_', but found ' ' :: ch:2 text @168 > > > : < Rule `num` didn't match :: ch:1 ref:num @168 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @168 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @168 > ) ) : ( 0 seq:3 ref:ws 168-169 | ( 0 rule:ws repsep 168-169 | ( 0 rep seqnc 168-169 | ( 0 seq:0 ref:spaces 168-169 | ( 0 rule:spaces repsep 168-169 | ( 0 rep text 168-169 ) : ( 0 sep text 169-169 ) : < Expected ' ', but found '{' :: rep text @169 > ) ) : ( 0 seq:1 choice 169-169 | < Rule `comment` didn't match :: ch:0 ref:comment @169 | < Sequence failed at entry 0 :: rule:comment seqnc @169 | < Expected '#', but found '{' :: seq:0 text @169 > > > : ( 0 ch:1 text 169-169 ) ) ) : < Expected '
', but found '{' :: sep text @169 > ) ) : ( 0 seq:4 text 169-170 ) : ( 0 seq:5 ref:ws 170-173 | ( 0 rule:ws repsep 170-173 | ( 0 rep seqnc 170-170 | ( 0 seq:0 ref:spaces 170-170 | ( 0 rule:spaces repsep 170-170 | < Expected ' ', but found '
' :: rep text @170 > ) ) : ( 0 seq:1 choice 170-170 | < Rule `comment` didn't match :: ch:0 ref:comment @170 | < Sequence failed at entry 0 :: rule:comment seqnc @170 | < Expected '#', but found '
' :: seq:0 text @170 > > > : ( 0 ch:1 text 170-170 ) ) ) : ( 0 sep text 170-171 ) : ( 0 rep seqnc 171-173 | ( 0 seq:0 ref:spaces 171-173 | ( 0 rule:spaces repsep 171-173 | ( 0 rep text 171-172 ) : ( 0 sep text 172-172 ) : ( 0 rep text 172-173 ) : ( 0 sep text 173-173 ) : < Expected ' ', but found 'i' :: rep text @173 > ) ) : ( 0 seq:1 choice 173-173 | < Rule `comment` didn't match :: ch:0 ref:comment @173 | < Sequence failed at entry 0 :: rule:comment seqnc @173 | < Expected '#', but found 'i' :: seq:0 text @173 > > > : ( 0 ch:1 text 173-173 ) ) ) : < Expected '
', but found 'i' :: sep text @173 > ) ) : ( 0 seq:6 repsep 173-219 | ( 0 rep ref:tableAttr 173-175 | ( 0 rule:tableAttr seqnc 173-175 | ( 0 seq:0 ref:ident 173-175 | ( 0 rule:ident seqnc 173-175 | ( 0 seq:0 ref:alpha 173-174 | ( 0 rule:alpha choice 173-174 | ( 0 ch:0 char-range 173-174 ) ) ) : ( 0 seq:1 repsep 174-175 | ( 0 rep ref:alphaNum 174-175 | ( 0 rule:alphaNum choice 174-175 | ( 0 ch:0 ref:alpha 174-175 | ( 0 rule:alpha choice 174-175 | ( 0 ch:0 char-range 174-175 ) ) ) ) ) : ( 0 sep text 175-175 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @175 | < None of choices matched input :: rule:alphaNum choice @175 | < Rule `alpha` didn't match :: ch:0 ref:alpha @175 | < None of choices matched input :: rule:alpha choice @175 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @175 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @175 > : < Expected '_', but found ',' :: ch:2 text @175 > > > : < Rule `num` didn't match :: ch:1 ref:num @175 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @175 > > > > ) ) ) : ( 0 seq:1 choice 175-175 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @175 | < Sequence failed at entry 0 :: rule:refSpec seqnc @175 | < Expected ':', but found ',' :: seq:0 text @175 > > > : ( 0 ch:1 text 175-175 ) ) ) ) : ( 0 sep ref:commaSpace 175-179 | ( 0 rule:commaSpace seqnc 175-179 | ( 0 seq:0 text 175-176 ) : ( 0 seq:1 ref:ws 176-179 | ( 0 rule:ws repsep 176-179 | ( 0 rep seqnc 176-176 | ( 0 seq:0 ref:spaces 176-176 | ( 0 rule:spaces repsep 176-176 | < Expected ' ', but found '
' :: rep text @176 > ) ) : ( 0 seq:1 choice 176-176 | < Rule `comment` didn't match :: ch:0 ref:comment @176 | < Sequence failed at entry 0 :: rule:comment seqnc @176 | < Expected '#', but found '
' :: seq:0 text @176 > > > : ( 0 ch:1 text 176-176 ) ) ) : ( 0 sep text 176-177 ) : ( 0 rep seqnc 177-179 | ( 0 seq:0 ref:spaces 177-179 | ( 0 rule:spaces repsep 177-179 | ( 0 rep text 177-178 ) : ( 0 sep text 178-178 ) : ( 0 rep text 178-179 ) : ( 0 sep text 179-179 ) : < Expected ' ', but found 'p' :: rep text @179 > ) ) : ( 0 seq:1 choice 179-179 | < Rule `comment` didn't match :: ch:0 ref:comment @179 | < Sequence failed at entry 0 :: rule:comment seqnc @179 | < Expected '#', but found 'p' :: seq:0 text @179 > > > : ( 0 ch:1 text 179-179 ) ) ) : < Expected '
', but found 'p' :: sep text @179 > ) ) ) ) : ( 0 rep ref:tableAttr 179-187 | ( 0 rule:tableAttr seqnc 179-187 | ( 0 seq:0 ref:ident 179-187 | ( 0 rule:ident seqnc 179-187 | ( 0 seq:0 ref:alpha 179-180 | ( 0 rule:alpha choice 179-180 | ( 0 ch:0 char-range 179-180 ) ) ) : ( 0 seq:1 repsep 180-187 | ( 0 rep ref:alphaNum 180-181 | ( 0 rule:alphaNum choice 180-181 | ( 0 ch:0 ref:alpha 180-181 | ( 0 rule:alpha choice 180-181 | ( 0 ch:0 char-range 180-181 ) ) ) ) ) : ( 0 sep text 181-181 ) : ( 0 rep ref:alphaNum 181-182 | ( 0 rule:alphaNum choice 181-182 | ( 0 ch:0 ref:alpha 181-182 | ( 0 rule:alpha choice 181-182 | ( 0 ch:0 char-range 181-182 ) ) ) ) ) : ( 0 sep text 182-182 ) : ( 0 rep ref:alphaNum 182-183 | ( 0 rule:alphaNum choice 182-183 | ( 0 ch:0 ref:alpha 182-183 | ( 0 rule:alpha choice 182-183 | ( 0 ch:0 char-range 182-183 ) ) ) ) ) : ( 0 sep text 183-183 ) : ( 0 rep ref:alphaNum 183-184 | ( 0 rule:alphaNum choice 183-184 | ( 0 ch:0 ref:alpha 183-184 | ( 0 rule:alpha choice 183-184 | ( 0 ch:0 char-range 183-184 ) ) ) ) ) : ( 0 sep text 184-184 ) : ( 0 rep ref:alphaNum 184-185 | ( 0 rule:alphaNum choice 184-185 | ( 0 ch:0 ref:alpha 184-185 | ( 0 rule:alpha choice 184-185 | ( 0 ch:0 char-range 184-185 ) ) ) ) ) : ( 0 sep text 185-185 ) : ( 0 rep ref:alphaNum 185-186 | ( 0 rule:alphaNum choice 185-186 | ( 0 ch:0 ref:alpha 185-186 | ( 0 rule:alpha choice 185-186 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @185 > : ( 0 ch:1 char-range 185-186 ) ) ) ) ) : ( 0 sep text 186-186 ) : ( 0 rep ref:alphaNum 186-187 | ( 0 rule:alphaNum choice 186-187 | ( 0 ch:0 ref:alpha 186-187 | ( 0 rule:alpha choice 186-187 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @186 > : ( 0 ch:1 char-range 186-187 ) ) ) ) ) : ( 0 sep text 187-187 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @187 | < None of choices matched input :: rule:alphaNum choice @187 | < Rule `alpha` didn't match :: ch:0 ref:alpha @187 | < None of choices matched input :: rule:alpha choice @187 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @187 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @187 > : < Expected '_', but found ',' :: ch:2 text @187 > > > : < Rule `num` didn't match :: ch:1 ref:num @187 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @187 > > > > ) ) ) : ( 0 seq:1 choice 187-187 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @187 | < Sequence failed at entry 0 :: rule:refSpec seqnc @187 | < Expected ':', but found ',' :: seq:0 text @187 > > > : ( 0 ch:1 text 187-187 ) ) ) ) : ( 0 sep ref:commaSpace 187-191 | ( 0 rule:commaSpace seqnc 187-191 | ( 0 seq:0 text 187-188 ) : ( 0 seq:1 ref:ws 188-191 | ( 0 rule:ws repsep 188-191 | ( 0 rep seqnc 188-188 | ( 0 seq:0 ref:spaces 188-188 | ( 0 rule:spaces repsep 188-188 | < Expected ' ', but found '
' :: rep text @188 > ) ) : ( 0 seq:1 choice 188-188 | < Rule `comment` didn't match :: ch:0 ref:comment @188 | < Sequence failed at entry 0 :: rule:comment seqnc @188 | < Expected '#', but found '
' :: seq:0 text @188 > > > : ( 0 ch:1 text 188-188 ) ) ) : ( 0 sep text 188-189 ) : ( 0 rep seqnc 189-191 | ( 0 seq:0 ref:spaces 189-191 | ( 0 rule:spaces repsep 189-191 | ( 0 rep text 189-190 ) : ( 0 sep text 190-190 ) : ( 0 rep text 190-191 ) : ( 0 sep text 191-191 ) : < Expected ' ', but found 'i' :: rep text @191 > ) ) : ( 0 seq:1 choice 191-191 | < Rule `comment` didn't match :: ch:0 ref:comment @191 | < Sequence failed at entry 0 :: rule:comment seqnc @191 | < Expected '#', but found 'i' :: seq:0 text @191 > > > : ( 0 ch:1 text 191-191 ) ) ) : < Expected '
', but found 'i' :: sep text @191 > ) ) ) ) : ( 0 rep ref:tableAttr 191-219 | ( 0 rule:tableAttr seqnc 191-219 | ( 0 seq:0 ref:ident 191-196 | ( 0 rule:ident seqnc 191-196 | ( 0 seq:0 ref:alpha 191-192 | ( 0 rule:alpha choice 191-192 | ( 0 ch:0 char-range 191-192 ) ) ) : ( 0 seq:1 repsep 192-196 | ( 0 rep ref:alphaNum 192-193 | ( 0 rule:alphaNum choice 192-193 | ( 0 ch:0 ref:alpha 192-193 | ( 0 rule:alpha choice 192-193 | ( 0 ch:0 char-range 192-193 ) ) ) ) ) : ( 0 sep text 193-193 ) : ( 0 rep ref:alphaNum 193-194 | ( 0 rule:alphaNum choice 193-194 | ( 0 ch:0 ref:alpha 193-194 | ( 0 rule:alpha choice 193-194 | ( 0 ch:0 char-range 193-194 ) ) ) ) ) : ( 0 sep text 194-194 ) : ( 0 rep ref:alphaNum 194-195 | ( 0 rule:alphaNum choice 194-195 | ( 0 ch:0 ref:alpha 194-195 | ( 0 rule:alpha choice 194-195 | ( 0 ch:0 char-range 194-195 ) ) ) ) ) : ( 0 sep text 195-195 ) : ( 0 rep ref:alphaNum 195-196 | ( 0 rule:alphaNum choice 195-196 | ( 0 ch:0 ref:alpha 195-196 | ( 0 rule:alpha choice 195-196 | ( 0 ch:0 char-range 195-196 ) ) ) ) ) : ( 0 sep text 196-196 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @196 | < None of choices matched input :: rule:alphaNum choice @196 | < Rule `alpha` didn't match :: ch:0 ref:alpha @196 | < None of choices matched input :: rule:alpha choice @196 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @196 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @196 > : < Expected '_', but found ':' :: ch:2 text @196 > > > : < Rule `num` didn't match :: ch:1 ref:num @196 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @196 > > > > ) ) ) : ( 0 seq:1 choice 196-219 | ( 0 ch:0 ref:refSpec 196-219 | ( 0 rule:refSpec seqnc 196-219 | ( 0 seq:0 text 196-197 ) : ( 0 seq:1 ref:ws 197-198 | ( 0 rule:ws repsep 197-198 | ( 0 rep seqnc 197-198 | ( 0 seq:0 ref:spaces 197-198 | ( 0 rule:spaces repsep 197-198 | ( 0 rep text 197-198 ) : ( 0 sep text 198-198 ) : < Expected ' ', but found 'i' :: rep text @198 > ) ) : ( 0 seq:1 choice 198-198 | < Rule `comment` didn't match :: ch:0 ref:comment @198 | < Sequence failed at entry 0 :: rule:comment seqnc @198 | < Expected '#', but found 'i' :: seq:0 text @198 > > > : ( 0 ch:1 text 198-198 ) ) ) : < Expected '
', but found 'i' :: sep text @198 > ) ) : ( 0 seq:2 choice 198-219 | < Rule `outRef` didn't match :: ch:0 ref:outRef @198 | < Sequence failed at entry 0 :: rule:outRef seqnc @198 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @198 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @198 > > > > : ( 0 ch:1 ref:inRef 198-219 | ( 0 rule:inRef seqnc 198-219 | ( 0 seq:0 ref:inRefKW 198-203 | ( 0 rule:inRefKW text 198-203 ) ) : ( 0 seq:1 text 203-204 ) : ( 0 seq:2 ref:table 204-209 | ( 0 rule:qualifier repsep 204-209 | ( 0 rep ref:ident 204-209 | ( 0 rule:ident seqnc 204-209 | ( 0 seq:0 ref:alpha 204-205 | ( 0 rule:alpha choice 204-205 | ( 0 ch:0 char-range 204-205 ) ) ) : ( 0 seq:1 repsep 205-209 | ( 0 rep ref:alphaNum 205-206 | ( 0 rule:alphaNum choice 205-206 | ( 0 ch:0 ref:alpha 205-206 | ( 0 rule:alpha choice 205-206 | ( 0 ch:0 char-range 205-206 ) ) ) ) ) : ( 0 sep text 206-206 ) : ( 0 rep ref:alphaNum 206-207 | ( 0 rule:alphaNum choice 206-207 | ( 0 ch:0 ref:alpha 206-207 | ( 0 rule:alpha choice 206-207 | ( 0 ch:0 char-range 206-207 ) ) ) ) ) : ( 0 sep text 207-207 ) : ( 0 rep ref:alphaNum 207-208 | ( 0 rule:alphaNum choice 207-208 | ( 0 ch:0 ref:alpha 207-208 | ( 0 rule:alpha choice 207-208 | ( 0 ch:0 char-range 207-208 ) ) ) ) ) : ( 0 sep text 208-208 ) : ( 0 rep ref:alphaNum 208-209 | ( 0 rule:alphaNum choice 208-209 | ( 0 ch:0 ref:alpha 208-209 | ( 0 rule:alpha choice 208-209 | ( 0 ch:0 char-range 208-209 ) ) ) ) ) : ( 0 sep text 209-209 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @209 | < None of choices matched input :: rule:alphaNum choice @209 | < Rule `alpha` didn't match :: ch:0 ref:alpha @209 | < None of choices matched input :: rule:alpha choice @209 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @209 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @209 > : < Expected '_', but found ':' :: ch:2 text @209 > > > : < Rule `num` didn't match :: ch:1 ref:num @209 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @209 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @209 > ) ) : ( 0 seq:3 text 209-210 ) : ( 0 seq:4 ref:col 210-218 | ( 0 rule:ident seqnc 210-218 | ( 0 seq:0 ref:alpha 210-211 | ( 0 rule:alpha choice 210-211 | ( 0 ch:0 char-range 210-211 ) ) ) : ( 0 seq:1 repsep 211-218 | ( 0 rep ref:alphaNum 211-212 | ( 0 rule:alphaNum choice 211-212 | ( 0 ch:0 ref:alpha 211-212 | ( 0 rule:alpha choice 211-212 | ( 0 ch:0 char-range 211-212 ) ) ) ) ) : ( 0 sep text 212-212 ) : ( 0 rep ref:alphaNum 212-213 | ( 0 rule:alphaNum choice 212-213 | ( 0 ch:0 ref:alpha 212-213 | ( 0 rule:alpha choice 212-213 | ( 0 ch:0 char-range 212-213 ) ) ) ) ) : ( 0 sep text 213-213 ) : ( 0 rep ref:alphaNum 213-214 | ( 0 rule:alphaNum choice 213-214 | ( 0 ch:0 ref:alpha 213-214 | ( 0 rule:alpha choice 213-214 | ( 0 ch:0 char-range 213-214 ) ) ) ) ) : ( 0 sep text 214-214 ) : ( 0 rep ref:alphaNum 214-215 | ( 0 rule:alphaNum choice 214-215 | ( 0 ch:0 ref:alpha 214-215 | ( 0 rule:alpha choice 214-215 | ( 0 ch:0 char-range 214-215 ) ) ) ) ) : ( 0 sep text 215-215 ) : ( 0 rep ref:alphaNum 215-216 | ( 0 rule:alphaNum choice 215-216 | ( 0 ch:0 ref:alpha 215-216 | ( 0 rule:alpha choice 215-216 | ( 0 ch:0 char-range 215-216 ) ) ) ) ) : ( 0 sep text 216-216 ) : ( 0 rep ref:alphaNum 216-217 | ( 0 rule:alphaNum choice 216-217 | ( 0 ch:0 ref:alpha 216-217 | ( 0 rule:alpha choice 216-217 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @216 > : ( 0 ch:1 char-range 216-217 ) ) ) ) ) : ( 0 sep text 217-217 ) : ( 0 rep ref:alphaNum 217-218 | ( 0 rule:alphaNum choice 217-218 | ( 0 ch:0 ref:alpha 217-218 | ( 0 rule:alpha choice 217-218 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @217 > : ( 0 ch:1 char-range 217-218 ) ) ) ) ) : ( 0 sep text 218-218 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @218 | < None of choices matched input :: rule:alphaNum choice @218 | < Rule `alpha` didn't match :: ch:0 ref:alpha @218 | < None of choices matched input :: rule:alpha choice @218 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @218 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @218 > : < Expected '_', but found ')' :: ch:2 text @218 > > > : < Rule `num` didn't match :: ch:1 ref:num @218 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @218 > > > > ) ) ) : ( 0 seq:5 text 218-219 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @219 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @219 | < Expected ',', but found '
' :: seq:0 text @219 > > > ) : ( 0 seq:7 ref:ws 219-220 | ( 0 rule:ws repsep 219-220 | ( 0 rep seqnc 219-219 | ( 0 seq:0 ref:spaces 219-219 | ( 0 rule:spaces repsep 219-219 | < Expected ' ', but found '
' :: rep text @219 > ) ) : ( 0 seq:1 choice 219-219 | < Rule `comment` didn't match :: ch:0 ref:comment @219 | < Sequence failed at entry 0 :: rule:comment seqnc @219 | < Expected '#', but found '
' :: seq:0 text @219 > > > : ( 0 ch:1 text 219-219 ) ) ) : ( 0 sep text 219-220 ) : ( 0 rep seqnc 220-220 | ( 0 seq:0 ref:spaces 220-220 | ( 0 rule:spaces repsep 220-220 | < Expected ' ', but found '}' :: rep text @220 > ) ) : ( 0 seq:1 choice 220-220 | < Rule `comment` didn't match :: ch:0 ref:comment @220 | < Sequence failed at entry 0 :: rule:comment seqnc @220 | < Expected '#', but found '}' :: seq:0 text @220 > > > : ( 0 ch:1 text 220-220 ) ) ) : < Expected '
', but found '}' :: sep text @220 > ) ) : ( 0 seq:8 text 220-221 ) ) ) ) ) : ( 0 sep ref:ws 221-222 | ( 0 rule:ws repsep 221-222 | ( 0 rep seqnc 221-221 | ( 0 seq:0 ref:spaces 221-221 | ( 0 rule:spaces repsep 221-221 | < Expected ' ', but found '
' :: rep text @221 > ) ) : ( 0 seq:1 choice 221-221 | < Rule `comment` didn't match :: ch:0 ref:comment @221 | < Sequence failed at entry 0 :: rule:comment seqnc @221 | < Expected '#', but found '
' :: seq:0 text @221 > > > : ( 0 ch:1 text 221-221 ) ) ) : ( 0 sep text 221-222 ) : ( 0 rep seqnc 222-222 | ( 0 seq:0 ref:spaces 222-222 | ( 0 rule:spaces repsep 222-222 | < Expected ' ', but found 't' :: rep text @222 > ) ) : ( 0 seq:1 choice 222-222 | < Rule `comment` didn't match :: ch:0 ref:comment @222 | < Sequence failed at entry 0 :: rule:comment seqnc @222 | < Expected '#', but found 't' :: seq:0 text @222 > > > : ( 0 ch:1 text 222-222 ) ) ) : < Expected '
', but found 't' :: sep text @222 > ) ) : ( 0 rep ref:declaration 222-305 | ( 0 rule:declaration choice 222-305 | < Rule `rule` didn't match :: ch:0 ref:rule @222 | < Sequence failed at entry 0 :: rule:rule seqnc @222 | < Rule `defKW` didn't match :: seq:0 ref:defKW @222 | < Expected 'def', but found 'tab' :: rule:defKW text @222 > > > > : ( 0 ch:1 ref:tableDecl 222-305 | ( 0 rule:tableDecl seqnc 222-305 | ( 0 seq:0 ref:tableKW 222-227 | ( 0 rule:tableKW text 222-227 ) ) : ( 0 seq:1 ref:ws 227-228 | ( 0 rule:ws repsep 227-228 | ( 0 rep seqnc 227-228 | ( 0 seq:0 ref:spaces 227-228 | ( 0 rule:spaces repsep 227-228 | ( 0 rep text 227-228 ) : ( 0 sep text 228-228 ) : < Expected ' ', but found 'c' :: rep text @228 > ) ) : ( 0 seq:1 choice 228-228 | < Rule `comment` didn't match :: ch:0 ref:comment @228 | < Sequence failed at entry 0 :: rule:comment seqnc @228 | < Expected '#', but found 'c' :: seq:0 text @228 > > > : ( 0 ch:1 text 228-228 ) ) ) : < Expected '
', but found 'c' :: sep text @228 > ) ) : ( 0 seq:2 ref:name 228-248 | ( 0 rule:qualifier repsep 228-248 | ( 0 rep ref:ident 228-248 | ( 0 rule:ident seqnc 228-248 | ( 0 seq:0 ref:alpha 228-229 | ( 0 rule:alpha choice 228-229 | ( 0 ch:0 char-range 228-229 ) ) ) : ( 0 seq:1 repsep 229-248 | ( 0 rep ref:alphaNum 229-230 | ( 0 rule:alphaNum choice 229-230 | ( 0 ch:0 ref:alpha 229-230 | ( 0 rule:alpha choice 229-230 | ( 0 ch:0 char-range 229-230 ) ) ) ) ) : ( 0 sep text 230-230 ) : ( 0 rep ref:alphaNum 230-231 | ( 0 rule:alphaNum choice 230-231 | ( 0 ch:0 ref:alpha 230-231 | ( 0 rule:alpha choice 230-231 | ( 0 ch:0 char-range 230-231 ) ) ) ) ) : ( 0 sep text 231-231 ) : ( 0 rep ref:alphaNum 231-232 | ( 0 rule:alphaNum choice 231-232 | ( 0 ch:0 ref:alpha 231-232 | ( 0 rule:alpha choice 231-232 | ( 0 ch:0 char-range 231-232 ) ) ) ) ) : ( 0 sep text 232-232 ) : ( 0 rep ref:alphaNum 232-233 | ( 0 rule:alphaNum choice 232-233 | ( 0 ch:0 ref:alpha 232-233 | ( 0 rule:alpha choice 232-233 | ( 0 ch:0 char-range 232-233 ) ) ) ) ) : ( 0 sep text 233-233 ) : ( 0 rep ref:alphaNum 233-234 | ( 0 rule:alphaNum choice 233-234 | ( 0 ch:0 ref:alpha 233-234 | ( 0 rule:alpha choice 233-234 | ( 0 ch:0 char-range 233-234 ) ) ) ) ) : ( 0 sep text 234-234 ) : ( 0 rep ref:alphaNum 234-235 | ( 0 rule:alphaNum choice 234-235 | ( 0 ch:0 ref:alpha 234-235 | ( 0 rule:alpha choice 234-235 | ( 0 ch:0 char-range 234-235 ) ) ) ) ) : ( 0 sep text 235-235 ) : ( 0 rep ref:alphaNum 235-236 | ( 0 rule:alphaNum choice 235-236 | ( 0 ch:0 ref:alpha 235-236 | ( 0 rule:alpha choice 235-236 | ( 0 ch:0 char-range 235-236 ) ) ) ) ) : ( 0 sep text 236-236 ) : ( 0 rep ref:alphaNum 236-237 | ( 0 rule:alphaNum choice 236-237 | ( 0 ch:0 ref:alpha 236-237 | ( 0 rule:alpha choice 236-237 | ( 0 ch:0 char-range 236-237 ) ) ) ) ) : ( 0 sep text 237-237 ) : ( 0 rep ref:alphaNum 237-238 | ( 0 rule:alphaNum choice 237-238 | ( 0 ch:0 ref:alpha 237-238 | ( 0 rule:alpha choice 237-238 | ( 0 ch:0 char-range 237-238 ) ) ) ) ) : ( 0 sep text 238-238 ) : ( 0 rep ref:alphaNum 238-239 | ( 0 rule:alphaNum choice 238-239 | ( 0 ch:0 ref:alpha 238-239 | ( 0 rule:alpha choice 238-239 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @238 > : ( 0 ch:1 char-range 238-239 ) ) ) ) ) : ( 0 sep text 239-239 ) : ( 0 rep ref:alphaNum 239-240 | ( 0 rule:alphaNum choice 239-240 | ( 0 ch:0 ref:alpha 239-240 | ( 0 rule:alpha choice 239-240 | ( 0 ch:0 char-range 239-240 ) ) ) ) ) : ( 0 sep text 240-240 ) : ( 0 rep ref:alphaNum 240-241 | ( 0 rule:alphaNum choice 240-241 | ( 0 ch:0 ref:alpha 240-241 | ( 0 rule:alpha choice 240-241 | ( 0 ch:0 char-range 240-241 ) ) ) ) ) : ( 0 sep text 241-241 ) : ( 0 rep ref:alphaNum 241-242 | ( 0 rule:alphaNum choice 241-242 | ( 0 ch:0 ref:alpha 241-242 | ( 0 rule:alpha choice 241-242 | ( 0 ch:0 char-range 241-242 ) ) ) ) ) : ( 0 sep text 242-242 ) : ( 0 rep ref:alphaNum 242-243 | ( 0 rule:alphaNum choice 242-243 | ( 0 ch:0 ref:alpha 242-243 | ( 0 rule:alpha choice 242-243 | ( 0 ch:0 char-range 242-243 ) ) ) ) ) : ( 0 sep text 243-243 ) : ( 0 rep ref:alphaNum 243-244 | ( 0 rule:alphaNum choice 243-244 | ( 0 ch:0 ref:alpha 243-244 | ( 0 rule:alpha choice 243-244 | ( 0 ch:0 char-range 243-244 ) ) ) ) ) : ( 0 sep text 244-244 ) : ( 0 rep ref:alphaNum 244-245 | ( 0 rule:alphaNum choice 244-245 | ( 0 ch:0 ref:alpha 244-245 | ( 0 rule:alpha choice 244-245 | ( 0 ch:0 char-range 244-245 ) ) ) ) ) : ( 0 sep text 245-245 ) : ( 0 rep ref:alphaNum 245-246 | ( 0 rule:alphaNum choice 245-246 | ( 0 ch:0 ref:alpha 245-246 | ( 0 rule:alpha choice 245-246 | ( 0 ch:0 char-range 245-246 ) ) ) ) ) : ( 0 sep text 246-246 ) : ( 0 rep ref:alphaNum 246-247 | ( 0 rule:alphaNum choice 246-247 | ( 0 ch:0 ref:alpha 246-247 | ( 0 rule:alpha choice 246-247 | ( 0 ch:0 char-range 246-247 ) ) ) ) ) : ( 0 sep text 247-247 ) : ( 0 rep ref:alphaNum 247-248 | ( 0 rule:alphaNum choice 247-248 | ( 0 ch:0 ref:alpha 247-248 | ( 0 rule:alpha choice 247-248 | ( 0 ch:0 char-range 247-248 ) ) ) ) ) : ( 0 sep text 248-248 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @248 | < None of choices matched input :: rule:alphaNum choice @248 | < Rule `alpha` didn't match :: ch:0 ref:alpha @248 | < None of choices matched input :: rule:alpha choice @248 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @248 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @248 > : < Expected '_', but found ' ' :: ch:2 text @248 > > > : < Rule `num` didn't match :: ch:1 ref:num @248 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @248 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @248 > ) ) : ( 0 seq:3 ref:ws 248-249 | ( 0 rule:ws repsep 248-249 | ( 0 rep seqnc 248-249 | ( 0 seq:0 ref:spaces 248-249 | ( 0 rule:spaces repsep 248-249 | ( 0 rep text 248-249 ) : ( 0 sep text 249-249 ) : < Expected ' ', but found '{' :: rep text @249 > ) ) : ( 0 seq:1 choice 249-249 | < Rule `comment` didn't match :: ch:0 ref:comment @249 | < Sequence failed at entry 0 :: rule:comment seqnc @249 | < Expected '#', but found '{' :: seq:0 text @249 > > > : ( 0 ch:1 text 249-249 ) ) ) : < Expected '
', but found '{' :: sep text @249 > ) ) : ( 0 seq:4 text 249-250 ) : ( 0 seq:5 ref:ws 250-253 | ( 0 rule:ws repsep 250-253 | ( 0 rep seqnc 250-250 | ( 0 seq:0 ref:spaces 250-250 | ( 0 rule:spaces repsep 250-250 | < Expected ' ', but found '
' :: rep text @250 > ) ) : ( 0 seq:1 choice 250-250 | < Rule `comment` didn't match :: ch:0 ref:comment @250 | < Sequence failed at entry 0 :: rule:comment seqnc @250 | < Expected '#', but found '
' :: seq:0 text @250 > > > : ( 0 ch:1 text 250-250 ) ) ) : ( 0 sep text 250-251 ) : ( 0 rep seqnc 251-253 | ( 0 seq:0 ref:spaces 251-253 | ( 0 rule:spaces repsep 251-253 | ( 0 rep text 251-252 ) : ( 0 sep text 252-252 ) : ( 0 rep text 252-253 ) : ( 0 sep text 253-253 ) : < Expected ' ', but found 'p' :: rep text @253 > ) ) : ( 0 seq:1 choice 253-253 | < Rule `comment` didn't match :: ch:0 ref:comment @253 | < Sequence failed at entry 0 :: rule:comment seqnc @253 | < Expected '#', but found 'p' :: seq:0 text @253 > > > : ( 0 ch:1 text 253-253 ) ) ) : < Expected '
', but found 'p' :: sep text @253 > ) ) : ( 0 seq:6 repsep 253-303 | ( 0 rep ref:tableAttr 253-261 | ( 0 rule:tableAttr seqnc 253-261 | ( 0 seq:0 ref:ident 253-261 | ( 0 rule:ident seqnc 253-261 | ( 0 seq:0 ref:alpha 253-254 | ( 0 rule:alpha choice 253-254 | ( 0 ch:0 char-range 253-254 ) ) ) : ( 0 seq:1 repsep 254-261 | ( 0 rep ref:alphaNum 254-255 | ( 0 rule:alphaNum choice 254-255 | ( 0 ch:0 ref:alpha 254-255 | ( 0 rule:alpha choice 254-255 | ( 0 ch:0 char-range 254-255 ) ) ) ) ) : ( 0 sep text 255-255 ) : ( 0 rep ref:alphaNum 255-256 | ( 0 rule:alphaNum choice 255-256 | ( 0 ch:0 ref:alpha 255-256 | ( 0 rule:alpha choice 255-256 | ( 0 ch:0 char-range 255-256 ) ) ) ) ) : ( 0 sep text 256-256 ) : ( 0 rep ref:alphaNum 256-257 | ( 0 rule:alphaNum choice 256-257 | ( 0 ch:0 ref:alpha 256-257 | ( 0 rule:alpha choice 256-257 | ( 0 ch:0 char-range 256-257 ) ) ) ) ) : ( 0 sep text 257-257 ) : ( 0 rep ref:alphaNum 257-258 | ( 0 rule:alphaNum choice 257-258 | ( 0 ch:0 ref:alpha 257-258 | ( 0 rule:alpha choice 257-258 | ( 0 ch:0 char-range 257-258 ) ) ) ) ) : ( 0 sep text 258-258 ) : ( 0 rep ref:alphaNum 258-259 | ( 0 rule:alphaNum choice 258-259 | ( 0 ch:0 ref:alpha 258-259 | ( 0 rule:alpha choice 258-259 | ( 0 ch:0 char-range 258-259 ) ) ) ) ) : ( 0 sep text 259-259 ) : ( 0 rep ref:alphaNum 259-260 | ( 0 rule:alphaNum choice 259-260 | ( 0 ch:0 ref:alpha 259-260 | ( 0 rule:alpha choice 259-260 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @259 > : ( 0 ch:1 char-range 259-260 ) ) ) ) ) : ( 0 sep text 260-260 ) : ( 0 rep ref:alphaNum 260-261 | ( 0 rule:alphaNum choice 260-261 | ( 0 ch:0 ref:alpha 260-261 | ( 0 rule:alpha choice 260-261 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @260 > : ( 0 ch:1 char-range 260-261 ) ) ) ) ) : ( 0 sep text 261-261 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @261 | < None of choices matched input :: rule:alphaNum choice @261 | < Rule `alpha` didn't match :: ch:0 ref:alpha @261 | < None of choices matched input :: rule:alpha choice @261 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @261 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @261 > : < Expected '_', but found ',' :: ch:2 text @261 > > > : < Rule `num` didn't match :: ch:1 ref:num @261 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @261 > > > > ) ) ) : ( 0 seq:1 choice 261-261 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @261 | < Sequence failed at entry 0 :: rule:refSpec seqnc @261 | < Expected ':', but found ',' :: seq:0 text @261 > > > : ( 0 ch:1 text 261-261 ) ) ) ) : ( 0 sep ref:commaSpace 261-265 | ( 0 rule:commaSpace seqnc 261-265 | ( 0 seq:0 text 261-262 ) : ( 0 seq:1 ref:ws 262-265 | ( 0 rule:ws repsep 262-265 | ( 0 rep seqnc 262-262 | ( 0 seq:0 ref:spaces 262-262 | ( 0 rule:spaces repsep 262-262 | < Expected ' ', but found '
' :: rep text @262 > ) ) : ( 0 seq:1 choice 262-262 | < Rule `comment` didn't match :: ch:0 ref:comment @262 | < Sequence failed at entry 0 :: rule:comment seqnc @262 | < Expected '#', but found '
' :: seq:0 text @262 > > > : ( 0 ch:1 text 262-262 ) ) ) : ( 0 sep text 262-263 ) : ( 0 rep seqnc 263-265 | ( 0 seq:0 ref:spaces 263-265 | ( 0 rule:spaces repsep 263-265 | ( 0 rep text 263-264 ) : ( 0 sep text 264-264 ) : ( 0 rep text 264-265 ) : ( 0 sep text 265-265 ) : < Expected ' ', but found 's' :: rep text @265 > ) ) : ( 0 seq:1 choice 265-265 | < Rule `comment` didn't match :: ch:0 ref:comment @265 | < Sequence failed at entry 0 :: rule:comment seqnc @265 | < Expected '#', but found 's' :: seq:0 text @265 > > > : ( 0 ch:1 text 265-265 ) ) ) : < Expected '
', but found 's' :: sep text @265 > ) ) ) ) : ( 0 rep ref:tableAttr 265-303 | ( 0 rule:tableAttr seqnc 265-303 | ( 0 seq:0 ref:ident 265-275 | ( 0 rule:ident seqnc 265-275 | ( 0 seq:0 ref:alpha 265-266 | ( 0 rule:alpha choice 265-266 | ( 0 ch:0 char-range 265-266 ) ) ) : ( 0 seq:1 repsep 266-275 | ( 0 rep ref:alphaNum 266-267 | ( 0 rule:alphaNum choice 266-267 | ( 0 ch:0 ref:alpha 266-267 | ( 0 rule:alpha choice 266-267 | ( 0 ch:0 char-range 266-267 ) ) ) ) ) : ( 0 sep text 267-267 ) : ( 0 rep ref:alphaNum 267-268 | ( 0 rule:alphaNum choice 267-268 | ( 0 ch:0 ref:alpha 267-268 | ( 0 rule:alpha choice 267-268 | ( 0 ch:0 char-range 267-268 ) ) ) ) ) : ( 0 sep text 268-268 ) : ( 0 rep ref:alphaNum 268-269 | ( 0 rule:alphaNum choice 268-269 | ( 0 ch:0 ref:alpha 268-269 | ( 0 rule:alpha choice 268-269 | ( 0 ch:0 char-range 268-269 ) ) ) ) ) : ( 0 sep text 269-269 ) : ( 0 rep ref:alphaNum 269-270 | ( 0 rule:alphaNum choice 269-270 | ( 0 ch:0 ref:alpha 269-270 | ( 0 rule:alpha choice 269-270 | ( 0 ch:0 char-range 269-270 ) ) ) ) ) : ( 0 sep text 270-270 ) : ( 0 rep ref:alphaNum 270-271 | ( 0 rule:alphaNum choice 270-271 | ( 0 ch:0 ref:alpha 270-271 | ( 0 rule:alpha choice 270-271 | ( 0 ch:0 char-range 270-271 ) ) ) ) ) : ( 0 sep text 271-271 ) : ( 0 rep ref:alphaNum 271-272 | ( 0 rule:alphaNum choice 271-272 | ( 0 ch:0 ref:alpha 271-272 | ( 0 rule:alpha choice 271-272 | < Expected character in range from 'a' to 'z', but found 'E' :: ch:0 char-range @271 > : ( 0 ch:1 char-range 271-272 ) ) ) ) ) : ( 0 sep text 272-272 ) : ( 0 rep ref:alphaNum 272-273 | ( 0 rule:alphaNum choice 272-273 | ( 0 ch:0 ref:alpha 272-273 | ( 0 rule:alpha choice 272-273 | ( 0 ch:0 char-range 272-273 ) ) ) ) ) : ( 0 sep text 273-273 ) : ( 0 rep ref:alphaNum 273-274 | ( 0 rule:alphaNum choice 273-274 | ( 0 ch:0 ref:alpha 273-274 | ( 0 rule:alpha choice 273-274 | ( 0 ch:0 char-range 273-274 ) ) ) ) ) : ( 0 sep text 274-274 ) : ( 0 rep ref:alphaNum 274-275 | ( 0 rule:alphaNum choice 274-275 | ( 0 ch:0 ref:alpha 274-275 | ( 0 rule:alpha choice 274-275 | ( 0 ch:0 char-range 274-275 ) ) ) ) ) : ( 0 sep text 275-275 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @275 | < None of choices matched input :: rule:alphaNum choice @275 | < Rule `alpha` didn't match :: ch:0 ref:alpha @275 | < None of choices matched input :: rule:alpha choice @275 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @275 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @275 > : < Expected '_', but found ':' :: ch:2 text @275 > > > : < Rule `num` didn't match :: ch:1 ref:num @275 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @275 > > > > ) ) ) : ( 0 seq:1 choice 275-303 | ( 0 ch:0 ref:refSpec 275-303 | ( 0 rule:refSpec seqnc 275-303 | ( 0 seq:0 text 275-276 ) : ( 0 seq:1 ref:ws 276-277 | ( 0 rule:ws repsep 276-277 | ( 0 rep seqnc 276-277 | ( 0 seq:0 ref:spaces 276-277 | ( 0 rule:spaces repsep 276-277 | ( 0 rep text 276-277 ) : ( 0 sep text 277-277 ) : < Expected ' ', but found 'i' :: rep text @277 > ) ) : ( 0 seq:1 choice 277-277 | < Rule `comment` didn't match :: ch:0 ref:comment @277 | < Sequence failed at entry 0 :: rule:comment seqnc @277 | < Expected '#', but found 'i' :: seq:0 text @277 > > > : ( 0 ch:1 text 277-277 ) ) ) : < Expected '
', but found 'i' :: sep text @277 > ) ) : ( 0 seq:2 choice 277-303 | < Rule `outRef` didn't match :: ch:0 ref:outRef @277 | < Sequence failed at entry 0 :: rule:outRef seqnc @277 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @277 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @277 > > > > : ( 0 ch:1 ref:inRef 277-303 | ( 0 rule:inRef seqnc 277-303 | ( 0 seq:0 ref:inRefKW 277-282 | ( 0 rule:inRefKW text 277-282 ) ) : ( 0 seq:1 text 282-283 ) : ( 0 seq:2 ref:table 283-293 | ( 0 rule:qualifier repsep 283-293 | ( 0 rep ref:ident 283-293 | ( 0 rule:ident seqnc 283-293 | ( 0 seq:0 ref:alpha 283-284 | ( 0 rule:alpha choice 283-284 | ( 0 ch:0 char-range 283-284 ) ) ) : ( 0 seq:1 repsep 284-293 | ( 0 rep ref:alphaNum 284-285 | ( 0 rule:alphaNum choice 284-285 | ( 0 ch:0 ref:alpha 284-285 | ( 0 rule:alpha choice 284-285 | ( 0 ch:0 char-range 284-285 ) ) ) ) ) : ( 0 sep text 285-285 ) : ( 0 rep ref:alphaNum 285-286 | ( 0 rule:alphaNum choice 285-286 | ( 0 ch:0 ref:alpha 285-286 | ( 0 rule:alpha choice 285-286 | ( 0 ch:0 char-range 285-286 ) ) ) ) ) : ( 0 sep text 286-286 ) : ( 0 rep ref:alphaNum 286-287 | ( 0 rule:alphaNum choice 286-287 | ( 0 ch:0 ref:alpha 286-287 | ( 0 rule:alpha choice 286-287 | ( 0 ch:0 char-range 286-287 ) ) ) ) ) : ( 0 sep text 287-287 ) : ( 0 rep ref:alphaNum 287-288 | ( 0 rule:alphaNum choice 287-288 | ( 0 ch:0 ref:alpha 287-288 | ( 0 rule:alpha choice 287-288 | ( 0 ch:0 char-range 287-288 ) ) ) ) ) : ( 0 sep text 288-288 ) : ( 0 rep ref:alphaNum 288-289 | ( 0 rule:alphaNum choice 288-289 | ( 0 ch:0 ref:alpha 288-289 | ( 0 rule:alpha choice 288-289 | ( 0 ch:0 char-range 288-289 ) ) ) ) ) : ( 0 sep text 289-289 ) : ( 0 rep ref:alphaNum 289-290 | ( 0 rule:alphaNum choice 289-290 | ( 0 ch:0 ref:alpha 289-290 | ( 0 rule:alpha choice 289-290 | < Expected character in range from 'a' to 'z', but found 'E' :: ch:0 char-range @289 > : ( 0 ch:1 char-range 289-290 ) ) ) ) ) : ( 0 sep text 290-290 ) : ( 0 rep ref:alphaNum 290-291 | ( 0 rule:alphaNum choice 290-291 | ( 0 ch:0 ref:alpha 290-291 | ( 0 rule:alpha choice 290-291 | ( 0 ch:0 char-range 290-291 ) ) ) ) ) : ( 0 sep text 291-291 ) : ( 0 rep ref:alphaNum 291-292 | ( 0 rule:alphaNum choice 291-292 | ( 0 ch:0 ref:alpha 291-292 | ( 0 rule:alpha choice 291-292 | ( 0 ch:0 char-range 291-292 ) ) ) ) ) : ( 0 sep text 292-292 ) : ( 0 rep ref:alphaNum 292-293 | ( 0 rule:alphaNum choice 292-293 | ( 0 ch:0 ref:alpha 292-293 | ( 0 rule:alpha choice 292-293 | ( 0 ch:0 char-range 292-293 ) ) ) ) ) : ( 0 sep text 293-293 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @293 | < None of choices matched input :: rule:alphaNum choice @293 | < Rule `alpha` didn't match :: ch:0 ref:alpha @293 | < None of choices matched input :: rule:alpha choice @293 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @293 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @293 > : < Expected '_', but found ':' :: ch:2 text @293 > > > : < Rule `num` didn't match :: ch:1 ref:num @293 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @293 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @293 > ) ) : ( 0 seq:3 text 293-294 ) : ( 0 seq:4 ref:col 294-302 | ( 0 rule:ident seqnc 294-302 | ( 0 seq:0 ref:alpha 294-295 | ( 0 rule:alpha choice 294-295 | ( 0 ch:0 char-range 294-295 ) ) ) : ( 0 seq:1 repsep 295-302 | ( 0 rep ref:alphaNum 295-296 | ( 0 rule:alphaNum choice 295-296 | ( 0 ch:0 ref:alpha 295-296 | ( 0 rule:alpha choice 295-296 | ( 0 ch:0 char-range 295-296 ) ) ) ) ) : ( 0 sep text 296-296 ) : ( 0 rep ref:alphaNum 296-297 | ( 0 rule:alphaNum choice 296-297 | ( 0 ch:0 ref:alpha 296-297 | ( 0 rule:alpha choice 296-297 | ( 0 ch:0 char-range 296-297 ) ) ) ) ) : ( 0 sep text 297-297 ) : ( 0 rep ref:alphaNum 297-298 | ( 0 rule:alphaNum choice 297-298 | ( 0 ch:0 ref:alpha 297-298 | ( 0 rule:alpha choice 297-298 | ( 0 ch:0 char-range 297-298 ) ) ) ) ) : ( 0 sep text 298-298 ) : ( 0 rep ref:alphaNum 298-299 | ( 0 rule:alphaNum choice 298-299 | ( 0 ch:0 ref:alpha 298-299 | ( 0 rule:alpha choice 298-299 | ( 0 ch:0 char-range 298-299 ) ) ) ) ) : ( 0 sep text 299-299 ) : ( 0 rep ref:alphaNum 299-300 | ( 0 rule:alphaNum choice 299-300 | ( 0 ch:0 ref:alpha 299-300 | ( 0 rule:alpha choice 299-300 | ( 0 ch:0 char-range 299-300 ) ) ) ) ) : ( 0 sep text 300-300 ) : ( 0 rep ref:alphaNum 300-301 | ( 0 rule:alphaNum choice 300-301 | ( 0 ch:0 ref:alpha 300-301 | ( 0 rule:alpha choice 300-301 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @300 > : ( 0 ch:1 char-range 300-301 ) ) ) ) ) : ( 0 sep text 301-301 ) : ( 0 rep ref:alphaNum 301-302 | ( 0 rule:alphaNum choice 301-302 | ( 0 ch:0 ref:alpha 301-302 | ( 0 rule:alpha choice 301-302 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @301 > : ( 0 ch:1 char-range 301-302 ) ) ) ) ) : ( 0 sep text 302-302 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @302 | < None of choices matched input :: rule:alphaNum choice @302 | < Rule `alpha` didn't match :: ch:0 ref:alpha @302 | < None of choices matched input :: rule:alpha choice @302 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @302 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @302 > : < Expected '_', but found ')' :: ch:2 text @302 > > > : < Rule `num` didn't match :: ch:1 ref:num @302 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @302 > > > > ) ) ) : ( 0 seq:5 text 302-303 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @303 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @303 | < Expected ',', but found '
' :: seq:0 text @303 > > > ) : ( 0 seq:7 ref:ws 303-304 | ( 0 rule:ws repsep 303-304 | ( 0 rep seqnc 303-303 | ( 0 seq:0 ref:spaces 303-303 | ( 0 rule:spaces repsep 303-303 | < Expected ' ', but found '
' :: rep text @303 > ) ) : ( 0 seq:1 choice 303-303 | < Rule `comment` didn't match :: ch:0 ref:comment @303 | < Sequence failed at entry 0 :: rule:comment seqnc @303 | < Expected '#', but found '
' :: seq:0 text @303 > > > : ( 0 ch:1 text 303-303 ) ) ) : ( 0 sep text 303-304 ) : ( 0 rep seqnc 304-304 | ( 0 seq:0 ref:spaces 304-304 | ( 0 rule:spaces repsep 304-304 | < Expected ' ', but found '}' :: rep text @304 > ) ) : ( 0 seq:1 choice 304-304 | < Rule `comment` didn't match :: ch:0 ref:comment @304 | < Sequence failed at entry 0 :: rule:comment seqnc @304 | < Expected '#', but found '}' :: seq:0 text @304 > > > : ( 0 ch:1 text 304-304 ) ) ) : < Expected '
', but found '}' :: sep text @304 > ) ) : ( 0 seq:8 text 304-305 ) ) ) ) ) : ( 0 sep ref:ws 305-306 | ( 0 rule:ws repsep 305-306 | ( 0 rep seqnc 305-305 | ( 0 seq:0 ref:spaces 305-305 | ( 0 rule:spaces repsep 305-305 | < Expected ' ', but found '
' :: rep text @305 > ) ) : ( 0 seq:1 choice 305-305 | < Rule `comment` didn't match :: ch:0 ref:comment @305 | < Sequence failed at entry 0 :: rule:comment seqnc @305 | < Expected '#', but found '
' :: seq:0 text @305 > > > : ( 0 ch:1 text 305-305 ) ) ) : ( 0 sep text 305-306 ) : ( 0 rep seqnc 306-306 | ( 0 seq:0 ref:spaces 306-306 | ( 0 rule:spaces repsep 306-306 | < Expected ' ', but found 't' :: rep text @306 > ) ) : ( 0 seq:1 choice 306-306 | < Rule `comment` didn't match :: ch:0 ref:comment @306 | < Sequence failed at entry 0 :: rule:comment seqnc @306 | < Expected '#', but found 't' :: seq:0 text @306 > > > : ( 0 ch:1 text 306-306 ) ) ) : < Expected '
', but found 't' :: sep text @306 > ) ) : ( 0 rep ref:declaration 306-379 | ( 0 rule:declaration choice 306-379 | < Rule `rule` didn't match :: ch:0 ref:rule @306 | < Sequence failed at entry 0 :: rule:rule seqnc @306 | < Rule `defKW` didn't match :: seq:0 ref:defKW @306 | < Expected 'def', but found 'tab' :: rule:defKW text @306 > > > > : ( 0 ch:1 ref:tableDecl 306-379 | ( 0 rule:tableDecl seqnc 306-379 | ( 0 seq:0 ref:tableKW 306-311 | ( 0 rule:tableKW text 306-311 ) ) : ( 0 seq:1 ref:ws 311-312 | ( 0 rule:ws repsep 311-312 | ( 0 rep seqnc 311-312 | ( 0 seq:0 ref:spaces 311-312 | ( 0 rule:spaces repsep 311-312 | ( 0 rep text 311-312 ) : ( 0 sep text 312-312 ) : < Expected ' ', but found 's' :: rep text @312 > ) ) : ( 0 seq:1 choice 312-312 | < Rule `comment` didn't match :: ch:0 ref:comment @312 | < Sequence failed at entry 0 :: rule:comment seqnc @312 | < Expected '#', but found 's' :: seq:0 text @312 > > > : ( 0 ch:1 text 312-312 ) ) ) : < Expected '
', but found 's' :: sep text @312 > ) ) : ( 0 seq:2 ref:name 312-322 | ( 0 rule:qualifier repsep 312-322 | ( 0 rep ref:ident 312-322 | ( 0 rule:ident seqnc 312-322 | ( 0 seq:0 ref:alpha 312-313 | ( 0 rule:alpha choice 312-313 | ( 0 ch:0 char-range 312-313 ) ) ) : ( 0 seq:1 repsep 313-322 | ( 0 rep ref:alphaNum 313-314 | ( 0 rule:alphaNum choice 313-314 | ( 0 ch:0 ref:alpha 313-314 | ( 0 rule:alpha choice 313-314 | ( 0 ch:0 char-range 313-314 ) ) ) ) ) : ( 0 sep text 314-314 ) : ( 0 rep ref:alphaNum 314-315 | ( 0 rule:alphaNum choice 314-315 | ( 0 ch:0 ref:alpha 314-315 | ( 0 rule:alpha choice 314-315 | ( 0 ch:0 char-range 314-315 ) ) ) ) ) : ( 0 sep text 315-315 ) : ( 0 rep ref:alphaNum 315-316 | ( 0 rule:alphaNum choice 315-316 | ( 0 ch:0 ref:alpha 315-316 | ( 0 rule:alpha choice 315-316 | ( 0 ch:0 char-range 315-316 ) ) ) ) ) : ( 0 sep text 316-316 ) : ( 0 rep ref:alphaNum 316-317 | ( 0 rule:alphaNum choice 316-317 | ( 0 ch:0 ref:alpha 316-317 | ( 0 rule:alpha choice 316-317 | ( 0 ch:0 char-range 316-317 ) ) ) ) ) : ( 0 sep text 317-317 ) : ( 0 rep ref:alphaNum 317-318 | ( 0 rule:alphaNum choice 317-318 | ( 0 ch:0 ref:alpha 317-318 | ( 0 rule:alpha choice 317-318 | ( 0 ch:0 char-range 317-318 ) ) ) ) ) : ( 0 sep text 318-318 ) : ( 0 rep ref:alphaNum 318-319 | ( 0 rule:alphaNum choice 318-319 | ( 0 ch:0 ref:alpha 318-319 | ( 0 rule:alpha choice 318-319 | < Expected character in range from 'a' to 'z', but found 'E' :: ch:0 char-range @318 > : ( 0 ch:1 char-range 318-319 ) ) ) ) ) : ( 0 sep text 319-319 ) : ( 0 rep ref:alphaNum 319-320 | ( 0 rule:alphaNum choice 319-320 | ( 0 ch:0 ref:alpha 319-320 | ( 0 rule:alpha choice 319-320 | ( 0 ch:0 char-range 319-320 ) ) ) ) ) : ( 0 sep text 320-320 ) : ( 0 rep ref:alphaNum 320-321 | ( 0 rule:alphaNum choice 320-321 | ( 0 ch:0 ref:alpha 320-321 | ( 0 rule:alpha choice 320-321 | ( 0 ch:0 char-range 320-321 ) ) ) ) ) : ( 0 sep text 321-321 ) : ( 0 rep ref:alphaNum 321-322 | ( 0 rule:alphaNum choice 321-322 | ( 0 ch:0 ref:alpha 321-322 | ( 0 rule:alpha choice 321-322 | ( 0 ch:0 char-range 321-322 ) ) ) ) ) : ( 0 sep text 322-322 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @322 | < None of choices matched input :: rule:alphaNum choice @322 | < Rule `alpha` didn't match :: ch:0 ref:alpha @322 | < None of choices matched input :: rule:alpha choice @322 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @322 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @322 > : < Expected '_', but found ' ' :: ch:2 text @322 > > > : < Rule `num` didn't match :: ch:1 ref:num @322 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @322 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @322 > ) ) : ( 0 seq:3 ref:ws 322-323 | ( 0 rule:ws repsep 322-323 | ( 0 rep seqnc 322-323 | ( 0 seq:0 ref:spaces 322-323 | ( 0 rule:spaces repsep 322-323 | ( 0 rep text 322-323 ) : ( 0 sep text 323-323 ) : < Expected ' ', but found '{' :: rep text @323 > ) ) : ( 0 seq:1 choice 323-323 | < Rule `comment` didn't match :: ch:0 ref:comment @323 | < Sequence failed at entry 0 :: rule:comment seqnc @323 | < Expected '#', but found '{' :: seq:0 text @323 > > > : ( 0 ch:1 text 323-323 ) ) ) : < Expected '
', but found '{' :: sep text @323 > ) ) : ( 0 seq:4 text 323-324 ) : ( 0 seq:5 ref:ws 324-327 | ( 0 rule:ws repsep 324-327 | ( 0 rep seqnc 324-324 | ( 0 seq:0 ref:spaces 324-324 | ( 0 rule:spaces repsep 324-324 | < Expected ' ', but found '
' :: rep text @324 > ) ) : ( 0 seq:1 choice 324-324 | < Rule `comment` didn't match :: ch:0 ref:comment @324 | < Sequence failed at entry 0 :: rule:comment seqnc @324 | < Expected '#', but found '
' :: seq:0 text @324 > > > : ( 0 ch:1 text 324-324 ) ) ) : ( 0 sep text 324-325 ) : ( 0 rep seqnc 325-327 | ( 0 seq:0 ref:spaces 325-327 | ( 0 rule:spaces repsep 325-327 | ( 0 rep text 325-326 ) : ( 0 sep text 326-326 ) : ( 0 rep text 326-327 ) : ( 0 sep text 327-327 ) : < Expected ' ', but found 'p' :: rep text @327 > ) ) : ( 0 seq:1 choice 327-327 | < Rule `comment` didn't match :: ch:0 ref:comment @327 | < Sequence failed at entry 0 :: rule:comment seqnc @327 | < Expected '#', but found 'p' :: seq:0 text @327 > > > : ( 0 ch:1 text 327-327 ) ) ) : < Expected '
', but found 'p' :: sep text @327 > ) ) : ( 0 seq:6 repsep 327-377 | ( 0 rep ref:tableAttr 327-335 | ( 0 rule:tableAttr seqnc 327-335 | ( 0 seq:0 ref:ident 327-335 | ( 0 rule:ident seqnc 327-335 | ( 0 seq:0 ref:alpha 327-328 | ( 0 rule:alpha choice 327-328 | ( 0 ch:0 char-range 327-328 ) ) ) : ( 0 seq:1 repsep 328-335 | ( 0 rep ref:alphaNum 328-329 | ( 0 rule:alphaNum choice 328-329 | ( 0 ch:0 ref:alpha 328-329 | ( 0 rule:alpha choice 328-329 | ( 0 ch:0 char-range 328-329 ) ) ) ) ) : ( 0 sep text 329-329 ) : ( 0 rep ref:alphaNum 329-330 | ( 0 rule:alphaNum choice 329-330 | ( 0 ch:0 ref:alpha 329-330 | ( 0 rule:alpha choice 329-330 | ( 0 ch:0 char-range 329-330 ) ) ) ) ) : ( 0 sep text 330-330 ) : ( 0 rep ref:alphaNum 330-331 | ( 0 rule:alphaNum choice 330-331 | ( 0 ch:0 ref:alpha 330-331 | ( 0 rule:alpha choice 330-331 | ( 0 ch:0 char-range 330-331 ) ) ) ) ) : ( 0 sep text 331-331 ) : ( 0 rep ref:alphaNum 331-332 | ( 0 rule:alphaNum choice 331-332 | ( 0 ch:0 ref:alpha 331-332 | ( 0 rule:alpha choice 331-332 | ( 0 ch:0 char-range 331-332 ) ) ) ) ) : ( 0 sep text 332-332 ) : ( 0 rep ref:alphaNum 332-333 | ( 0 rule:alphaNum choice 332-333 | ( 0 ch:0 ref:alpha 332-333 | ( 0 rule:alpha choice 332-333 | ( 0 ch:0 char-range 332-333 ) ) ) ) ) : ( 0 sep text 333-333 ) : ( 0 rep ref:alphaNum 333-334 | ( 0 rule:alphaNum choice 333-334 | ( 0 ch:0 ref:alpha 333-334 | ( 0 rule:alpha choice 333-334 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @333 > : ( 0 ch:1 char-range 333-334 ) ) ) ) ) : ( 0 sep text 334-334 ) : ( 0 rep ref:alphaNum 334-335 | ( 0 rule:alphaNum choice 334-335 | ( 0 ch:0 ref:alpha 334-335 | ( 0 rule:alpha choice 334-335 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @334 > : ( 0 ch:1 char-range 334-335 ) ) ) ) ) : ( 0 sep text 335-335 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @335 | < None of choices matched input :: rule:alphaNum choice @335 | < Rule `alpha` didn't match :: ch:0 ref:alpha @335 | < None of choices matched input :: rule:alpha choice @335 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @335 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @335 > : < Expected '_', but found ',' :: ch:2 text @335 > > > : < Rule `num` didn't match :: ch:1 ref:num @335 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @335 > > > > ) ) ) : ( 0 seq:1 choice 335-335 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @335 | < Sequence failed at entry 0 :: rule:refSpec seqnc @335 | < Expected ':', but found ',' :: seq:0 text @335 > > > : ( 0 ch:1 text 335-335 ) ) ) ) : ( 0 sep ref:commaSpace 335-339 | ( 0 rule:commaSpace seqnc 335-339 | ( 0 seq:0 text 335-336 ) : ( 0 seq:1 ref:ws 336-339 | ( 0 rule:ws repsep 336-339 | ( 0 rep seqnc 336-336 | ( 0 seq:0 ref:spaces 336-336 | ( 0 rule:spaces repsep 336-336 | < Expected ' ', but found '
' :: rep text @336 > ) ) : ( 0 seq:1 choice 336-336 | < Rule `comment` didn't match :: ch:0 ref:comment @336 | < Sequence failed at entry 0 :: rule:comment seqnc @336 | < Expected '#', but found '
' :: seq:0 text @336 > > > : ( 0 ch:1 text 336-336 ) ) ) : ( 0 sep text 336-337 ) : ( 0 rep seqnc 337-339 | ( 0 seq:0 ref:spaces 337-339 | ( 0 rule:spaces repsep 337-339 | ( 0 rep text 337-338 ) : ( 0 sep text 338-338 ) : ( 0 rep text 338-339 ) : ( 0 sep text 339-339 ) : < Expected ' ', but found 's' :: rep text @339 > ) ) : ( 0 seq:1 choice 339-339 | < Rule `comment` didn't match :: ch:0 ref:comment @339 | < Sequence failed at entry 0 :: rule:comment seqnc @339 | < Expected '#', but found 's' :: seq:0 text @339 > > > : ( 0 ch:1 text 339-339 ) ) ) : < Expected '
', but found 's' :: sep text @339 > ) ) ) ) : ( 0 rep ref:tableAttr 339-377 | ( 0 rule:tableAttr seqnc 339-377 | ( 0 seq:0 ref:ident 339-349 | ( 0 rule:ident seqnc 339-349 | ( 0 seq:0 ref:alpha 339-340 | ( 0 rule:alpha choice 339-340 | ( 0 ch:0 char-range 339-340 ) ) ) : ( 0 seq:1 repsep 340-349 | ( 0 rep ref:alphaNum 340-341 | ( 0 rule:alphaNum choice 340-341 | ( 0 ch:0 ref:alpha 340-341 | ( 0 rule:alpha choice 340-341 | ( 0 ch:0 char-range 340-341 ) ) ) ) ) : ( 0 sep text 341-341 ) : ( 0 rep ref:alphaNum 341-342 | ( 0 rule:alphaNum choice 341-342 | ( 0 ch:0 ref:alpha 341-342 | ( 0 rule:alpha choice 341-342 | ( 0 ch:0 char-range 341-342 ) ) ) ) ) : ( 0 sep text 342-342 ) : ( 0 rep ref:alphaNum 342-343 | ( 0 rule:alphaNum choice 342-343 | ( 0 ch:0 ref:alpha 342-343 | ( 0 rule:alpha choice 342-343 | ( 0 ch:0 char-range 342-343 ) ) ) ) ) : ( 0 sep text 343-343 ) : ( 0 rep ref:alphaNum 343-344 | ( 0 rule:alphaNum choice 343-344 | ( 0 ch:0 ref:alpha 343-344 | ( 0 rule:alpha choice 343-344 | ( 0 ch:0 char-range 343-344 ) ) ) ) ) : ( 0 sep text 344-344 ) : ( 0 rep ref:alphaNum 344-345 | ( 0 rule:alphaNum choice 344-345 | ( 0 ch:0 ref:alpha 344-345 | ( 0 rule:alpha choice 344-345 | ( 0 ch:0 char-range 344-345 ) ) ) ) ) : ( 0 sep text 345-345 ) : ( 0 rep ref:alphaNum 345-346 | ( 0 rule:alphaNum choice 345-346 | ( 0 ch:0 ref:alpha 345-346 | ( 0 rule:alpha choice 345-346 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @345 > : ( 0 ch:1 char-range 345-346 ) ) ) ) ) : ( 0 sep text 346-346 ) : ( 0 rep ref:alphaNum 346-347 | ( 0 rule:alphaNum choice 346-347 | ( 0 ch:0 ref:alpha 346-347 | ( 0 rule:alpha choice 346-347 | ( 0 ch:0 char-range 346-347 ) ) ) ) ) : ( 0 sep text 347-347 ) : ( 0 rep ref:alphaNum 347-348 | ( 0 rule:alphaNum choice 347-348 | ( 0 ch:0 ref:alpha 347-348 | ( 0 rule:alpha choice 347-348 | ( 0 ch:0 char-range 347-348 ) ) ) ) ) : ( 0 sep text 348-348 ) : ( 0 rep ref:alphaNum 348-349 | ( 0 rule:alphaNum choice 348-349 | ( 0 ch:0 ref:alpha 348-349 | ( 0 rule:alpha choice 348-349 | ( 0 ch:0 char-range 348-349 ) ) ) ) ) : ( 0 sep text 349-349 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @349 | < None of choices matched input :: rule:alphaNum choice @349 | < Rule `alpha` didn't match :: ch:0 ref:alpha @349 | < None of choices matched input :: rule:alpha choice @349 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @349 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @349 > : < Expected '_', but found ':' :: ch:2 text @349 > > > : < Rule `num` didn't match :: ch:1 ref:num @349 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @349 > > > > ) ) ) : ( 0 seq:1 choice 349-377 | ( 0 ch:0 ref:refSpec 349-377 | ( 0 rule:refSpec seqnc 349-377 | ( 0 seq:0 text 349-350 ) : ( 0 seq:1 ref:ws 350-351 | ( 0 rule:ws repsep 350-351 | ( 0 rep seqnc 350-351 | ( 0 seq:0 ref:spaces 350-351 | ( 0 rule:spaces repsep 350-351 | ( 0 rep text 350-351 ) : ( 0 sep text 351-351 ) : < Expected ' ', but found 'i' :: rep text @351 > ) ) : ( 0 seq:1 choice 351-351 | < Rule `comment` didn't match :: ch:0 ref:comment @351 | < Sequence failed at entry 0 :: rule:comment seqnc @351 | < Expected '#', but found 'i' :: seq:0 text @351 > > > : ( 0 ch:1 text 351-351 ) ) ) : < Expected '
', but found 'i' :: sep text @351 > ) ) : ( 0 seq:2 choice 351-377 | < Rule `outRef` didn't match :: ch:0 ref:outRef @351 | < Sequence failed at entry 0 :: rule:outRef seqnc @351 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @351 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @351 > > > > : ( 0 ch:1 ref:inRef 351-377 | ( 0 rule:inRef seqnc 351-377 | ( 0 seq:0 ref:inRefKW 351-356 | ( 0 rule:inRefKW text 351-356 ) ) : ( 0 seq:1 text 356-357 ) : ( 0 seq:2 ref:table 357-367 | ( 0 rule:qualifier repsep 357-367 | ( 0 rep ref:ident 357-367 | ( 0 rule:ident seqnc 357-367 | ( 0 seq:0 ref:alpha 357-358 | ( 0 rule:alpha choice 357-358 | ( 0 ch:0 char-range 357-358 ) ) ) : ( 0 seq:1 repsep 358-367 | ( 0 rep ref:alphaNum 358-359 | ( 0 rule:alphaNum choice 358-359 | ( 0 ch:0 ref:alpha 358-359 | ( 0 rule:alpha choice 358-359 | ( 0 ch:0 char-range 358-359 ) ) ) ) ) : ( 0 sep text 359-359 ) : ( 0 rep ref:alphaNum 359-360 | ( 0 rule:alphaNum choice 359-360 | ( 0 ch:0 ref:alpha 359-360 | ( 0 rule:alpha choice 359-360 | ( 0 ch:0 char-range 359-360 ) ) ) ) ) : ( 0 sep text 360-360 ) : ( 0 rep ref:alphaNum 360-361 | ( 0 rule:alphaNum choice 360-361 | ( 0 ch:0 ref:alpha 360-361 | ( 0 rule:alpha choice 360-361 | ( 0 ch:0 char-range 360-361 ) ) ) ) ) : ( 0 sep text 361-361 ) : ( 0 rep ref:alphaNum 361-362 | ( 0 rule:alphaNum choice 361-362 | ( 0 ch:0 ref:alpha 361-362 | ( 0 rule:alpha choice 361-362 | ( 0 ch:0 char-range 361-362 ) ) ) ) ) : ( 0 sep text 362-362 ) : ( 0 rep ref:alphaNum 362-363 | ( 0 rule:alphaNum choice 362-363 | ( 0 ch:0 ref:alpha 362-363 | ( 0 rule:alpha choice 362-363 | ( 0 ch:0 char-range 362-363 ) ) ) ) ) : ( 0 sep text 363-363 ) : ( 0 rep ref:alphaNum 363-364 | ( 0 rule:alphaNum choice 363-364 | ( 0 ch:0 ref:alpha 363-364 | ( 0 rule:alpha choice 363-364 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @363 > : ( 0 ch:1 char-range 363-364 ) ) ) ) ) : ( 0 sep text 364-364 ) : ( 0 rep ref:alphaNum 364-365 | ( 0 rule:alphaNum choice 364-365 | ( 0 ch:0 ref:alpha 364-365 | ( 0 rule:alpha choice 364-365 | ( 0 ch:0 char-range 364-365 ) ) ) ) ) : ( 0 sep text 365-365 ) : ( 0 rep ref:alphaNum 365-366 | ( 0 rule:alphaNum choice 365-366 | ( 0 ch:0 ref:alpha 365-366 | ( 0 rule:alpha choice 365-366 | ( 0 ch:0 char-range 365-366 ) ) ) ) ) : ( 0 sep text 366-366 ) : ( 0 rep ref:alphaNum 366-367 | ( 0 rule:alphaNum choice 366-367 | ( 0 ch:0 ref:alpha 366-367 | ( 0 rule:alpha choice 366-367 | ( 0 ch:0 char-range 366-367 ) ) ) ) ) : ( 0 sep text 367-367 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @367 | < None of choices matched input :: rule:alphaNum choice @367 | < Rule `alpha` didn't match :: ch:0 ref:alpha @367 | < None of choices matched input :: rule:alpha choice @367 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @367 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @367 > : < Expected '_', but found ':' :: ch:2 text @367 > > > : < Rule `num` didn't match :: ch:1 ref:num @367 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @367 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @367 > ) ) : ( 0 seq:3 text 367-368 ) : ( 0 seq:4 ref:col 368-376 | ( 0 rule:ident seqnc 368-376 | ( 0 seq:0 ref:alpha 368-369 | ( 0 rule:alpha choice 368-369 | ( 0 ch:0 char-range 368-369 ) ) ) : ( 0 seq:1 repsep 369-376 | ( 0 rep ref:alphaNum 369-370 | ( 0 rule:alphaNum choice 369-370 | ( 0 ch:0 ref:alpha 369-370 | ( 0 rule:alpha choice 369-370 | ( 0 ch:0 char-range 369-370 ) ) ) ) ) : ( 0 sep text 370-370 ) : ( 0 rep ref:alphaNum 370-371 | ( 0 rule:alphaNum choice 370-371 | ( 0 ch:0 ref:alpha 370-371 | ( 0 rule:alpha choice 370-371 | ( 0 ch:0 char-range 370-371 ) ) ) ) ) : ( 0 sep text 371-371 ) : ( 0 rep ref:alphaNum 371-372 | ( 0 rule:alphaNum choice 371-372 | ( 0 ch:0 ref:alpha 371-372 | ( 0 rule:alpha choice 371-372 | ( 0 ch:0 char-range 371-372 ) ) ) ) ) : ( 0 sep text 372-372 ) : ( 0 rep ref:alphaNum 372-373 | ( 0 rule:alphaNum choice 372-373 | ( 0 ch:0 ref:alpha 372-373 | ( 0 rule:alpha choice 372-373 | ( 0 ch:0 char-range 372-373 ) ) ) ) ) : ( 0 sep text 373-373 ) : ( 0 rep ref:alphaNum 373-374 | ( 0 rule:alphaNum choice 373-374 | ( 0 ch:0 ref:alpha 373-374 | ( 0 rule:alpha choice 373-374 | ( 0 ch:0 char-range 373-374 ) ) ) ) ) : ( 0 sep text 374-374 ) : ( 0 rep ref:alphaNum 374-375 | ( 0 rule:alphaNum choice 374-375 | ( 0 ch:0 ref:alpha 374-375 | ( 0 rule:alpha choice 374-375 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @374 > : ( 0 ch:1 char-range 374-375 ) ) ) ) ) : ( 0 sep text 375-375 ) : ( 0 rep ref:alphaNum 375-376 | ( 0 rule:alphaNum choice 375-376 | ( 0 ch:0 ref:alpha 375-376 | ( 0 rule:alpha choice 375-376 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @375 > : ( 0 ch:1 char-range 375-376 ) ) ) ) ) : ( 0 sep text 376-376 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @376 | < None of choices matched input :: rule:alphaNum choice @376 | < Rule `alpha` didn't match :: ch:0 ref:alpha @376 | < None of choices matched input :: rule:alpha choice @376 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @376 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @376 > : < Expected '_', but found ')' :: ch:2 text @376 > > > : < Rule `num` didn't match :: ch:1 ref:num @376 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @376 > > > > ) ) ) : ( 0 seq:5 text 376-377 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @377 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @377 | < Expected ',', but found '
' :: seq:0 text @377 > > > ) : ( 0 seq:7 ref:ws 377-378 | ( 0 rule:ws repsep 377-378 | ( 0 rep seqnc 377-377 | ( 0 seq:0 ref:spaces 377-377 | ( 0 rule:spaces repsep 377-377 | < Expected ' ', but found '
' :: rep text @377 > ) ) : ( 0 seq:1 choice 377-377 | < Rule `comment` didn't match :: ch:0 ref:comment @377 | < Sequence failed at entry 0 :: rule:comment seqnc @377 | < Expected '#', but found '
' :: seq:0 text @377 > > > : ( 0 ch:1 text 377-377 ) ) ) : ( 0 sep text 377-378 ) : ( 0 rep seqnc 378-378 | ( 0 seq:0 ref:spaces 378-378 | ( 0 rule:spaces repsep 378-378 | < Expected ' ', but found '}' :: rep text @378 > ) ) : ( 0 seq:1 choice 378-378 | < Rule `comment` didn't match :: ch:0 ref:comment @378 | < Sequence failed at entry 0 :: rule:comment seqnc @378 | < Expected '#', but found '}' :: seq:0 text @378 > > > : ( 0 ch:1 text 378-378 ) ) ) : < Expected '
', but found '}' :: sep text @378 > ) ) : ( 0 seq:8 text 378-379 ) ) ) ) ) : ( 0 sep ref:ws 379-380 | ( 0 rule:ws repsep 379-380 | ( 0 rep seqnc 379-379 | ( 0 seq:0 ref:spaces 379-379 | ( 0 rule:spaces repsep 379-379 | < Expected ' ', but found '
' :: rep text @379 > ) ) : ( 0 seq:1 choice 379-379 | < Rule `comment` didn't match :: ch:0 ref:comment @379 | < Sequence failed at entry 0 :: rule:comment seqnc @379 | < Expected '#', but found '
' :: seq:0 text @379 > > > : ( 0 ch:1 text 379-379 ) ) ) : ( 0 sep text 379-380 ) : ( 0 rep seqnc 380-380 | ( 0 seq:0 ref:spaces 380-380 | ( 0 rule:spaces repsep 380-380 | < Expected ' ', but found 't' :: rep text @380 > ) ) : ( 0 seq:1 choice 380-380 | < Rule `comment` didn't match :: ch:0 ref:comment @380 | < Sequence failed at entry 0 :: rule:comment seqnc @380 | < Expected '#', but found 't' :: seq:0 text @380 > > > : ( 0 ch:1 text 380-380 ) ) ) : < Expected '
', but found 't' :: sep text @380 > ) ) : ( 0 rep ref:declaration 380-441 | ( 0 rule:declaration choice 380-441 | < Rule `rule` didn't match :: ch:0 ref:rule @380 | < Sequence failed at entry 0 :: rule:rule seqnc @380 | < Rule `defKW` didn't match :: seq:0 ref:defKW @380 | < Expected 'def', but found 'tab' :: rule:defKW text @380 > > > > : ( 0 ch:1 ref:tableDecl 380-441 | ( 0 rule:tableDecl seqnc 380-441 | ( 0 seq:0 ref:tableKW 380-385 | ( 0 rule:tableKW text 380-385 ) ) : ( 0 seq:1 ref:ws 385-386 | ( 0 rule:ws repsep 385-386 | ( 0 rep seqnc 385-386 | ( 0 seq:0 ref:spaces 385-386 | ( 0 rule:spaces repsep 385-386 | ( 0 rep text 385-386 ) : ( 0 sep text 386-386 ) : < Expected ' ', but found 's' :: rep text @386 > ) ) : ( 0 seq:1 choice 386-386 | < Rule `comment` didn't match :: ch:0 ref:comment @386 | < Sequence failed at entry 0 :: rule:comment seqnc @386 | < Expected '#', but found 's' :: seq:0 text @386 > > > : ( 0 ch:1 text 386-386 ) ) ) : < Expected '
', but found 's' :: sep text @386 > ) ) : ( 0 seq:2 ref:name 386-396 | ( 0 rule:qualifier repsep 386-396 | ( 0 rep ref:ident 386-396 | ( 0 rule:ident seqnc 386-396 | ( 0 seq:0 ref:alpha 386-387 | ( 0 rule:alpha choice 386-387 | ( 0 ch:0 char-range 386-387 ) ) ) : ( 0 seq:1 repsep 387-396 | ( 0 rep ref:alphaNum 387-388 | ( 0 rule:alphaNum choice 387-388 | ( 0 ch:0 ref:alpha 387-388 | ( 0 rule:alpha choice 387-388 | ( 0 ch:0 char-range 387-388 ) ) ) ) ) : ( 0 sep text 388-388 ) : ( 0 rep ref:alphaNum 388-389 | ( 0 rule:alphaNum choice 388-389 | ( 0 ch:0 ref:alpha 388-389 | ( 0 rule:alpha choice 388-389 | ( 0 ch:0 char-range 388-389 ) ) ) ) ) : ( 0 sep text 389-389 ) : ( 0 rep ref:alphaNum 389-390 | ( 0 rule:alphaNum choice 389-390 | ( 0 ch:0 ref:alpha 389-390 | ( 0 rule:alpha choice 389-390 | ( 0 ch:0 char-range 389-390 ) ) ) ) ) : ( 0 sep text 390-390 ) : ( 0 rep ref:alphaNum 390-391 | ( 0 rule:alphaNum choice 390-391 | ( 0 ch:0 ref:alpha 390-391 | ( 0 rule:alpha choice 390-391 | ( 0 ch:0 char-range 390-391 ) ) ) ) ) : ( 0 sep text 391-391 ) : ( 0 rep ref:alphaNum 391-392 | ( 0 rule:alphaNum choice 391-392 | ( 0 ch:0 ref:alpha 391-392 | ( 0 rule:alpha choice 391-392 | ( 0 ch:0 char-range 391-392 ) ) ) ) ) : ( 0 sep text 392-392 ) : ( 0 rep ref:alphaNum 392-393 | ( 0 rule:alphaNum choice 392-393 | ( 0 ch:0 ref:alpha 392-393 | ( 0 rule:alpha choice 392-393 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @392 > : ( 0 ch:1 char-range 392-393 ) ) ) ) ) : ( 0 sep text 393-393 ) : ( 0 rep ref:alphaNum 393-394 | ( 0 rule:alphaNum choice 393-394 | ( 0 ch:0 ref:alpha 393-394 | ( 0 rule:alpha choice 393-394 | ( 0 ch:0 char-range 393-394 ) ) ) ) ) : ( 0 sep text 394-394 ) : ( 0 rep ref:alphaNum 394-395 | ( 0 rule:alphaNum choice 394-395 | ( 0 ch:0 ref:alpha 394-395 | ( 0 rule:alpha choice 394-395 | ( 0 ch:0 char-range 394-395 ) ) ) ) ) : ( 0 sep text 395-395 ) : ( 0 rep ref:alphaNum 395-396 | ( 0 rule:alphaNum choice 395-396 | ( 0 ch:0 ref:alpha 395-396 | ( 0 rule:alpha choice 395-396 | ( 0 ch:0 char-range 395-396 ) ) ) ) ) : ( 0 sep text 396-396 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @396 | < None of choices matched input :: rule:alphaNum choice @396 | < Rule `alpha` didn't match :: ch:0 ref:alpha @396 | < None of choices matched input :: rule:alpha choice @396 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @396 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @396 > : < Expected '_', but found ' ' :: ch:2 text @396 > > > : < Rule `num` didn't match :: ch:1 ref:num @396 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @396 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @396 > ) ) : ( 0 seq:3 ref:ws 396-397 | ( 0 rule:ws repsep 396-397 | ( 0 rep seqnc 396-397 | ( 0 seq:0 ref:spaces 396-397 | ( 0 rule:spaces repsep 396-397 | ( 0 rep text 396-397 ) : ( 0 sep text 397-397 ) : < Expected ' ', but found '{' :: rep text @397 > ) ) : ( 0 seq:1 choice 397-397 | < Rule `comment` didn't match :: ch:0 ref:comment @397 | < Sequence failed at entry 0 :: rule:comment seqnc @397 | < Expected '#', but found '{' :: seq:0 text @397 > > > : ( 0 ch:1 text 397-397 ) ) ) : < Expected '
', but found '{' :: sep text @397 > ) ) : ( 0 seq:4 text 397-398 ) : ( 0 seq:5 ref:ws 398-401 | ( 0 rule:ws repsep 398-401 | ( 0 rep seqnc 398-398 | ( 0 seq:0 ref:spaces 398-398 | ( 0 rule:spaces repsep 398-398 | < Expected ' ', but found '
' :: rep text @398 > ) ) : ( 0 seq:1 choice 398-398 | < Rule `comment` didn't match :: ch:0 ref:comment @398 | < Sequence failed at entry 0 :: rule:comment seqnc @398 | < Expected '#', but found '
' :: seq:0 text @398 > > > : ( 0 ch:1 text 398-398 ) ) ) : ( 0 sep text 398-399 ) : ( 0 rep seqnc 399-401 | ( 0 seq:0 ref:spaces 399-401 | ( 0 rule:spaces repsep 399-401 | ( 0 rep text 399-400 ) : ( 0 sep text 400-400 ) : ( 0 rep text 400-401 ) : ( 0 sep text 401-401 ) : < Expected ' ', but found 'p' :: rep text @401 > ) ) : ( 0 seq:1 choice 401-401 | < Rule `comment` didn't match :: ch:0 ref:comment @401 | < Sequence failed at entry 0 :: rule:comment seqnc @401 | < Expected '#', but found 'p' :: seq:0 text @401 > > > : ( 0 ch:1 text 401-401 ) ) ) : < Expected '
', but found 'p' :: sep text @401 > ) ) : ( 0 seq:6 repsep 401-439 | ( 0 rep ref:tableAttr 401-409 | ( 0 rule:tableAttr seqnc 401-409 | ( 0 seq:0 ref:ident 401-409 | ( 0 rule:ident seqnc 401-409 | ( 0 seq:0 ref:alpha 401-402 | ( 0 rule:alpha choice 401-402 | ( 0 ch:0 char-range 401-402 ) ) ) : ( 0 seq:1 repsep 402-409 | ( 0 rep ref:alphaNum 402-403 | ( 0 rule:alphaNum choice 402-403 | ( 0 ch:0 ref:alpha 402-403 | ( 0 rule:alpha choice 402-403 | ( 0 ch:0 char-range 402-403 ) ) ) ) ) : ( 0 sep text 403-403 ) : ( 0 rep ref:alphaNum 403-404 | ( 0 rule:alphaNum choice 403-404 | ( 0 ch:0 ref:alpha 403-404 | ( 0 rule:alpha choice 403-404 | ( 0 ch:0 char-range 403-404 ) ) ) ) ) : ( 0 sep text 404-404 ) : ( 0 rep ref:alphaNum 404-405 | ( 0 rule:alphaNum choice 404-405 | ( 0 ch:0 ref:alpha 404-405 | ( 0 rule:alpha choice 404-405 | ( 0 ch:0 char-range 404-405 ) ) ) ) ) : ( 0 sep text 405-405 ) : ( 0 rep ref:alphaNum 405-406 | ( 0 rule:alphaNum choice 405-406 | ( 0 ch:0 ref:alpha 405-406 | ( 0 rule:alpha choice 405-406 | ( 0 ch:0 char-range 405-406 ) ) ) ) ) : ( 0 sep text 406-406 ) : ( 0 rep ref:alphaNum 406-407 | ( 0 rule:alphaNum choice 406-407 | ( 0 ch:0 ref:alpha 406-407 | ( 0 rule:alpha choice 406-407 | ( 0 ch:0 char-range 406-407 ) ) ) ) ) : ( 0 sep text 407-407 ) : ( 0 rep ref:alphaNum 407-408 | ( 0 rule:alphaNum choice 407-408 | ( 0 ch:0 ref:alpha 407-408 | ( 0 rule:alpha choice 407-408 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @407 > : ( 0 ch:1 char-range 407-408 ) ) ) ) ) : ( 0 sep text 408-408 ) : ( 0 rep ref:alphaNum 408-409 | ( 0 rule:alphaNum choice 408-409 | ( 0 ch:0 ref:alpha 408-409 | ( 0 rule:alpha choice 408-409 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @408 > : ( 0 ch:1 char-range 408-409 ) ) ) ) ) : ( 0 sep text 409-409 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @409 | < None of choices matched input :: rule:alphaNum choice @409 | < Rule `alpha` didn't match :: ch:0 ref:alpha @409 | < None of choices matched input :: rule:alpha choice @409 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @409 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @409 > : < Expected '_', but found ',' :: ch:2 text @409 > > > : < Rule `num` didn't match :: ch:1 ref:num @409 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @409 > > > > ) ) ) : ( 0 seq:1 choice 409-409 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @409 | < Sequence failed at entry 0 :: rule:refSpec seqnc @409 | < Expected ':', but found ',' :: seq:0 text @409 > > > : ( 0 ch:1 text 409-409 ) ) ) ) : ( 0 sep ref:commaSpace 409-413 | ( 0 rule:commaSpace seqnc 409-413 | ( 0 seq:0 text 409-410 ) : ( 0 seq:1 ref:ws 410-413 | ( 0 rule:ws repsep 410-413 | ( 0 rep seqnc 410-410 | ( 0 seq:0 ref:spaces 410-410 | ( 0 rule:spaces repsep 410-410 | < Expected ' ', but found '
' :: rep text @410 > ) ) : ( 0 seq:1 choice 410-410 | < Rule `comment` didn't match :: ch:0 ref:comment @410 | < Sequence failed at entry 0 :: rule:comment seqnc @410 | < Expected '#', but found '
' :: seq:0 text @410 > > > : ( 0 ch:1 text 410-410 ) ) ) : ( 0 sep text 410-411 ) : ( 0 rep seqnc 411-413 | ( 0 seq:0 ref:spaces 411-413 | ( 0 rule:spaces repsep 411-413 | ( 0 rep text 411-412 ) : ( 0 sep text 412-412 ) : ( 0 rep text 412-413 ) : ( 0 sep text 413-413 ) : < Expected ' ', but found 't' :: rep text @413 > ) ) : ( 0 seq:1 choice 413-413 | < Rule `comment` didn't match :: ch:0 ref:comment @413 | < Sequence failed at entry 0 :: rule:comment seqnc @413 | < Expected '#', but found 't' :: seq:0 text @413 > > > : ( 0 ch:1 text 413-413 ) ) ) : < Expected '
', but found 't' :: sep text @413 > ) ) ) ) : ( 0 rep ref:tableAttr 413-439 | ( 0 rule:tableAttr seqnc 413-439 | ( 0 seq:0 ref:ident 413-417 | ( 0 rule:ident seqnc 413-417 | ( 0 seq:0 ref:alpha 413-414 | ( 0 rule:alpha choice 413-414 | ( 0 ch:0 char-range 413-414 ) ) ) : ( 0 seq:1 repsep 414-417 | ( 0 rep ref:alphaNum 414-415 | ( 0 rule:alphaNum choice 414-415 | ( 0 ch:0 ref:alpha 414-415 | ( 0 rule:alpha choice 414-415 | ( 0 ch:0 char-range 414-415 ) ) ) ) ) : ( 0 sep text 415-415 ) : ( 0 rep ref:alphaNum 415-416 | ( 0 rule:alphaNum choice 415-416 | ( 0 ch:0 ref:alpha 415-416 | ( 0 rule:alpha choice 415-416 | ( 0 ch:0 char-range 415-416 ) ) ) ) ) : ( 0 sep text 416-416 ) : ( 0 rep ref:alphaNum 416-417 | ( 0 rule:alphaNum choice 416-417 | ( 0 ch:0 ref:alpha 416-417 | ( 0 rule:alpha choice 416-417 | ( 0 ch:0 char-range 416-417 ) ) ) ) ) : ( 0 sep text 417-417 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @417 | < None of choices matched input :: rule:alphaNum choice @417 | < Rule `alpha` didn't match :: ch:0 ref:alpha @417 | < None of choices matched input :: rule:alpha choice @417 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @417 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @417 > : < Expected '_', but found ':' :: ch:2 text @417 > > > : < Rule `num` didn't match :: ch:1 ref:num @417 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @417 > > > > ) ) ) : ( 0 seq:1 choice 417-439 | ( 0 ch:0 ref:refSpec 417-439 | ( 0 rule:refSpec seqnc 417-439 | ( 0 seq:0 text 417-418 ) : ( 0 seq:1 ref:ws 418-419 | ( 0 rule:ws repsep 418-419 | ( 0 rep seqnc 418-419 | ( 0 seq:0 ref:spaces 418-419 | ( 0 rule:spaces repsep 418-419 | ( 0 rep text 418-419 ) : ( 0 sep text 419-419 ) : < Expected ' ', but found 'i' :: rep text @419 > ) ) : ( 0 seq:1 choice 419-419 | < Rule `comment` didn't match :: ch:0 ref:comment @419 | < Sequence failed at entry 0 :: rule:comment seqnc @419 | < Expected '#', but found 'i' :: seq:0 text @419 > > > : ( 0 ch:1 text 419-419 ) ) ) : < Expected '
', but found 'i' :: sep text @419 > ) ) : ( 0 seq:2 choice 419-439 | < Rule `outRef` didn't match :: ch:0 ref:outRef @419 | < Sequence failed at entry 0 :: rule:outRef seqnc @419 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @419 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @419 > > > > : ( 0 ch:1 ref:inRef 419-439 | ( 0 rule:inRef seqnc 419-439 | ( 0 seq:0 ref:inRefKW 419-424 | ( 0 rule:inRefKW text 419-424 ) ) : ( 0 seq:1 text 424-425 ) : ( 0 seq:2 ref:table 425-429 | ( 0 rule:qualifier repsep 425-429 | ( 0 rep ref:ident 425-429 | ( 0 rule:ident seqnc 425-429 | ( 0 seq:0 ref:alpha 425-426 | ( 0 rule:alpha choice 425-426 | ( 0 ch:0 char-range 425-426 ) ) ) : ( 0 seq:1 repsep 426-429 | ( 0 rep ref:alphaNum 426-427 | ( 0 rule:alphaNum choice 426-427 | ( 0 ch:0 ref:alpha 426-427 | ( 0 rule:alpha choice 426-427 | ( 0 ch:0 char-range 426-427 ) ) ) ) ) : ( 0 sep text 427-427 ) : ( 0 rep ref:alphaNum 427-428 | ( 0 rule:alphaNum choice 427-428 | ( 0 ch:0 ref:alpha 427-428 | ( 0 rule:alpha choice 427-428 | ( 0 ch:0 char-range 427-428 ) ) ) ) ) : ( 0 sep text 428-428 ) : ( 0 rep ref:alphaNum 428-429 | ( 0 rule:alphaNum choice 428-429 | ( 0 ch:0 ref:alpha 428-429 | ( 0 rule:alpha choice 428-429 | ( 0 ch:0 char-range 428-429 ) ) ) ) ) : ( 0 sep text 429-429 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @429 | < None of choices matched input :: rule:alphaNum choice @429 | < Rule `alpha` didn't match :: ch:0 ref:alpha @429 | < None of choices matched input :: rule:alpha choice @429 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @429 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @429 > : < Expected '_', but found ':' :: ch:2 text @429 > > > : < Rule `num` didn't match :: ch:1 ref:num @429 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @429 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @429 > ) ) : ( 0 seq:3 text 429-430 ) : ( 0 seq:4 ref:col 430-438 | ( 0 rule:ident seqnc 430-438 | ( 0 seq:0 ref:alpha 430-431 | ( 0 rule:alpha choice 430-431 | ( 0 ch:0 char-range 430-431 ) ) ) : ( 0 seq:1 repsep 431-438 | ( 0 rep ref:alphaNum 431-432 | ( 0 rule:alphaNum choice 431-432 | ( 0 ch:0 ref:alpha 431-432 | ( 0 rule:alpha choice 431-432 | ( 0 ch:0 char-range 431-432 ) ) ) ) ) : ( 0 sep text 432-432 ) : ( 0 rep ref:alphaNum 432-433 | ( 0 rule:alphaNum choice 432-433 | ( 0 ch:0 ref:alpha 432-433 | ( 0 rule:alpha choice 432-433 | ( 0 ch:0 char-range 432-433 ) ) ) ) ) : ( 0 sep text 433-433 ) : ( 0 rep ref:alphaNum 433-434 | ( 0 rule:alphaNum choice 433-434 | ( 0 ch:0 ref:alpha 433-434 | ( 0 rule:alpha choice 433-434 | ( 0 ch:0 char-range 433-434 ) ) ) ) ) : ( 0 sep text 434-434 ) : ( 0 rep ref:alphaNum 434-435 | ( 0 rule:alphaNum choice 434-435 | ( 0 ch:0 ref:alpha 434-435 | ( 0 rule:alpha choice 434-435 | ( 0 ch:0 char-range 434-435 ) ) ) ) ) : ( 0 sep text 435-435 ) : ( 0 rep ref:alphaNum 435-436 | ( 0 rule:alphaNum choice 435-436 | ( 0 ch:0 ref:alpha 435-436 | ( 0 rule:alpha choice 435-436 | ( 0 ch:0 char-range 435-436 ) ) ) ) ) : ( 0 sep text 436-436 ) : ( 0 rep ref:alphaNum 436-437 | ( 0 rule:alphaNum choice 436-437 | ( 0 ch:0 ref:alpha 436-437 | ( 0 rule:alpha choice 436-437 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @436 > : ( 0 ch:1 char-range 436-437 ) ) ) ) ) : ( 0 sep text 437-437 ) : ( 0 rep ref:alphaNum 437-438 | ( 0 rule:alphaNum choice 437-438 | ( 0 ch:0 ref:alpha 437-438 | ( 0 rule:alpha choice 437-438 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @437 > : ( 0 ch:1 char-range 437-438 ) ) ) ) ) : ( 0 sep text 438-438 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @438 | < None of choices matched input :: rule:alphaNum choice @438 | < Rule `alpha` didn't match :: ch:0 ref:alpha @438 | < None of choices matched input :: rule:alpha choice @438 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @438 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @438 > : < Expected '_', but found ')' :: ch:2 text @438 > > > : < Rule `num` didn't match :: ch:1 ref:num @438 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @438 > > > > ) ) ) : ( 0 seq:5 text 438-439 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @439 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @439 | < Expected ',', but found '
' :: seq:0 text @439 > > > ) : ( 0 seq:7 ref:ws 439-440 | ( 0 rule:ws repsep 439-440 | ( 0 rep seqnc 439-439 | ( 0 seq:0 ref:spaces 439-439 | ( 0 rule:spaces repsep 439-439 | < Expected ' ', but found '
' :: rep text @439 > ) ) : ( 0 seq:1 choice 439-439 | < Rule `comment` didn't match :: ch:0 ref:comment @439 | < Sequence failed at entry 0 :: rule:comment seqnc @439 | < Expected '#', but found '
' :: seq:0 text @439 > > > : ( 0 ch:1 text 439-439 ) ) ) : ( 0 sep text 439-440 ) : ( 0 rep seqnc 440-440 | ( 0 seq:0 ref:spaces 440-440 | ( 0 rule:spaces repsep 440-440 | < Expected ' ', but found '}' :: rep text @440 > ) ) : ( 0 seq:1 choice 440-440 | < Rule `comment` didn't match :: ch:0 ref:comment @440 | < Sequence failed at entry 0 :: rule:comment seqnc @440 | < Expected '#', but found '}' :: seq:0 text @440 > > > : ( 0 ch:1 text 440-440 ) ) ) : < Expected '
', but found '}' :: sep text @440 > ) ) : ( 0 seq:8 text 440-441 ) ) ) ) ) : ( 0 sep ref:ws 441-442 | ( 0 rule:ws repsep 441-442 | ( 0 rep seqnc 441-441 | ( 0 seq:0 ref:spaces 441-441 | ( 0 rule:spaces repsep 441-441 | < Expected ' ', but found '
' :: rep text @441 > ) ) : ( 0 seq:1 choice 441-441 | < Rule `comment` didn't match :: ch:0 ref:comment @441 | < Sequence failed at entry 0 :: rule:comment seqnc @441 | < Expected '#', but found '
' :: seq:0 text @441 > > > : ( 0 ch:1 text 441-441 ) ) ) : ( 0 sep text 441-442 ) : ( 0 rep seqnc 442-442 | ( 0 seq:0 ref:spaces 442-442 | ( 0 rule:spaces repsep 442-442 | < Expected ' ', but found 't' :: rep text @442 > ) ) : ( 0 seq:1 choice 442-442 | < Rule `comment` didn't match :: ch:0 ref:comment @442 | < Sequence failed at entry 0 :: rule:comment seqnc @442 | < Expected '#', but found 't' :: seq:0 text @442 > > > : ( 0 ch:1 text 442-442 ) ) ) : < Expected '
', but found 't' :: sep text @442 > ) ) : ( 0 rep ref:declaration 442-495 | ( 0 rule:declaration choice 442-495 | < Rule `rule` didn't match :: ch:0 ref:rule @442 | < Sequence failed at entry 0 :: rule:rule seqnc @442 | < Rule `defKW` didn't match :: seq:0 ref:defKW @442 | < Expected 'def', but found 'tab' :: rule:defKW text @442 > > > > : ( 0 ch:1 ref:tableDecl 442-495 | ( 0 rule:tableDecl seqnc 442-495 | ( 0 seq:0 ref:tableKW 442-447 | ( 0 rule:tableKW text 442-447 ) ) : ( 0 seq:1 ref:ws 447-448 | ( 0 rule:ws repsep 447-448 | ( 0 rep seqnc 447-448 | ( 0 seq:0 ref:spaces 447-448 | ( 0 rule:spaces repsep 447-448 | ( 0 rep text 447-448 ) : ( 0 sep text 448-448 ) : < Expected ' ', but found 't' :: rep text @448 > ) ) : ( 0 seq:1 choice 448-448 | < Rule `comment` didn't match :: ch:0 ref:comment @448 | < Sequence failed at entry 0 :: rule:comment seqnc @448 | < Expected '#', but found 't' :: seq:0 text @448 > > > : ( 0 ch:1 text 448-448 ) ) ) : < Expected '
', but found 't' :: sep text @448 > ) ) : ( 0 seq:2 ref:name 448-452 | ( 0 rule:qualifier repsep 448-452 | ( 0 rep ref:ident 448-452 | ( 0 rule:ident seqnc 448-452 | ( 0 seq:0 ref:alpha 448-449 | ( 0 rule:alpha choice 448-449 | ( 0 ch:0 char-range 448-449 ) ) ) : ( 0 seq:1 repsep 449-452 | ( 0 rep ref:alphaNum 449-450 | ( 0 rule:alphaNum choice 449-450 | ( 0 ch:0 ref:alpha 449-450 | ( 0 rule:alpha choice 449-450 | ( 0 ch:0 char-range 449-450 ) ) ) ) ) : ( 0 sep text 450-450 ) : ( 0 rep ref:alphaNum 450-451 | ( 0 rule:alphaNum choice 450-451 | ( 0 ch:0 ref:alpha 450-451 | ( 0 rule:alpha choice 450-451 | ( 0 ch:0 char-range 450-451 ) ) ) ) ) : ( 0 sep text 451-451 ) : ( 0 rep ref:alphaNum 451-452 | ( 0 rule:alphaNum choice 451-452 | ( 0 ch:0 ref:alpha 451-452 | ( 0 rule:alpha choice 451-452 | ( 0 ch:0 char-range 451-452 ) ) ) ) ) : ( 0 sep text 452-452 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @452 | < None of choices matched input :: rule:alphaNum choice @452 | < Rule `alpha` didn't match :: ch:0 ref:alpha @452 | < None of choices matched input :: rule:alpha choice @452 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @452 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @452 > : < Expected '_', but found ' ' :: ch:2 text @452 > > > : < Rule `num` didn't match :: ch:1 ref:num @452 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @452 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @452 > ) ) : ( 0 seq:3 ref:ws 452-453 | ( 0 rule:ws repsep 452-453 | ( 0 rep seqnc 452-453 | ( 0 seq:0 ref:spaces 452-453 | ( 0 rule:spaces repsep 452-453 | ( 0 rep text 452-453 ) : ( 0 sep text 453-453 ) : < Expected ' ', but found '{' :: rep text @453 > ) ) : ( 0 seq:1 choice 453-453 | < Rule `comment` didn't match :: ch:0 ref:comment @453 | < Sequence failed at entry 0 :: rule:comment seqnc @453 | < Expected '#', but found '{' :: seq:0 text @453 > > > : ( 0 ch:1 text 453-453 ) ) ) : < Expected '
', but found '{' :: sep text @453 > ) ) : ( 0 seq:4 text 453-454 ) : ( 0 seq:5 ref:ws 454-457 | ( 0 rule:ws repsep 454-457 | ( 0 rep seqnc 454-454 | ( 0 seq:0 ref:spaces 454-454 | ( 0 rule:spaces repsep 454-454 | < Expected ' ', but found '
' :: rep text @454 > ) ) : ( 0 seq:1 choice 454-454 | < Rule `comment` didn't match :: ch:0 ref:comment @454 | < Sequence failed at entry 0 :: rule:comment seqnc @454 | < Expected '#', but found '
' :: seq:0 text @454 > > > : ( 0 ch:1 text 454-454 ) ) ) : ( 0 sep text 454-455 ) : ( 0 rep seqnc 455-457 | ( 0 seq:0 ref:spaces 455-457 | ( 0 rule:spaces repsep 455-457 | ( 0 rep text 455-456 ) : ( 0 sep text 456-456 ) : ( 0 rep text 456-457 ) : ( 0 sep text 457-457 ) : < Expected ' ', but found 'p' :: rep text @457 > ) ) : ( 0 seq:1 choice 457-457 | < Rule `comment` didn't match :: ch:0 ref:comment @457 | < Sequence failed at entry 0 :: rule:comment seqnc @457 | < Expected '#', but found 'p' :: seq:0 text @457 > > > : ( 0 ch:1 text 457-457 ) ) ) : < Expected '
', but found 'p' :: sep text @457 > ) ) : ( 0 seq:6 repsep 457-493 | ( 0 rep ref:tableAttr 457-465 | ( 0 rule:tableAttr seqnc 457-465 | ( 0 seq:0 ref:ident 457-465 | ( 0 rule:ident seqnc 457-465 | ( 0 seq:0 ref:alpha 457-458 | ( 0 rule:alpha choice 457-458 | ( 0 ch:0 char-range 457-458 ) ) ) : ( 0 seq:1 repsep 458-465 | ( 0 rep ref:alphaNum 458-459 | ( 0 rule:alphaNum choice 458-459 | ( 0 ch:0 ref:alpha 458-459 | ( 0 rule:alpha choice 458-459 | ( 0 ch:0 char-range 458-459 ) ) ) ) ) : ( 0 sep text 459-459 ) : ( 0 rep ref:alphaNum 459-460 | ( 0 rule:alphaNum choice 459-460 | ( 0 ch:0 ref:alpha 459-460 | ( 0 rule:alpha choice 459-460 | ( 0 ch:0 char-range 459-460 ) ) ) ) ) : ( 0 sep text 460-460 ) : ( 0 rep ref:alphaNum 460-461 | ( 0 rule:alphaNum choice 460-461 | ( 0 ch:0 ref:alpha 460-461 | ( 0 rule:alpha choice 460-461 | ( 0 ch:0 char-range 460-461 ) ) ) ) ) : ( 0 sep text 461-461 ) : ( 0 rep ref:alphaNum 461-462 | ( 0 rule:alphaNum choice 461-462 | ( 0 ch:0 ref:alpha 461-462 | ( 0 rule:alpha choice 461-462 | ( 0 ch:0 char-range 461-462 ) ) ) ) ) : ( 0 sep text 462-462 ) : ( 0 rep ref:alphaNum 462-463 | ( 0 rule:alphaNum choice 462-463 | ( 0 ch:0 ref:alpha 462-463 | ( 0 rule:alpha choice 462-463 | ( 0 ch:0 char-range 462-463 ) ) ) ) ) : ( 0 sep text 463-463 ) : ( 0 rep ref:alphaNum 463-464 | ( 0 rule:alphaNum choice 463-464 | ( 0 ch:0 ref:alpha 463-464 | ( 0 rule:alpha choice 463-464 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @463 > : ( 0 ch:1 char-range 463-464 ) ) ) ) ) : ( 0 sep text 464-464 ) : ( 0 rep ref:alphaNum 464-465 | ( 0 rule:alphaNum choice 464-465 | ( 0 ch:0 ref:alpha 464-465 | ( 0 rule:alpha choice 464-465 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @464 > : ( 0 ch:1 char-range 464-465 ) ) ) ) ) : ( 0 sep text 465-465 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @465 | < None of choices matched input :: rule:alphaNum choice @465 | < Rule `alpha` didn't match :: ch:0 ref:alpha @465 | < None of choices matched input :: rule:alpha choice @465 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @465 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @465 > : < Expected '_', but found ',' :: ch:2 text @465 > > > : < Rule `num` didn't match :: ch:1 ref:num @465 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @465 > > > > ) ) ) : ( 0 seq:1 choice 465-465 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @465 | < Sequence failed at entry 0 :: rule:refSpec seqnc @465 | < Expected ':', but found ',' :: seq:0 text @465 > > > : ( 0 ch:1 text 465-465 ) ) ) ) : ( 0 sep ref:commaSpace 465-469 | ( 0 rule:commaSpace seqnc 465-469 | ( 0 seq:0 text 465-466 ) : ( 0 seq:1 ref:ws 466-469 | ( 0 rule:ws repsep 466-469 | ( 0 rep seqnc 466-466 | ( 0 seq:0 ref:spaces 466-466 | ( 0 rule:spaces repsep 466-466 | < Expected ' ', but found '
' :: rep text @466 > ) ) : ( 0 seq:1 choice 466-466 | < Rule `comment` didn't match :: ch:0 ref:comment @466 | < Sequence failed at entry 0 :: rule:comment seqnc @466 | < Expected '#', but found '
' :: seq:0 text @466 > > > : ( 0 ch:1 text 466-466 ) ) ) : ( 0 sep text 466-467 ) : ( 0 rep seqnc 467-469 | ( 0 seq:0 ref:spaces 467-469 | ( 0 rule:spaces repsep 467-469 | ( 0 rep text 467-468 ) : ( 0 sep text 468-468 ) : ( 0 rep text 468-469 ) : ( 0 sep text 469-469 ) : < Expected ' ', but found 'v' :: rep text @469 > ) ) : ( 0 seq:1 choice 469-469 | < Rule `comment` didn't match :: ch:0 ref:comment @469 | < Sequence failed at entry 0 :: rule:comment seqnc @469 | < Expected '#', but found 'v' :: seq:0 text @469 > > > : ( 0 ch:1 text 469-469 ) ) ) : < Expected '
', but found 'v' :: sep text @469 > ) ) ) ) : ( 0 rep ref:tableAttr 469-493 | ( 0 rule:tableAttr seqnc 469-493 | ( 0 seq:0 ref:ident 469-472 | ( 0 rule:ident seqnc 469-472 | ( 0 seq:0 ref:alpha 469-470 | ( 0 rule:alpha choice 469-470 | ( 0 ch:0 char-range 469-470 ) ) ) : ( 0 seq:1 repsep 470-472 | ( 0 rep ref:alphaNum 470-471 | ( 0 rule:alphaNum choice 470-471 | ( 0 ch:0 ref:alpha 470-471 | ( 0 rule:alpha choice 470-471 | ( 0 ch:0 char-range 470-471 ) ) ) ) ) : ( 0 sep text 471-471 ) : ( 0 rep ref:alphaNum 471-472 | ( 0 rule:alphaNum choice 471-472 | ( 0 ch:0 ref:alpha 471-472 | ( 0 rule:alpha choice 471-472 | ( 0 ch:0 char-range 471-472 ) ) ) ) ) : ( 0 sep text 472-472 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @472 | < None of choices matched input :: rule:alphaNum choice @472 | < Rule `alpha` didn't match :: ch:0 ref:alpha @472 | < None of choices matched input :: rule:alpha choice @472 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @472 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @472 > : < Expected '_', but found ':' :: ch:2 text @472 > > > : < Rule `num` didn't match :: ch:1 ref:num @472 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @472 > > > > ) ) ) : ( 0 seq:1 choice 472-493 | ( 0 ch:0 ref:refSpec 472-493 | ( 0 rule:refSpec seqnc 472-493 | ( 0 seq:0 text 472-473 ) : ( 0 seq:1 ref:ws 473-474 | ( 0 rule:ws repsep 473-474 | ( 0 rep seqnc 473-474 | ( 0 seq:0 ref:spaces 473-474 | ( 0 rule:spaces repsep 473-474 | ( 0 rep text 473-474 ) : ( 0 sep text 474-474 ) : < Expected ' ', but found 'i' :: rep text @474 > ) ) : ( 0 seq:1 choice 474-474 | < Rule `comment` didn't match :: ch:0 ref:comment @474 | < Sequence failed at entry 0 :: rule:comment seqnc @474 | < Expected '#', but found 'i' :: seq:0 text @474 > > > : ( 0 ch:1 text 474-474 ) ) ) : < Expected '
', but found 'i' :: sep text @474 > ) ) : ( 0 seq:2 choice 474-493 | < Rule `outRef` didn't match :: ch:0 ref:outRef @474 | < Sequence failed at entry 0 :: rule:outRef seqnc @474 | < Rule `outRefKW` didn't match :: seq:0 ref:outRefKW @474 | < Expected 'outRef', but found 'inRef(' :: rule:outRefKW text @474 > > > > : ( 0 ch:1 ref:inRef 474-493 | ( 0 rule:inRef seqnc 474-493 | ( 0 seq:0 ref:inRefKW 474-479 | ( 0 rule:inRefKW text 474-479 ) ) : ( 0 seq:1 text 479-480 ) : ( 0 seq:2 ref:table 480-483 | ( 0 rule:qualifier repsep 480-483 | ( 0 rep ref:ident 480-483 | ( 0 rule:ident seqnc 480-483 | ( 0 seq:0 ref:alpha 480-481 | ( 0 rule:alpha choice 480-481 | ( 0 ch:0 char-range 480-481 ) ) ) : ( 0 seq:1 repsep 481-483 | ( 0 rep ref:alphaNum 481-482 | ( 0 rule:alphaNum choice 481-482 | ( 0 ch:0 ref:alpha 481-482 | ( 0 rule:alpha choice 481-482 | ( 0 ch:0 char-range 481-482 ) ) ) ) ) : ( 0 sep text 482-482 ) : ( 0 rep ref:alphaNum 482-483 | ( 0 rule:alphaNum choice 482-483 | ( 0 ch:0 ref:alpha 482-483 | ( 0 rule:alpha choice 482-483 | ( 0 ch:0 char-range 482-483 ) ) ) ) ) : ( 0 sep text 483-483 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @483 | < None of choices matched input :: rule:alphaNum choice @483 | < Rule `alpha` didn't match :: ch:0 ref:alpha @483 | < None of choices matched input :: rule:alpha choice @483 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @483 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @483 > : < Expected '_', but found ':' :: ch:2 text @483 > > > : < Rule `num` didn't match :: ch:1 ref:num @483 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @483 > > > > ) ) ) : < Expected '.', but found ':' :: sep text @483 > ) ) : ( 0 seq:3 text 483-484 ) : ( 0 seq:4 ref:col 484-492 | ( 0 rule:ident seqnc 484-492 | ( 0 seq:0 ref:alpha 484-485 | ( 0 rule:alpha choice 484-485 | ( 0 ch:0 char-range 484-485 ) ) ) : ( 0 seq:1 repsep 485-492 | ( 0 rep ref:alphaNum 485-486 | ( 0 rule:alphaNum choice 485-486 | ( 0 ch:0 ref:alpha 485-486 | ( 0 rule:alpha choice 485-486 | ( 0 ch:0 char-range 485-486 ) ) ) ) ) : ( 0 sep text 486-486 ) : ( 0 rep ref:alphaNum 486-487 | ( 0 rule:alphaNum choice 486-487 | ( 0 ch:0 ref:alpha 486-487 | ( 0 rule:alpha choice 486-487 | ( 0 ch:0 char-range 486-487 ) ) ) ) ) : ( 0 sep text 487-487 ) : ( 0 rep ref:alphaNum 487-488 | ( 0 rule:alphaNum choice 487-488 | ( 0 ch:0 ref:alpha 487-488 | ( 0 rule:alpha choice 487-488 | ( 0 ch:0 char-range 487-488 ) ) ) ) ) : ( 0 sep text 488-488 ) : ( 0 rep ref:alphaNum 488-489 | ( 0 rule:alphaNum choice 488-489 | ( 0 ch:0 ref:alpha 488-489 | ( 0 rule:alpha choice 488-489 | ( 0 ch:0 char-range 488-489 ) ) ) ) ) : ( 0 sep text 489-489 ) : ( 0 rep ref:alphaNum 489-490 | ( 0 rule:alphaNum choice 489-490 | ( 0 ch:0 ref:alpha 489-490 | ( 0 rule:alpha choice 489-490 | ( 0 ch:0 char-range 489-490 ) ) ) ) ) : ( 0 sep text 490-490 ) : ( 0 rep ref:alphaNum 490-491 | ( 0 rule:alphaNum choice 490-491 | ( 0 ch:0 ref:alpha 490-491 | ( 0 rule:alpha choice 490-491 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @490 > : ( 0 ch:1 char-range 490-491 ) ) ) ) ) : ( 0 sep text 491-491 ) : ( 0 rep ref:alphaNum 491-492 | ( 0 rule:alphaNum choice 491-492 | ( 0 ch:0 ref:alpha 491-492 | ( 0 rule:alpha choice 491-492 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @491 > : ( 0 ch:1 char-range 491-492 ) ) ) ) ) : ( 0 sep text 492-492 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @492 | < None of choices matched input :: rule:alphaNum choice @492 | < Rule `alpha` didn't match :: ch:0 ref:alpha @492 | < None of choices matched input :: rule:alpha choice @492 | < Expected character in range from 'a' to 'z', but found ')' :: ch:0 char-range @492 > : < Expected character in range from 'A' to 'Z', but found ')' :: ch:1 char-range @492 > : < Expected '_', but found ')' :: ch:2 text @492 > > > : < Rule `num` didn't match :: ch:1 ref:num @492 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @492 > > > > ) ) ) : ( 0 seq:5 text 492-493 ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @493 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @493 | < Expected ',', but found '
' :: seq:0 text @493 > > > ) : ( 0 seq:7 ref:ws 493-494 | ( 0 rule:ws repsep 493-494 | ( 0 rep seqnc 493-493 | ( 0 seq:0 ref:spaces 493-493 | ( 0 rule:spaces repsep 493-493 | < Expected ' ', but found '
' :: rep text @493 > ) ) : ( 0 seq:1 choice 493-493 | < Rule `comment` didn't match :: ch:0 ref:comment @493 | < Sequence failed at entry 0 :: rule:comment seqnc @493 | < Expected '#', but found '
' :: seq:0 text @493 > > > : ( 0 ch:1 text 493-493 ) ) ) : ( 0 sep text 493-494 ) : ( 0 rep seqnc 494-494 | ( 0 seq:0 ref:spaces 494-494 | ( 0 rule:spaces repsep 494-494 | < Expected ' ', but found '}' :: rep text @494 > ) ) : ( 0 seq:1 choice 494-494 | < Rule `comment` didn't match :: ch:0 ref:comment @494 | < Sequence failed at entry 0 :: rule:comment seqnc @494 | < Expected '#', but found '}' :: seq:0 text @494 > > > : ( 0 ch:1 text 494-494 ) ) ) : < Expected '
', but found '}' :: sep text @494 > ) ) : ( 0 seq:8 text 494-495 ) ) ) ) ) : ( 0 sep ref:ws 495-496 | ( 0 rule:ws repsep 495-496 | ( 0 rep seqnc 495-495 | ( 0 seq:0 ref:spaces 495-495 | ( 0 rule:spaces repsep 495-495 | < Expected ' ', but found '
' :: rep text @495 > ) ) : ( 0 seq:1 choice 495-495 | < Rule `comment` didn't match :: ch:0 ref:comment @495 | < Sequence failed at entry 0 :: rule:comment seqnc @495 | < Expected '#', but found '
' :: seq:0 text @495 > > > : ( 0 ch:1 text 495-495 ) ) ) : ( 0 sep text 495-496 ) : ( 0 rep seqnc 496-496 | ( 0 seq:0 ref:spaces 496-496 | ( 0 rule:spaces repsep 496-496 | < Expected ' ', but found 't' :: rep text @496 > ) ) : ( 0 seq:1 choice 496-496 | < Rule `comment` didn't match :: ch:0 ref:comment @496 | < Sequence failed at entry 0 :: rule:comment seqnc @496 | < Expected '#', but found 't' :: seq:0 text @496 > > > : ( 0 ch:1 text 496-496 ) ) ) : < Expected '
', but found 't' :: sep text @496 > ) ) : ( 0 rep ref:declaration 496-536 | ( 0 rule:declaration choice 496-536 | < Rule `rule` didn't match :: ch:0 ref:rule @496 | < Sequence failed at entry 0 :: rule:rule seqnc @496 | < Rule `defKW` didn't match :: seq:0 ref:defKW @496 | < Expected 'def', but found 'tab' :: rule:defKW text @496 > > > > : ( 0 ch:1 ref:tableDecl 496-536 | ( 0 rule:tableDecl seqnc 496-536 | ( 0 seq:0 ref:tableKW 496-501 | ( 0 rule:tableKW text 496-501 ) ) : ( 0 seq:1 ref:ws 501-502 | ( 0 rule:ws repsep 501-502 | ( 0 rep seqnc 501-502 | ( 0 seq:0 ref:spaces 501-502 | ( 0 rule:spaces repsep 501-502 | ( 0 rep text 501-502 ) : ( 0 sep text 502-502 ) : < Expected ' ', but found 'v' :: rep text @502 > ) ) : ( 0 seq:1 choice 502-502 | < Rule `comment` didn't match :: ch:0 ref:comment @502 | < Sequence failed at entry 0 :: rule:comment seqnc @502 | < Expected '#', but found 'v' :: seq:0 text @502 > > > : ( 0 ch:1 text 502-502 ) ) ) : < Expected '
', but found 'v' :: sep text @502 > ) ) : ( 0 seq:2 ref:name 502-505 | ( 0 rule:qualifier repsep 502-505 | ( 0 rep ref:ident 502-505 | ( 0 rule:ident seqnc 502-505 | ( 0 seq:0 ref:alpha 502-503 | ( 0 rule:alpha choice 502-503 | ( 0 ch:0 char-range 502-503 ) ) ) : ( 0 seq:1 repsep 503-505 | ( 0 rep ref:alphaNum 503-504 | ( 0 rule:alphaNum choice 503-504 | ( 0 ch:0 ref:alpha 503-504 | ( 0 rule:alpha choice 503-504 | ( 0 ch:0 char-range 503-504 ) ) ) ) ) : ( 0 sep text 504-504 ) : ( 0 rep ref:alphaNum 504-505 | ( 0 rule:alphaNum choice 504-505 | ( 0 ch:0 ref:alpha 504-505 | ( 0 rule:alpha choice 504-505 | ( 0 ch:0 char-range 504-505 ) ) ) ) ) : ( 0 sep text 505-505 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @505 | < None of choices matched input :: rule:alphaNum choice @505 | < Rule `alpha` didn't match :: ch:0 ref:alpha @505 | < None of choices matched input :: rule:alpha choice @505 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @505 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @505 > : < Expected '_', but found ' ' :: ch:2 text @505 > > > : < Rule `num` didn't match :: ch:1 ref:num @505 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @505 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @505 > ) ) : ( 0 seq:3 ref:ws 505-506 | ( 0 rule:ws repsep 505-506 | ( 0 rep seqnc 505-506 | ( 0 seq:0 ref:spaces 505-506 | ( 0 rule:spaces repsep 505-506 | ( 0 rep text 505-506 ) : ( 0 sep text 506-506 ) : < Expected ' ', but found '{' :: rep text @506 > ) ) : ( 0 seq:1 choice 506-506 | < Rule `comment` didn't match :: ch:0 ref:comment @506 | < Sequence failed at entry 0 :: rule:comment seqnc @506 | < Expected '#', but found '{' :: seq:0 text @506 > > > : ( 0 ch:1 text 506-506 ) ) ) : < Expected '
', but found '{' :: sep text @506 > ) ) : ( 0 seq:4 text 506-507 ) : ( 0 seq:5 ref:ws 507-510 | ( 0 rule:ws repsep 507-510 | ( 0 rep seqnc 507-507 | ( 0 seq:0 ref:spaces 507-507 | ( 0 rule:spaces repsep 507-507 | < Expected ' ', but found '
' :: rep text @507 > ) ) : ( 0 seq:1 choice 507-507 | < Rule `comment` didn't match :: ch:0 ref:comment @507 | < Sequence failed at entry 0 :: rule:comment seqnc @507 | < Expected '#', but found '
' :: seq:0 text @507 > > > : ( 0 ch:1 text 507-507 ) ) ) : ( 0 sep text 507-508 ) : ( 0 rep seqnc 508-510 | ( 0 seq:0 ref:spaces 508-510 | ( 0 rule:spaces repsep 508-510 | ( 0 rep text 508-509 ) : ( 0 sep text 509-509 ) : ( 0 rep text 509-510 ) : ( 0 sep text 510-510 ) : < Expected ' ', but found 'p' :: rep text @510 > ) ) : ( 0 seq:1 choice 510-510 | < Rule `comment` didn't match :: ch:0 ref:comment @510 | < Sequence failed at entry 0 :: rule:comment seqnc @510 | < Expected '#', but found 'p' :: seq:0 text @510 > > > : ( 0 ch:1 text 510-510 ) ) ) : < Expected '
', but found 'p' :: sep text @510 > ) ) : ( 0 seq:6 repsep 510-534 | ( 0 rep ref:tableAttr 510-518 | ( 0 rule:tableAttr seqnc 510-518 | ( 0 seq:0 ref:ident 510-518 | ( 0 rule:ident seqnc 510-518 | ( 0 seq:0 ref:alpha 510-511 | ( 0 rule:alpha choice 510-511 | ( 0 ch:0 char-range 510-511 ) ) ) : ( 0 seq:1 repsep 511-518 | ( 0 rep ref:alphaNum 511-512 | ( 0 rule:alphaNum choice 511-512 | ( 0 ch:0 ref:alpha 511-512 | ( 0 rule:alpha choice 511-512 | ( 0 ch:0 char-range 511-512 ) ) ) ) ) : ( 0 sep text 512-512 ) : ( 0 rep ref:alphaNum 512-513 | ( 0 rule:alphaNum choice 512-513 | ( 0 ch:0 ref:alpha 512-513 | ( 0 rule:alpha choice 512-513 | ( 0 ch:0 char-range 512-513 ) ) ) ) ) : ( 0 sep text 513-513 ) : ( 0 rep ref:alphaNum 513-514 | ( 0 rule:alphaNum choice 513-514 | ( 0 ch:0 ref:alpha 513-514 | ( 0 rule:alpha choice 513-514 | ( 0 ch:0 char-range 513-514 ) ) ) ) ) : ( 0 sep text 514-514 ) : ( 0 rep ref:alphaNum 514-515 | ( 0 rule:alphaNum choice 514-515 | ( 0 ch:0 ref:alpha 514-515 | ( 0 rule:alpha choice 514-515 | ( 0 ch:0 char-range 514-515 ) ) ) ) ) : ( 0 sep text 515-515 ) : ( 0 rep ref:alphaNum 515-516 | ( 0 rule:alphaNum choice 515-516 | ( 0 ch:0 ref:alpha 515-516 | ( 0 rule:alpha choice 515-516 | ( 0 ch:0 char-range 515-516 ) ) ) ) ) : ( 0 sep text 516-516 ) : ( 0 rep ref:alphaNum 516-517 | ( 0 rule:alphaNum choice 516-517 | ( 0 ch:0 ref:alpha 516-517 | ( 0 rule:alpha choice 516-517 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @516 > : ( 0 ch:1 char-range 516-517 ) ) ) ) ) : ( 0 sep text 517-517 ) : ( 0 rep ref:alphaNum 517-518 | ( 0 rule:alphaNum choice 517-518 | ( 0 ch:0 ref:alpha 517-518 | ( 0 rule:alpha choice 517-518 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @517 > : ( 0 ch:1 char-range 517-518 ) ) ) ) ) : ( 0 sep text 518-518 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @518 | < None of choices matched input :: rule:alphaNum choice @518 | < Rule `alpha` didn't match :: ch:0 ref:alpha @518 | < None of choices matched input :: rule:alpha choice @518 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @518 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @518 > : < Expected '_', but found ',' :: ch:2 text @518 > > > : < Rule `num` didn't match :: ch:1 ref:num @518 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @518 > > > > ) ) ) : ( 0 seq:1 choice 518-518 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @518 | < Sequence failed at entry 0 :: rule:refSpec seqnc @518 | < Expected ':', but found ',' :: seq:0 text @518 > > > : ( 0 ch:1 text 518-518 ) ) ) ) : ( 0 sep ref:commaSpace 518-522 | ( 0 rule:commaSpace seqnc 518-522 | ( 0 seq:0 text 518-519 ) : ( 0 seq:1 ref:ws 519-522 | ( 0 rule:ws repsep 519-522 | ( 0 rep seqnc 519-519 | ( 0 seq:0 ref:spaces 519-519 | ( 0 rule:spaces repsep 519-519 | < Expected ' ', but found '
' :: rep text @519 > ) ) : ( 0 seq:1 choice 519-519 | < Rule `comment` didn't match :: ch:0 ref:comment @519 | < Sequence failed at entry 0 :: rule:comment seqnc @519 | < Expected '#', but found '
' :: seq:0 text @519 > > > : ( 0 ch:1 text 519-519 ) ) ) : ( 0 sep text 519-520 ) : ( 0 rep seqnc 520-522 | ( 0 seq:0 ref:spaces 520-522 | ( 0 rule:spaces repsep 520-522 | ( 0 rep text 520-521 ) : ( 0 sep text 521-521 ) : ( 0 rep text 521-522 ) : ( 0 sep text 522-522 ) : < Expected ' ', but found 't' :: rep text @522 > ) ) : ( 0 seq:1 choice 522-522 | < Rule `comment` didn't match :: ch:0 ref:comment @522 | < Sequence failed at entry 0 :: rule:comment seqnc @522 | < Expected '#', but found 't' :: seq:0 text @522 > > > : ( 0 ch:1 text 522-522 ) ) ) : < Expected '
', but found 't' :: sep text @522 > ) ) ) ) : ( 0 rep ref:tableAttr 522-526 | ( 0 rule:tableAttr seqnc 522-526 | ( 0 seq:0 ref:ident 522-526 | ( 0 rule:ident seqnc 522-526 | ( 0 seq:0 ref:alpha 522-523 | ( 0 rule:alpha choice 522-523 | ( 0 ch:0 char-range 522-523 ) ) ) : ( 0 seq:1 repsep 523-526 | ( 0 rep ref:alphaNum 523-524 | ( 0 rule:alphaNum choice 523-524 | ( 0 ch:0 ref:alpha 523-524 | ( 0 rule:alpha choice 523-524 | ( 0 ch:0 char-range 523-524 ) ) ) ) ) : ( 0 sep text 524-524 ) : ( 0 rep ref:alphaNum 524-525 | ( 0 rule:alphaNum choice 524-525 | ( 0 ch:0 ref:alpha 524-525 | ( 0 rule:alpha choice 524-525 | ( 0 ch:0 char-range 524-525 ) ) ) ) ) : ( 0 sep text 525-525 ) : ( 0 rep ref:alphaNum 525-526 | ( 0 rule:alphaNum choice 525-526 | ( 0 ch:0 ref:alpha 525-526 | ( 0 rule:alpha choice 525-526 | ( 0 ch:0 char-range 525-526 ) ) ) ) ) : ( 0 sep text 526-526 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @526 | < None of choices matched input :: rule:alphaNum choice @526 | < Rule `alpha` didn't match :: ch:0 ref:alpha @526 | < None of choices matched input :: rule:alpha choice @526 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @526 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @526 > : < Expected '_', but found ',' :: ch:2 text @526 > > > : < Rule `num` didn't match :: ch:1 ref:num @526 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @526 > > > > ) ) ) : ( 0 seq:1 choice 526-526 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @526 | < Sequence failed at entry 0 :: rule:refSpec seqnc @526 | < Expected ':', but found ',' :: seq:0 text @526 > > > : ( 0 ch:1 text 526-526 ) ) ) ) : ( 0 sep ref:commaSpace 526-530 | ( 0 rule:commaSpace seqnc 526-530 | ( 0 seq:0 text 526-527 ) : ( 0 seq:1 ref:ws 527-530 | ( 0 rule:ws repsep 527-530 | ( 0 rep seqnc 527-527 | ( 0 seq:0 ref:spaces 527-527 | ( 0 rule:spaces repsep 527-527 | < Expected ' ', but found '
' :: rep text @527 > ) ) : ( 0 seq:1 choice 527-527 | < Rule `comment` didn't match :: ch:0 ref:comment @527 | < Sequence failed at entry 0 :: rule:comment seqnc @527 | < Expected '#', but found '
' :: seq:0 text @527 > > > : ( 0 ch:1 text 527-527 ) ) ) : ( 0 sep text 527-528 ) : ( 0 rep seqnc 528-530 | ( 0 seq:0 ref:spaces 528-530 | ( 0 rule:spaces repsep 528-530 | ( 0 rep text 528-529 ) : ( 0 sep text 529-529 ) : ( 0 rep text 529-530 ) : ( 0 sep text 530-530 ) : < Expected ' ', but found 's' :: rep text @530 > ) ) : ( 0 seq:1 choice 530-530 | < Rule `comment` didn't match :: ch:0 ref:comment @530 | < Sequence failed at entry 0 :: rule:comment seqnc @530 | < Expected '#', but found 's' :: seq:0 text @530 > > > : ( 0 ch:1 text 530-530 ) ) ) : < Expected '
', but found 's' :: sep text @530 > ) ) ) ) : ( 0 rep ref:tableAttr 530-534 | ( 0 rule:tableAttr seqnc 530-534 | ( 0 seq:0 ref:ident 530-534 | ( 0 rule:ident seqnc 530-534 | ( 0 seq:0 ref:alpha 530-531 | ( 0 rule:alpha choice 530-531 | ( 0 ch:0 char-range 530-531 ) ) ) : ( 0 seq:1 repsep 531-534 | ( 0 rep ref:alphaNum 531-532 | ( 0 rule:alphaNum choice 531-532 | ( 0 ch:0 ref:alpha 531-532 | ( 0 rule:alpha choice 531-532 | ( 0 ch:0 char-range 531-532 ) ) ) ) ) : ( 0 sep text 532-532 ) : ( 0 rep ref:alphaNum 532-533 | ( 0 rule:alphaNum choice 532-533 | ( 0 ch:0 ref:alpha 532-533 | ( 0 rule:alpha choice 532-533 | ( 0 ch:0 char-range 532-533 ) ) ) ) ) : ( 0 sep text 533-533 ) : ( 0 rep ref:alphaNum 533-534 | ( 0 rule:alphaNum choice 533-534 | ( 0 ch:0 ref:alpha 533-534 | ( 0 rule:alpha choice 533-534 | ( 0 ch:0 char-range 533-534 ) ) ) ) ) : ( 0 sep text 534-534 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @534 | < None of choices matched input :: rule:alphaNum choice @534 | < Rule `alpha` didn't match :: ch:0 ref:alpha @534 | < None of choices matched input :: rule:alpha choice @534 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @534 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @534 > : < Expected '_', but found '
' :: ch:2 text @534 > > > : < Rule `num` didn't match :: ch:1 ref:num @534 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @534 > > > > ) ) ) : ( 0 seq:1 choice 534-534 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @534 | < Sequence failed at entry 0 :: rule:refSpec seqnc @534 | < Expected ':', but found '
' :: seq:0 text @534 > > > : ( 0 ch:1 text 534-534 ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @534 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @534 | < Expected ',', but found '
' :: seq:0 text @534 > > > ) : ( 0 seq:7 ref:ws 534-535 | ( 0 rule:ws repsep 534-535 | ( 0 rep seqnc 534-534 | ( 0 seq:0 ref:spaces 534-534 | ( 0 rule:spaces repsep 534-534 | < Expected ' ', but found '
' :: rep text @534 > ) ) : ( 0 seq:1 choice 534-534 | < Rule `comment` didn't match :: ch:0 ref:comment @534 | < Sequence failed at entry 0 :: rule:comment seqnc @534 | < Expected '#', but found '
' :: seq:0 text @534 > > > : ( 0 ch:1 text 534-534 ) ) ) : ( 0 sep text 534-535 ) : ( 0 rep seqnc 535-535 | ( 0 seq:0 ref:spaces 535-535 | ( 0 rule:spaces repsep 535-535 | < Expected ' ', but found '}' :: rep text @535 > ) ) : ( 0 seq:1 choice 535-535 | < Rule `comment` didn't match :: ch:0 ref:comment @535 | < Sequence failed at entry 0 :: rule:comment seqnc @535 | < Expected '#', but found '}' :: seq:0 text @535 > > > : ( 0 ch:1 text 535-535 ) ) ) : < Expected '
', but found '}' :: sep text @535 > ) ) : ( 0 seq:8 text 535-536 ) ) ) ) ) : ( 0 sep ref:ws 536-537 | ( 0 rule:ws repsep 536-537 | ( 0 rep seqnc 536-536 | ( 0 seq:0 ref:spaces 536-536 | ( 0 rule:spaces repsep 536-536 | < Expected ' ', but found '
' :: rep text @536 > ) ) : ( 0 seq:1 choice 536-536 | < Rule `comment` didn't match :: ch:0 ref:comment @536 | < Sequence failed at entry 0 :: rule:comment seqnc @536 | < Expected '#', but found '
' :: seq:0 text @536 > > > : ( 0 ch:1 text 536-536 ) ) ) : ( 0 sep text 536-537 ) : ( 0 rep seqnc 537-537 | ( 0 seq:0 ref:spaces 537-537 | ( 0 rule:spaces repsep 537-537 | < Expected ' ', but found 't' :: rep text @537 > ) ) : ( 0 seq:1 choice 537-537 | < Rule `comment` didn't match :: ch:0 ref:comment @537 | < Sequence failed at entry 0 :: rule:comment seqnc @537 | < Expected '#', but found 't' :: seq:0 text @537 > > > : ( 0 ch:1 text 537-537 ) ) ) : < Expected '
', but found 't' :: sep text @537 > ) ) : ( 0 rep ref:declaration 537-579 | ( 0 rule:declaration choice 537-579 | < Rule `rule` didn't match :: ch:0 ref:rule @537 | < Sequence failed at entry 0 :: rule:rule seqnc @537 | < Rule `defKW` didn't match :: seq:0 ref:defKW @537 | < Expected 'def', but found 'tab' :: rule:defKW text @537 > > > > : ( 0 ch:1 ref:tableDecl 537-579 | ( 0 rule:tableDecl seqnc 537-579 | ( 0 seq:0 ref:tableKW 537-542 | ( 0 rule:tableKW text 537-542 ) ) : ( 0 seq:1 ref:ws 542-543 | ( 0 rule:ws repsep 542-543 | ( 0 rep seqnc 542-543 | ( 0 seq:0 ref:spaces 542-543 | ( 0 rule:spaces repsep 542-543 | ( 0 rep text 542-543 ) : ( 0 sep text 543-543 ) : < Expected ' ', but found 'i' :: rep text @543 > ) ) : ( 0 seq:1 choice 543-543 | < Rule `comment` didn't match :: ch:0 ref:comment @543 | < Sequence failed at entry 0 :: rule:comment seqnc @543 | < Expected '#', but found 'i' :: seq:0 text @543 > > > : ( 0 ch:1 text 543-543 ) ) ) : < Expected '
', but found 'i' :: sep text @543 > ) ) : ( 0 seq:2 ref:name 543-548 | ( 0 rule:qualifier repsep 543-548 | ( 0 rep ref:ident 543-548 | ( 0 rule:ident seqnc 543-548 | ( 0 seq:0 ref:alpha 543-544 | ( 0 rule:alpha choice 543-544 | ( 0 ch:0 char-range 543-544 ) ) ) : ( 0 seq:1 repsep 544-548 | ( 0 rep ref:alphaNum 544-545 | ( 0 rule:alphaNum choice 544-545 | ( 0 ch:0 ref:alpha 544-545 | ( 0 rule:alpha choice 544-545 | ( 0 ch:0 char-range 544-545 ) ) ) ) ) : ( 0 sep text 545-545 ) : ( 0 rep ref:alphaNum 545-546 | ( 0 rule:alphaNum choice 545-546 | ( 0 ch:0 ref:alpha 545-546 | ( 0 rule:alpha choice 545-546 | ( 0 ch:0 char-range 545-546 ) ) ) ) ) : ( 0 sep text 546-546 ) : ( 0 rep ref:alphaNum 546-547 | ( 0 rule:alphaNum choice 546-547 | ( 0 ch:0 ref:alpha 546-547 | ( 0 rule:alpha choice 546-547 | ( 0 ch:0 char-range 546-547 ) ) ) ) ) : ( 0 sep text 547-547 ) : ( 0 rep ref:alphaNum 547-548 | ( 0 rule:alphaNum choice 547-548 | ( 0 ch:0 ref:alpha 547-548 | ( 0 rule:alpha choice 547-548 | ( 0 ch:0 char-range 547-548 ) ) ) ) ) : ( 0 sep text 548-548 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @548 | < None of choices matched input :: rule:alphaNum choice @548 | < Rule `alpha` didn't match :: ch:0 ref:alpha @548 | < None of choices matched input :: rule:alpha choice @548 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @548 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @548 > : < Expected '_', but found ' ' :: ch:2 text @548 > > > : < Rule `num` didn't match :: ch:1 ref:num @548 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @548 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @548 > ) ) : ( 0 seq:3 ref:ws 548-549 | ( 0 rule:ws repsep 548-549 | ( 0 rep seqnc 548-549 | ( 0 seq:0 ref:spaces 548-549 | ( 0 rule:spaces repsep 548-549 | ( 0 rep text 548-549 ) : ( 0 sep text 549-549 ) : < Expected ' ', but found '{' :: rep text @549 > ) ) : ( 0 seq:1 choice 549-549 | < Rule `comment` didn't match :: ch:0 ref:comment @549 | < Sequence failed at entry 0 :: rule:comment seqnc @549 | < Expected '#', but found '{' :: seq:0 text @549 > > > : ( 0 ch:1 text 549-549 ) ) ) : < Expected '
', but found '{' :: sep text @549 > ) ) : ( 0 seq:4 text 549-550 ) : ( 0 seq:5 ref:ws 550-553 | ( 0 rule:ws repsep 550-553 | ( 0 rep seqnc 550-550 | ( 0 seq:0 ref:spaces 550-550 | ( 0 rule:spaces repsep 550-550 | < Expected ' ', but found '
' :: rep text @550 > ) ) : ( 0 seq:1 choice 550-550 | < Rule `comment` didn't match :: ch:0 ref:comment @550 | < Sequence failed at entry 0 :: rule:comment seqnc @550 | < Expected '#', but found '
' :: seq:0 text @550 > > > : ( 0 ch:1 text 550-550 ) ) ) : ( 0 sep text 550-551 ) : ( 0 rep seqnc 551-553 | ( 0 seq:0 ref:spaces 551-553 | ( 0 rule:spaces repsep 551-553 | ( 0 rep text 551-552 ) : ( 0 sep text 552-552 ) : ( 0 rep text 552-553 ) : ( 0 sep text 553-553 ) : < Expected ' ', but found 'p' :: rep text @553 > ) ) : ( 0 seq:1 choice 553-553 | < Rule `comment` didn't match :: ch:0 ref:comment @553 | < Sequence failed at entry 0 :: rule:comment seqnc @553 | < Expected '#', but found 'p' :: seq:0 text @553 > > > : ( 0 ch:1 text 553-553 ) ) ) : < Expected '
', but found 'p' :: sep text @553 > ) ) : ( 0 seq:6 repsep 553-577 | ( 0 rep ref:tableAttr 553-561 | ( 0 rule:tableAttr seqnc 553-561 | ( 0 seq:0 ref:ident 553-561 | ( 0 rule:ident seqnc 553-561 | ( 0 seq:0 ref:alpha 553-554 | ( 0 rule:alpha choice 553-554 | ( 0 ch:0 char-range 553-554 ) ) ) : ( 0 seq:1 repsep 554-561 | ( 0 rep ref:alphaNum 554-555 | ( 0 rule:alphaNum choice 554-555 | ( 0 ch:0 ref:alpha 554-555 | ( 0 rule:alpha choice 554-555 | ( 0 ch:0 char-range 554-555 ) ) ) ) ) : ( 0 sep text 555-555 ) : ( 0 rep ref:alphaNum 555-556 | ( 0 rule:alphaNum choice 555-556 | ( 0 ch:0 ref:alpha 555-556 | ( 0 rule:alpha choice 555-556 | ( 0 ch:0 char-range 555-556 ) ) ) ) ) : ( 0 sep text 556-556 ) : ( 0 rep ref:alphaNum 556-557 | ( 0 rule:alphaNum choice 556-557 | ( 0 ch:0 ref:alpha 556-557 | ( 0 rule:alpha choice 556-557 | ( 0 ch:0 char-range 556-557 ) ) ) ) ) : ( 0 sep text 557-557 ) : ( 0 rep ref:alphaNum 557-558 | ( 0 rule:alphaNum choice 557-558 | ( 0 ch:0 ref:alpha 557-558 | ( 0 rule:alpha choice 557-558 | ( 0 ch:0 char-range 557-558 ) ) ) ) ) : ( 0 sep text 558-558 ) : ( 0 rep ref:alphaNum 558-559 | ( 0 rule:alphaNum choice 558-559 | ( 0 ch:0 ref:alpha 558-559 | ( 0 rule:alpha choice 558-559 | ( 0 ch:0 char-range 558-559 ) ) ) ) ) : ( 0 sep text 559-559 ) : ( 0 rep ref:alphaNum 559-560 | ( 0 rule:alphaNum choice 559-560 | ( 0 ch:0 ref:alpha 559-560 | ( 0 rule:alpha choice 559-560 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @559 > : ( 0 ch:1 char-range 559-560 ) ) ) ) ) : ( 0 sep text 560-560 ) : ( 0 rep ref:alphaNum 560-561 | ( 0 rule:alphaNum choice 560-561 | ( 0 ch:0 ref:alpha 560-561 | ( 0 rule:alpha choice 560-561 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @560 > : ( 0 ch:1 char-range 560-561 ) ) ) ) ) : ( 0 sep text 561-561 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @561 | < None of choices matched input :: rule:alphaNum choice @561 | < Rule `alpha` didn't match :: ch:0 ref:alpha @561 | < None of choices matched input :: rule:alpha choice @561 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @561 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @561 > : < Expected '_', but found ',' :: ch:2 text @561 > > > : < Rule `num` didn't match :: ch:1 ref:num @561 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @561 > > > > ) ) ) : ( 0 seq:1 choice 561-561 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @561 | < Sequence failed at entry 0 :: rule:refSpec seqnc @561 | < Expected ':', but found ',' :: seq:0 text @561 > > > : ( 0 ch:1 text 561-561 ) ) ) ) : ( 0 sep ref:commaSpace 561-565 | ( 0 rule:commaSpace seqnc 561-565 | ( 0 seq:0 text 561-562 ) : ( 0 seq:1 ref:ws 562-565 | ( 0 rule:ws repsep 562-565 | ( 0 rep seqnc 562-562 | ( 0 seq:0 ref:spaces 562-562 | ( 0 rule:spaces repsep 562-562 | < Expected ' ', but found '
' :: rep text @562 > ) ) : ( 0 seq:1 choice 562-562 | < Rule `comment` didn't match :: ch:0 ref:comment @562 | < Sequence failed at entry 0 :: rule:comment seqnc @562 | < Expected '#', but found '
' :: seq:0 text @562 > > > : ( 0 ch:1 text 562-562 ) ) ) : ( 0 sep text 562-563 ) : ( 0 rep seqnc 563-565 | ( 0 seq:0 ref:spaces 563-565 | ( 0 rule:spaces repsep 563-565 | ( 0 rep text 563-564 ) : ( 0 sep text 564-564 ) : ( 0 rep text 564-565 ) : ( 0 sep text 565-565 ) : < Expected ' ', but found 't' :: rep text @565 > ) ) : ( 0 seq:1 choice 565-565 | < Rule `comment` didn't match :: ch:0 ref:comment @565 | < Sequence failed at entry 0 :: rule:comment seqnc @565 | < Expected '#', but found 't' :: seq:0 text @565 > > > : ( 0 ch:1 text 565-565 ) ) ) : < Expected '
', but found 't' :: sep text @565 > ) ) ) ) : ( 0 rep ref:tableAttr 565-569 | ( 0 rule:tableAttr seqnc 565-569 | ( 0 seq:0 ref:ident 565-569 | ( 0 rule:ident seqnc 565-569 | ( 0 seq:0 ref:alpha 565-566 | ( 0 rule:alpha choice 565-566 | ( 0 ch:0 char-range 565-566 ) ) ) : ( 0 seq:1 repsep 566-569 | ( 0 rep ref:alphaNum 566-567 | ( 0 rule:alphaNum choice 566-567 | ( 0 ch:0 ref:alpha 566-567 | ( 0 rule:alpha choice 566-567 | ( 0 ch:0 char-range 566-567 ) ) ) ) ) : ( 0 sep text 567-567 ) : ( 0 rep ref:alphaNum 567-568 | ( 0 rule:alphaNum choice 567-568 | ( 0 ch:0 ref:alpha 567-568 | ( 0 rule:alpha choice 567-568 | ( 0 ch:0 char-range 567-568 ) ) ) ) ) : ( 0 sep text 568-568 ) : ( 0 rep ref:alphaNum 568-569 | ( 0 rule:alphaNum choice 568-569 | ( 0 ch:0 ref:alpha 568-569 | ( 0 rule:alpha choice 568-569 | ( 0 ch:0 char-range 568-569 ) ) ) ) ) : ( 0 sep text 569-569 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @569 | < None of choices matched input :: rule:alphaNum choice @569 | < Rule `alpha` didn't match :: ch:0 ref:alpha @569 | < None of choices matched input :: rule:alpha choice @569 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @569 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @569 > : < Expected '_', but found ',' :: ch:2 text @569 > > > : < Rule `num` didn't match :: ch:1 ref:num @569 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @569 > > > > ) ) ) : ( 0 seq:1 choice 569-569 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @569 | < Sequence failed at entry 0 :: rule:refSpec seqnc @569 | < Expected ':', but found ',' :: seq:0 text @569 > > > : ( 0 ch:1 text 569-569 ) ) ) ) : ( 0 sep ref:commaSpace 569-573 | ( 0 rule:commaSpace seqnc 569-573 | ( 0 seq:0 text 569-570 ) : ( 0 seq:1 ref:ws 570-573 | ( 0 rule:ws repsep 570-573 | ( 0 rep seqnc 570-570 | ( 0 seq:0 ref:spaces 570-570 | ( 0 rule:spaces repsep 570-570 | < Expected ' ', but found '
' :: rep text @570 > ) ) : ( 0 seq:1 choice 570-570 | < Rule `comment` didn't match :: ch:0 ref:comment @570 | < Sequence failed at entry 0 :: rule:comment seqnc @570 | < Expected '#', but found '
' :: seq:0 text @570 > > > : ( 0 ch:1 text 570-570 ) ) ) : ( 0 sep text 570-571 ) : ( 0 rep seqnc 571-573 | ( 0 seq:0 ref:spaces 571-573 | ( 0 rule:spaces repsep 571-573 | ( 0 rep text 571-572 ) : ( 0 sep text 572-572 ) : ( 0 rep text 572-573 ) : ( 0 sep text 573-573 ) : < Expected ' ', but found 's' :: rep text @573 > ) ) : ( 0 seq:1 choice 573-573 | < Rule `comment` didn't match :: ch:0 ref:comment @573 | < Sequence failed at entry 0 :: rule:comment seqnc @573 | < Expected '#', but found 's' :: seq:0 text @573 > > > : ( 0 ch:1 text 573-573 ) ) ) : < Expected '
', but found 's' :: sep text @573 > ) ) ) ) : ( 0 rep ref:tableAttr 573-577 | ( 0 rule:tableAttr seqnc 573-577 | ( 0 seq:0 ref:ident 573-577 | ( 0 rule:ident seqnc 573-577 | ( 0 seq:0 ref:alpha 573-574 | ( 0 rule:alpha choice 573-574 | ( 0 ch:0 char-range 573-574 ) ) ) : ( 0 seq:1 repsep 574-577 | ( 0 rep ref:alphaNum 574-575 | ( 0 rule:alphaNum choice 574-575 | ( 0 ch:0 ref:alpha 574-575 | ( 0 rule:alpha choice 574-575 | ( 0 ch:0 char-range 574-575 ) ) ) ) ) : ( 0 sep text 575-575 ) : ( 0 rep ref:alphaNum 575-576 | ( 0 rule:alphaNum choice 575-576 | ( 0 ch:0 ref:alpha 575-576 | ( 0 rule:alpha choice 575-576 | ( 0 ch:0 char-range 575-576 ) ) ) ) ) : ( 0 sep text 576-576 ) : ( 0 rep ref:alphaNum 576-577 | ( 0 rule:alphaNum choice 576-577 | ( 0 ch:0 ref:alpha 576-577 | ( 0 rule:alpha choice 576-577 | ( 0 ch:0 char-range 576-577 ) ) ) ) ) : ( 0 sep text 577-577 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @577 | < None of choices matched input :: rule:alphaNum choice @577 | < Rule `alpha` didn't match :: ch:0 ref:alpha @577 | < None of choices matched input :: rule:alpha choice @577 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @577 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @577 > : < Expected '_', but found '
' :: ch:2 text @577 > > > : < Rule `num` didn't match :: ch:1 ref:num @577 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @577 > > > > ) ) ) : ( 0 seq:1 choice 577-577 | < Rule `refSpec` didn't match :: ch:0 ref:refSpec @577 | < Sequence failed at entry 0 :: rule:refSpec seqnc @577 | < Expected ':', but found '
' :: seq:0 text @577 > > > : ( 0 ch:1 text 577-577 ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @577 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @577 | < Expected ',', but found '
' :: seq:0 text @577 > > > ) : ( 0 seq:7 ref:ws 577-578 | ( 0 rule:ws repsep 577-578 | ( 0 rep seqnc 577-577 | ( 0 seq:0 ref:spaces 577-577 | ( 0 rule:spaces repsep 577-577 | < Expected ' ', but found '
' :: rep text @577 > ) ) : ( 0 seq:1 choice 577-577 | < Rule `comment` didn't match :: ch:0 ref:comment @577 | < Sequence failed at entry 0 :: rule:comment seqnc @577 | < Expected '#', but found '
' :: seq:0 text @577 > > > : ( 0 ch:1 text 577-577 ) ) ) : ( 0 sep text 577-578 ) : ( 0 rep seqnc 578-578 | ( 0 seq:0 ref:spaces 578-578 | ( 0 rule:spaces repsep 578-578 | < Expected ' ', but found '}' :: rep text @578 > ) ) : ( 0 seq:1 choice 578-578 | < Rule `comment` didn't match :: ch:0 ref:comment @578 | < Sequence failed at entry 0 :: rule:comment seqnc @578 | < Expected '#', but found '}' :: seq:0 text @578 > > > : ( 0 ch:1 text 578-578 ) ) ) : < Expected '
', but found '}' :: sep text @578 > ) ) : ( 0 seq:8 text 578-579 ) ) ) ) ) : ( 0 sep ref:ws 579-581 | ( 0 rule:ws repsep 579-581 | ( 0 rep seqnc 579-579 | ( 0 seq:0 ref:spaces 579-579 | ( 0 rule:spaces repsep 579-579 | < Expected ' ', but found '
' :: rep text @579 > ) ) : ( 0 seq:1 choice 579-579 | < Rule `comment` didn't match :: ch:0 ref:comment @579 | < Sequence failed at entry 0 :: rule:comment seqnc @579 | < Expected '#', but found '
' :: seq:0 text @579 > > > : ( 0 ch:1 text 579-579 ) ) ) : ( 0 sep text 579-580 ) : ( 0 rep seqnc 580-580 | ( 0 seq:0 ref:spaces 580-580 | ( 0 rule:spaces repsep 580-580 | < Expected ' ', but found '
' :: rep text @580 > ) ) : ( 0 seq:1 choice 580-580 | < Rule `comment` didn't match :: ch:0 ref:comment @580 | < Sequence failed at entry 0 :: rule:comment seqnc @580 | < Expected '#', but found '
' :: seq:0 text @580 > > > : ( 0 ch:1 text 580-580 ) ) ) : ( 0 sep text 580-581 ) : ( 0 rep seqnc 581-581 | ( 0 seq:0 ref:spaces 581-581 | ( 0 rule:spaces repsep 581-581 | < Expected ' ', but found 'd' :: rep text @581 > ) ) : ( 0 seq:1 choice 581-581 | < Rule `comment` didn't match :: ch:0 ref:comment @581 | < Sequence failed at entry 0 :: rule:comment seqnc @581 | < Expected '#', but found 'd' :: seq:0 text @581 > > > : ( 0 ch:1 text 581-581 ) ) ) : < Expected '
', but found 'd' :: sep text @581 > ) ) : ( 0 rep ref:declaration 581-890 | ( 0 rule:declaration choice 581-890 | ( 0 ch:0 ref:rule 581-890 | ( 0 rule:rule seqnc 581-890 | ( 0 seq:0 ref:defKW 581-584 | ( 0 rule:defKW text 581-584 ) ) : ( 0 seq:1 ref:ws 584-585 | ( 0 rule:ws repsep 584-585 | ( 0 rep seqnc 584-585 | ( 0 seq:0 ref:spaces 584-585 | ( 0 rule:spaces repsep 584-585 | ( 0 rep text 584-585 ) : ( 0 sep text 585-585 ) : < Expected ' ', but found 'v' :: rep text @585 > ) ) : ( 0 seq:1 choice 585-585 | < Rule `comment` didn't match :: ch:0 ref:comment @585 | < Sequence failed at entry 0 :: rule:comment seqnc @585 | < Expected '#', but found 'v' :: seq:0 text @585 > > > : ( 0 ch:1 text 585-585 ) ) ) : < Expected '
', but found 'v' :: sep text @585 > ) ) : ( 0 seq:2 ref:record 585-628 | ( 0 rule:record seqnc 585-628 | ( 0 seq:0 ref:qualifier 585-600 | ( 0 rule:qualifier repsep 585-600 | ( 0 rep ref:ident 585-600 | ( 0 rule:ident seqnc 585-600 | ( 0 seq:0 ref:alpha 585-586 | ( 0 rule:alpha choice 585-586 | ( 0 ch:0 char-range 585-586 ) ) ) : ( 0 seq:1 repsep 586-600 | ( 0 rep ref:alphaNum 586-587 | ( 0 rule:alphaNum choice 586-587 | ( 0 ch:0 ref:alpha 586-587 | ( 0 rule:alpha choice 586-587 | ( 0 ch:0 char-range 586-587 ) ) ) ) ) : ( 0 sep text 587-587 ) : ( 0 rep ref:alphaNum 587-588 | ( 0 rule:alphaNum choice 587-588 | ( 0 ch:0 ref:alpha 587-588 | ( 0 rule:alpha choice 587-588 | ( 0 ch:0 char-range 587-588 ) ) ) ) ) : ( 0 sep text 588-588 ) : ( 0 rep ref:alphaNum 588-589 | ( 0 rule:alphaNum choice 588-589 | ( 0 ch:0 ref:alpha 588-589 | ( 0 rule:alpha choice 588-589 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @588 > : ( 0 ch:1 char-range 588-589 ) ) ) ) ) : ( 0 sep text 589-589 ) : ( 0 rep ref:alphaNum 589-590 | ( 0 rule:alphaNum choice 589-590 | ( 0 ch:0 ref:alpha 589-590 | ( 0 rule:alpha choice 589-590 | ( 0 ch:0 char-range 589-590 ) ) ) ) ) : ( 0 sep text 590-590 ) : ( 0 rep ref:alphaNum 590-591 | ( 0 rule:alphaNum choice 590-591 | ( 0 ch:0 ref:alpha 590-591 | ( 0 rule:alpha choice 590-591 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @590 > : ( 0 ch:1 char-range 590-591 ) ) ) ) ) : ( 0 sep text 591-591 ) : ( 0 rep ref:alphaNum 591-592 | ( 0 rule:alphaNum choice 591-592 | ( 0 ch:0 ref:alpha 591-592 | ( 0 rule:alpha choice 591-592 | ( 0 ch:0 char-range 591-592 ) ) ) ) ) : ( 0 sep text 592-592 ) : ( 0 rep ref:alphaNum 592-593 | ( 0 rule:alphaNum choice 592-593 | ( 0 ch:0 ref:alpha 592-593 | ( 0 rule:alpha choice 592-593 | ( 0 ch:0 char-range 592-593 ) ) ) ) ) : ( 0 sep text 593-593 ) : ( 0 rep ref:alphaNum 593-594 | ( 0 rule:alphaNum choice 593-594 | ( 0 ch:0 ref:alpha 593-594 | ( 0 rule:alpha choice 593-594 | ( 0 ch:0 char-range 593-594 ) ) ) ) ) : ( 0 sep text 594-594 ) : ( 0 rep ref:alphaNum 594-595 | ( 0 rule:alphaNum choice 594-595 | ( 0 ch:0 ref:alpha 594-595 | ( 0 rule:alpha choice 594-595 | ( 0 ch:0 char-range 594-595 ) ) ) ) ) : ( 0 sep text 595-595 ) : ( 0 rep ref:alphaNum 595-596 | ( 0 rule:alphaNum choice 595-596 | ( 0 ch:0 ref:alpha 595-596 | ( 0 rule:alpha choice 595-596 | ( 0 ch:0 char-range 595-596 ) ) ) ) ) : ( 0 sep text 596-596 ) : ( 0 rep ref:alphaNum 596-597 | ( 0 rule:alphaNum choice 596-597 | ( 0 ch:0 ref:alpha 596-597 | ( 0 rule:alpha choice 596-597 | ( 0 ch:0 char-range 596-597 ) ) ) ) ) : ( 0 sep text 597-597 ) : ( 0 rep ref:alphaNum 597-598 | ( 0 rule:alphaNum choice 597-598 | ( 0 ch:0 ref:alpha 597-598 | ( 0 rule:alpha choice 597-598 | ( 0 ch:0 char-range 597-598 ) ) ) ) ) : ( 0 sep text 598-598 ) : ( 0 rep ref:alphaNum 598-599 | ( 0 rule:alphaNum choice 598-599 | ( 0 ch:0 ref:alpha 598-599 | ( 0 rule:alpha choice 598-599 | ( 0 ch:0 char-range 598-599 ) ) ) ) ) : ( 0 sep text 599-599 ) : ( 0 rep ref:alphaNum 599-600 | ( 0 rule:alphaNum choice 599-600 | ( 0 ch:0 ref:alpha 599-600 | ( 0 rule:alpha choice 599-600 | ( 0 ch:0 char-range 599-600 ) ) ) ) ) : ( 0 sep text 600-600 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @600 | < None of choices matched input :: rule:alphaNum choice @600 | < Rule `alpha` didn't match :: ch:0 ref:alpha @600 | < None of choices matched input :: rule:alpha choice @600 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @600 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @600 > : < Expected '_', but found '{' :: ch:2 text @600 > > > : < Rule `num` didn't match :: ch:1 ref:num @600 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @600 > > > > ) ) ) : < Expected '.', but found '{' :: sep text @600 > ) ) : ( 0 seq:1 text 600-601 ) : ( 0 seq:2 ref:ws 601-601 | ( 0 rule:ws repsep 601-601 | ( 0 rep seqnc 601-601 | ( 0 seq:0 ref:spaces 601-601 | ( 0 rule:spaces repsep 601-601 | < Expected ' ', but found 's' :: rep text @601 > ) ) : ( 0 seq:1 choice 601-601 | < Rule `comment` didn't match :: ch:0 ref:comment @601 | < Sequence failed at entry 0 :: rule:comment seqnc @601 | < Expected '#', but found 's' :: seq:0 text @601 > > > : ( 0 ch:1 text 601-601 ) ) ) : < Expected '
', but found 's' :: sep text @601 > ) ) : ( 0 seq:3 ref:recordAttrs 601-627 | ( 0 rule:recordAttrs repsep 601-627 | ( 0 rep choice 601-609 | ( 0 ch:0 ref:recordKeyValue 601-609 | ( 0 rule:recordKeyValue seqnc 601-609 | ( 0 seq:0 ref:ident 601-606 | ( 0 rule:ident seqnc 601-606 | ( 0 seq:0 ref:alpha 601-602 | ( 0 rule:alpha choice 601-602 | ( 0 ch:0 char-range 601-602 ) ) ) : ( 0 seq:1 repsep 602-606 | ( 0 rep ref:alphaNum 602-603 | ( 0 rule:alphaNum choice 602-603 | ( 0 ch:0 ref:alpha 602-603 | ( 0 rule:alpha choice 602-603 | ( 0 ch:0 char-range 602-603 ) ) ) ) ) : ( 0 sep text 603-603 ) : ( 0 rep ref:alphaNum 603-604 | ( 0 rule:alphaNum choice 603-604 | ( 0 ch:0 ref:alpha 603-604 | ( 0 rule:alpha choice 603-604 | ( 0 ch:0 char-range 603-604 ) ) ) ) ) : ( 0 sep text 604-604 ) : ( 0 rep ref:alphaNum 604-605 | ( 0 rule:alphaNum choice 604-605 | ( 0 ch:0 ref:alpha 604-605 | ( 0 rule:alpha choice 604-605 | ( 0 ch:0 char-range 604-605 ) ) ) ) ) : ( 0 sep text 605-605 ) : ( 0 rep ref:alphaNum 605-606 | ( 0 rule:alphaNum choice 605-606 | ( 0 ch:0 ref:alpha 605-606 | ( 0 rule:alpha choice 605-606 | ( 0 ch:0 char-range 605-606 ) ) ) ) ) : ( 0 sep text 606-606 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @606 | < None of choices matched input :: rule:alphaNum choice @606 | < Rule `alpha` didn't match :: ch:0 ref:alpha @606 | < None of choices matched input :: rule:alpha choice @606 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @606 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @606 > : < Expected '_', but found ':' :: ch:2 text @606 > > > : < Rule `num` didn't match :: ch:1 ref:num @606 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @606 > > > > ) ) ) : ( 0 seq:1 text 606-607 ) : ( 0 seq:2 ref:ws 607-608 | ( 0 rule:ws repsep 607-608 | ( 0 rep seqnc 607-608 | ( 0 seq:0 ref:spaces 607-608 | ( 0 rule:spaces repsep 607-608 | ( 0 rep text 607-608 ) : ( 0 sep text 608-608 ) : < Expected ' ', but found 'I' :: rep text @608 > ) ) : ( 0 seq:1 choice 608-608 | < Rule `comment` didn't match :: ch:0 ref:comment @608 | < Sequence failed at entry 0 :: rule:comment seqnc @608 | < Expected '#', but found 'I' :: seq:0 text @608 > > > : ( 0 ch:1 text 608-608 ) ) ) : < Expected '
', but found 'I' :: sep text @608 > ) ) : ( 0 seq:3 ref:term 608-609 | ( 0 rule:term choice 608-609 | < Rule `record` didn't match :: ch:0 ref:record @608 | < Sequence failed at entry 1 :: rule:record seqnc @609 | ( 0 seq:0 ref:qualifier 608-609 | ( 0 rule:qualifier repsep 608-609 | ( 0 rep ref:ident 608-609 | ( 0 rule:ident seqnc 608-609 | ( 0 seq:0 ref:alpha 608-609 | ( 0 rule:alpha choice 608-609 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @608 > : ( 0 ch:1 char-range 608-609 ) ) ) : ( 0 seq:1 repsep 609-609 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @609 | < None of choices matched input :: rule:alphaNum choice @609 | < Rule `alpha` didn't match :: ch:0 ref:alpha @609 | < None of choices matched input :: rule:alpha choice @609 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @609 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @609 > : < Expected '_', but found ',' :: ch:2 text @609 > > > : < Rule `num` didn't match :: ch:1 ref:num @609 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @609 > > > > ) ) ) : < Expected '.', but found ',' :: sep text @609 > ) ) : < Expected '{', but found ',' :: seq:1 text @609 > > > : < Rule `int` didn't match :: ch:1 ref:int @608 | < Sequence failed at entry 1 :: rule:int seqnc @608 | ( 0 seq:0 choice 608-608 | < Expected '-', but found 'I' :: ch:0 text @608 > : ( 0 ch:1 text 608-608 ) ) : < Rule `num` didn't match :: seq:1 ref:first @608 | < Expected character in range from '0' to '9', but found 'I' :: rule:num char-range @608 > > > > : ( 0 ch:2 ref:var 608-609 | ( 0 rule:var seqnc 608-609 | ( 0 seq:0 char-range 608-609 ) : ( 0 seq:1 repsep 609-609 | < None of choices matched input :: rep choice @609 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @609 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @609 | < None of choices matched input :: rule:alphaNum choice @609 | < Rule `alpha` didn't match :: ch:0 ref:alpha @609 | < None of choices matched input :: rule:alpha choice @609 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @609 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @609 > : < Expected '_', but found ',' :: ch:2 text @609 > > > : < Rule `num` didn't match :: ch:1 ref:num @609 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @609 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 609-611 | ( 0 rule:commaSpace seqnc 609-611 | ( 0 seq:0 text 609-610 ) : ( 0 seq:1 ref:ws 610-611 | ( 0 rule:ws repsep 610-611 | ( 0 rep seqnc 610-611 | ( 0 seq:0 ref:spaces 610-611 | ( 0 rule:spaces repsep 610-611 | ( 0 rep text 610-611 ) : ( 0 sep text 611-611 ) : < Expected ' ', but found 'n' :: rep text @611 > ) ) : ( 0 seq:1 choice 611-611 | < Rule `comment` didn't match :: ch:0 ref:comment @611 | < Sequence failed at entry 0 :: rule:comment seqnc @611 | < Expected '#', but found 'n' :: seq:0 text @611 > > > : ( 0 ch:1 text 611-611 ) ) ) : < Expected '
', but found 'n' :: sep text @611 > ) ) ) ) : ( 0 rep choice 611-618 | ( 0 ch:0 ref:recordKeyValue 611-618 | ( 0 rule:recordKeyValue seqnc 611-618 | ( 0 seq:0 ref:ident 611-615 | ( 0 rule:ident seqnc 611-615 | ( 0 seq:0 ref:alpha 611-612 | ( 0 rule:alpha choice 611-612 | ( 0 ch:0 char-range 611-612 ) ) ) : ( 0 seq:1 repsep 612-615 | ( 0 rep ref:alphaNum 612-613 | ( 0 rule:alphaNum choice 612-613 | ( 0 ch:0 ref:alpha 612-613 | ( 0 rule:alpha choice 612-613 | ( 0 ch:0 char-range 612-613 ) ) ) ) ) : ( 0 sep text 613-613 ) : ( 0 rep ref:alphaNum 613-614 | ( 0 rule:alphaNum choice 613-614 | ( 0 ch:0 ref:alpha 613-614 | ( 0 rule:alpha choice 613-614 | ( 0 ch:0 char-range 613-614 ) ) ) ) ) : ( 0 sep text 614-614 ) : ( 0 rep ref:alphaNum 614-615 | ( 0 rule:alphaNum choice 614-615 | ( 0 ch:0 ref:alpha 614-615 | ( 0 rule:alpha choice 614-615 | ( 0 ch:0 char-range 614-615 ) ) ) ) ) : ( 0 sep text 615-615 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @615 | < None of choices matched input :: rule:alphaNum choice @615 | < Rule `alpha` didn't match :: ch:0 ref:alpha @615 | < None of choices matched input :: rule:alpha choice @615 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @615 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @615 > : < Expected '_', but found ':' :: ch:2 text @615 > > > : < Rule `num` didn't match :: ch:1 ref:num @615 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @615 > > > > ) ) ) : ( 0 seq:1 text 615-616 ) : ( 0 seq:2 ref:ws 616-617 | ( 0 rule:ws repsep 616-617 | ( 0 rep seqnc 616-617 | ( 0 seq:0 ref:spaces 616-617 | ( 0 rule:spaces repsep 616-617 | ( 0 rep text 616-617 ) : ( 0 sep text 617-617 ) : < Expected ' ', but found 'N' :: rep text @617 > ) ) : ( 0 seq:1 choice 617-617 | < Rule `comment` didn't match :: ch:0 ref:comment @617 | < Sequence failed at entry 0 :: rule:comment seqnc @617 | < Expected '#', but found 'N' :: seq:0 text @617 > > > : ( 0 ch:1 text 617-617 ) ) ) : < Expected '
', but found 'N' :: sep text @617 > ) ) : ( 0 seq:3 ref:term 617-618 | ( 0 rule:term choice 617-618 | < Rule `record` didn't match :: ch:0 ref:record @617 | < Sequence failed at entry 1 :: rule:record seqnc @618 | ( 0 seq:0 ref:qualifier 617-618 | ( 0 rule:qualifier repsep 617-618 | ( 0 rep ref:ident 617-618 | ( 0 rule:ident seqnc 617-618 | ( 0 seq:0 ref:alpha 617-618 | ( 0 rule:alpha choice 617-618 | < Expected character in range from 'a' to 'z', but found 'N' :: ch:0 char-range @617 > : ( 0 ch:1 char-range 617-618 ) ) ) : ( 0 seq:1 repsep 618-618 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @618 | < None of choices matched input :: rule:alphaNum choice @618 | < Rule `alpha` didn't match :: ch:0 ref:alpha @618 | < None of choices matched input :: rule:alpha choice @618 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @618 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @618 > : < Expected '_', but found ',' :: ch:2 text @618 > > > : < Rule `num` didn't match :: ch:1 ref:num @618 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @618 > > > > ) ) ) : < Expected '.', but found ',' :: sep text @618 > ) ) : < Expected '{', but found ',' :: seq:1 text @618 > > > : < Rule `int` didn't match :: ch:1 ref:int @617 | < Sequence failed at entry 1 :: rule:int seqnc @617 | ( 0 seq:0 choice 617-617 | < Expected '-', but found 'N' :: ch:0 text @617 > : ( 0 ch:1 text 617-617 ) ) : < Rule `num` didn't match :: seq:1 ref:first @617 | < Expected character in range from '0' to '9', but found 'N' :: rule:num char-range @617 > > > > : ( 0 ch:2 ref:var 617-618 | ( 0 rule:var seqnc 617-618 | ( 0 seq:0 char-range 617-618 ) : ( 0 seq:1 repsep 618-618 | < None of choices matched input :: rep choice @618 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @618 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @618 | < None of choices matched input :: rule:alphaNum choice @618 | < Rule `alpha` didn't match :: ch:0 ref:alpha @618 | < None of choices matched input :: rule:alpha choice @618 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @618 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @618 > : < Expected '_', but found ',' :: ch:2 text @618 > > > : < Rule `num` didn't match :: ch:1 ref:num @618 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @618 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 618-620 | ( 0 rule:commaSpace seqnc 618-620 | ( 0 seq:0 text 618-619 ) : ( 0 seq:1 ref:ws 619-620 | ( 0 rule:ws repsep 619-620 | ( 0 rep seqnc 619-620 | ( 0 seq:0 ref:spaces 619-620 | ( 0 rule:spaces repsep 619-620 | ( 0 rep text 619-620 ) : ( 0 sep text 620-620 ) : < Expected ' ', but found 's' :: rep text @620 > ) ) : ( 0 seq:1 choice 620-620 | < Rule `comment` didn't match :: ch:0 ref:comment @620 | < Sequence failed at entry 0 :: rule:comment seqnc @620 | < Expected '#', but found 's' :: seq:0 text @620 > > > : ( 0 ch:1 text 620-620 ) ) ) : < Expected '
', but found 's' :: sep text @620 > ) ) ) ) : ( 0 rep choice 620-627 | ( 0 ch:0 ref:recordKeyValue 620-627 | ( 0 rule:recordKeyValue seqnc 620-627 | ( 0 seq:0 ref:ident 620-624 | ( 0 rule:ident seqnc 620-624 | ( 0 seq:0 ref:alpha 620-621 | ( 0 rule:alpha choice 620-621 | ( 0 ch:0 char-range 620-621 ) ) ) : ( 0 seq:1 repsep 621-624 | ( 0 rep ref:alphaNum 621-622 | ( 0 rule:alphaNum choice 621-622 | ( 0 ch:0 ref:alpha 621-622 | ( 0 rule:alpha choice 621-622 | ( 0 ch:0 char-range 621-622 ) ) ) ) ) : ( 0 sep text 622-622 ) : ( 0 rep ref:alphaNum 622-623 | ( 0 rule:alphaNum choice 622-623 | ( 0 ch:0 ref:alpha 622-623 | ( 0 rule:alpha choice 622-623 | ( 0 ch:0 char-range 622-623 ) ) ) ) ) : ( 0 sep text 623-623 ) : ( 0 rep ref:alphaNum 623-624 | ( 0 rule:alphaNum choice 623-624 | ( 0 ch:0 ref:alpha 623-624 | ( 0 rule:alpha choice 623-624 | ( 0 ch:0 char-range 623-624 ) ) ) ) ) : ( 0 sep text 624-624 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @624 | < None of choices matched input :: rule:alphaNum choice @624 | < Rule `alpha` didn't match :: ch:0 ref:alpha @624 | < None of choices matched input :: rule:alpha choice @624 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @624 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @624 > : < Expected '_', but found ':' :: ch:2 text @624 > > > : < Rule `num` didn't match :: ch:1 ref:num @624 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @624 > > > > ) ) ) : ( 0 seq:1 text 624-625 ) : ( 0 seq:2 ref:ws 625-626 | ( 0 rule:ws repsep 625-626 | ( 0 rep seqnc 625-626 | ( 0 seq:0 ref:spaces 625-626 | ( 0 rule:spaces repsep 625-626 | ( 0 rep text 625-626 ) : ( 0 sep text 626-626 ) : < Expected ' ', but found 'S' :: rep text @626 > ) ) : ( 0 seq:1 choice 626-626 | < Rule `comment` didn't match :: ch:0 ref:comment @626 | < Sequence failed at entry 0 :: rule:comment seqnc @626 | < Expected '#', but found 'S' :: seq:0 text @626 > > > : ( 0 ch:1 text 626-626 ) ) ) : < Expected '
', but found 'S' :: sep text @626 > ) ) : ( 0 seq:3 ref:term 626-627 | ( 0 rule:term choice 626-627 | < Rule `record` didn't match :: ch:0 ref:record @626 | < Sequence failed at entry 1 :: rule:record seqnc @627 | ( 0 seq:0 ref:qualifier 626-627 | ( 0 rule:qualifier repsep 626-627 | ( 0 rep ref:ident 626-627 | ( 0 rule:ident seqnc 626-627 | ( 0 seq:0 ref:alpha 626-627 | ( 0 rule:alpha choice 626-627 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @626 > : ( 0 ch:1 char-range 626-627 ) ) ) : ( 0 seq:1 repsep 627-627 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @627 | < None of choices matched input :: rule:alphaNum choice @627 | < Rule `alpha` didn't match :: ch:0 ref:alpha @627 | < None of choices matched input :: rule:alpha choice @627 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @627 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @627 > : < Expected '_', but found '}' :: ch:2 text @627 > > > : < Rule `num` didn't match :: ch:1 ref:num @627 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @627 > > > > ) ) ) : < Expected '.', but found '}' :: sep text @627 > ) ) : < Expected '{', but found '}' :: seq:1 text @627 > > > : < Rule `int` didn't match :: ch:1 ref:int @626 | < Sequence failed at entry 1 :: rule:int seqnc @626 | ( 0 seq:0 choice 626-626 | < Expected '-', but found 'S' :: ch:0 text @626 > : ( 0 ch:1 text 626-626 ) ) : < Rule `num` didn't match :: seq:1 ref:first @626 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @626 > > > > : ( 0 ch:2 ref:var 626-627 | ( 0 rule:var seqnc 626-627 | ( 0 seq:0 char-range 626-627 ) : ( 0 seq:1 repsep 627-627 | < None of choices matched input :: rep choice @627 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @627 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @627 | < None of choices matched input :: rule:alphaNum choice @627 | < Rule `alpha` didn't match :: ch:0 ref:alpha @627 | < None of choices matched input :: rule:alpha choice @627 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @627 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @627 > : < Expected '_', but found '}' :: ch:2 text @627 > > > : < Rule `num` didn't match :: ch:1 ref:num @627 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @627 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @627 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @627 | < Expected ',', but found '}' :: seq:0 text @627 > > > ) ) : ( 0 seq:4 ref:ws 627-627 | ( 0 rule:ws repsep 627-627 | ( 0 rep seqnc 627-627 | ( 0 seq:0 ref:spaces 627-627 | ( 0 rule:spaces repsep 627-627 | < Expected ' ', but found '}' :: rep text @627 > ) ) : ( 0 seq:1 choice 627-627 | < Rule `comment` didn't match :: ch:0 ref:comment @627 | < Sequence failed at entry 0 :: rule:comment seqnc @627 | < Expected '#', but found '}' :: seq:0 text @627 > > > : ( 0 ch:1 text 627-627 ) ) ) : < Expected '
', but found '}' :: sep text @627 > ) ) : ( 0 seq:5 text 627-628 ) ) ) : ( 0 seq:3 ref:ws 628-629 | ( 0 rule:ws repsep 628-629 | ( 0 rep seqnc 628-629 | ( 0 seq:0 ref:spaces 628-629 | ( 0 rule:spaces repsep 628-629 | ( 0 rep text 628-629 ) : ( 0 sep text 629-629 ) : < Expected ' ', but found '{' :: rep text @629 > ) ) : ( 0 seq:1 choice 629-629 | < Rule `comment` didn't match :: ch:0 ref:comment @629 | < Sequence failed at entry 0 :: rule:comment seqnc @629 | < Expected '#', but found '{' :: seq:0 text @629 > > > : ( 0 ch:1 text 629-629 ) ) ) : < Expected '
', but found '{' :: sep text @629 > ) ) : ( 0 seq:4 text 629-630 ) : ( 0 seq:5 ref:ws 630-633 | ( 0 rule:ws repsep 630-633 | ( 0 rep seqnc 630-630 | ( 0 seq:0 ref:spaces 630-630 | ( 0 rule:spaces repsep 630-630 | < Expected ' ', but found '
' :: rep text @630 > ) ) : ( 0 seq:1 choice 630-630 | < Rule `comment` didn't match :: ch:0 ref:comment @630 | < Sequence failed at entry 0 :: rule:comment seqnc @630 | < Expected '#', but found '
' :: seq:0 text @630 > > > : ( 0 ch:1 text 630-630 ) ) ) : ( 0 sep text 630-631 ) : ( 0 rep seqnc 631-633 | ( 0 seq:0 ref:spaces 631-633 | ( 0 rule:spaces repsep 631-633 | ( 0 rep text 631-632 ) : ( 0 sep text 632-632 ) : ( 0 rep text 632-633 ) : ( 0 sep text 633-633 ) : < Expected ' ', but found 'c' :: rep text @633 > ) ) : ( 0 seq:1 choice 633-633 | < Rule `comment` didn't match :: ch:0 ref:comment @633 | < Sequence failed at entry 0 :: rule:comment seqnc @633 | < Expected '#', but found 'c' :: seq:0 text @633 > > > : ( 0 ch:1 text 633-633 ) ) ) : < Expected '
', but found 'c' :: sep text @633 > ) ) : ( 0 seq:6 repsep 633-889 | ( 0 rep ref:disjunct 633-889 | ( 0 rule:disjunct repsep 633-889 | ( 0 rep ref:conjunct 633-888 | ( 0 rule:conjunct choice 633-888 | ( 0 ch:0 ref:nested 633-888 | ( 0 rule:nested seqnc 633-888 | ( 0 seq:0 ref:qualifier 633-643 | ( 0 rule:qualifier repsep 633-643 | ( 0 rep ref:ident 633-643 | ( 0 rule:ident seqnc 633-643 | ( 0 seq:0 ref:alpha 633-634 | ( 0 rule:alpha choice 633-634 | ( 0 ch:0 char-range 633-634 ) ) ) : ( 0 seq:1 repsep 634-643 | ( 0 rep ref:alphaNum 634-635 | ( 0 rule:alphaNum choice 634-635 | ( 0 ch:0 ref:alpha 634-635 | ( 0 rule:alpha choice 634-635 | ( 0 ch:0 char-range 634-635 ) ) ) ) ) : ( 0 sep text 635-635 ) : ( 0 rep ref:alphaNum 635-636 | ( 0 rule:alphaNum choice 635-636 | ( 0 ch:0 ref:alpha 635-636 | ( 0 rule:alpha choice 635-636 | ( 0 ch:0 char-range 635-636 ) ) ) ) ) : ( 0 sep text 636-636 ) : ( 0 rep ref:alphaNum 636-637 | ( 0 rule:alphaNum choice 636-637 | ( 0 ch:0 ref:alpha 636-637 | ( 0 rule:alpha choice 636-637 | ( 0 ch:0 char-range 636-637 ) ) ) ) ) : ( 0 sep text 637-637 ) : ( 0 rep ref:alphaNum 637-638 | ( 0 rule:alphaNum choice 637-638 | ( 0 ch:0 ref:alpha 637-638 | ( 0 rule:alpha choice 637-638 | ( 0 ch:0 char-range 637-638 ) ) ) ) ) : ( 0 sep text 638-638 ) : ( 0 rep ref:alphaNum 638-639 | ( 0 rule:alphaNum choice 638-639 | ( 0 ch:0 ref:alpha 638-639 | ( 0 rule:alpha choice 638-639 | ( 0 ch:0 char-range 638-639 ) ) ) ) ) : ( 0 sep text 639-639 ) : ( 0 rep ref:alphaNum 639-640 | ( 0 rule:alphaNum choice 639-640 | ( 0 ch:0 ref:alpha 639-640 | ( 0 rule:alpha choice 639-640 | ( 0 ch:0 char-range 639-640 ) ) ) ) ) : ( 0 sep text 640-640 ) : ( 0 rep ref:alphaNum 640-641 | ( 0 rule:alphaNum choice 640-641 | ( 0 ch:0 ref:alpha 640-641 | ( 0 rule:alpha choice 640-641 | ( 0 ch:0 char-range 640-641 ) ) ) ) ) : ( 0 sep text 641-641 ) : ( 0 rep ref:alphaNum 641-642 | ( 0 rule:alphaNum choice 641-642 | ( 0 ch:0 ref:alpha 641-642 | ( 0 rule:alpha choice 641-642 | ( 0 ch:0 char-range 641-642 ) ) ) ) ) : ( 0 sep text 642-642 ) : ( 0 rep ref:alphaNum 642-643 | ( 0 rule:alphaNum choice 642-643 | ( 0 ch:0 ref:alpha 642-643 | ( 0 rule:alpha choice 642-643 | ( 0 ch:0 char-range 642-643 ) ) ) ) ) : ( 0 sep text 643-643 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @643 | < None of choices matched input :: rule:alphaNum choice @643 | < Rule `alpha` didn't match :: ch:0 ref:alpha @643 | < None of choices matched input :: rule:alpha choice @643 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @643 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @643 > : < Expected '_', but found '{' :: ch:2 text @643 > > > : < Rule `num` didn't match :: ch:1 ref:num @643 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @643 > > > > ) ) ) : < Expected '.', but found '{' :: sep text @643 > ) ) : ( 0 seq:1 ref:ws 643-643 | ( 0 rule:ws repsep 643-643 | ( 0 rep seqnc 643-643 | ( 0 seq:0 ref:spaces 643-643 | ( 0 rule:spaces repsep 643-643 | < Expected ' ', but found '{' :: rep text @643 > ) ) : ( 0 seq:1 choice 643-643 | < Rule `comment` didn't match :: ch:0 ref:comment @643 | < Sequence failed at entry 0 :: rule:comment seqnc @643 | < Expected '#', but found '{' :: seq:0 text @643 > > > : ( 0 ch:1 text 643-643 ) ) ) : < Expected '
', but found '{' :: sep text @643 > ) ) : ( 0 seq:2 text 643-644 ) : ( 0 seq:3 ref:ws 644-649 | ( 0 rule:ws repsep 644-649 | ( 0 rep seqnc 644-644 | ( 0 seq:0 ref:spaces 644-644 | ( 0 rule:spaces repsep 644-644 | < Expected ' ', but found '
' :: rep text @644 > ) ) : ( 0 seq:1 choice 644-644 | < Rule `comment` didn't match :: ch:0 ref:comment @644 | < Sequence failed at entry 0 :: rule:comment seqnc @644 | < Expected '#', but found '
' :: seq:0 text @644 > > > : ( 0 ch:1 text 644-644 ) ) ) : ( 0 sep text 644-645 ) : ( 0 rep seqnc 645-649 | ( 0 seq:0 ref:spaces 645-649 | ( 0 rule:spaces repsep 645-649 | ( 0 rep text 645-646 ) : ( 0 sep text 646-646 ) : ( 0 rep text 646-647 ) : ( 0 sep text 647-647 ) : ( 0 rep text 647-648 ) : ( 0 sep text 648-648 ) : ( 0 rep text 648-649 ) : ( 0 sep text 649-649 ) : < Expected ' ', but found 'i' :: rep text @649 > ) ) : ( 0 seq:1 choice 649-649 | < Rule `comment` didn't match :: ch:0 ref:comment @649 | < Sequence failed at entry 0 :: rule:comment seqnc @649 | < Expected '#', but found 'i' :: seq:0 text @649 > > > : ( 0 ch:1 text 649-649 ) ) ) : < Expected '
', but found 'i' :: sep text @649 > ) ) : ( 0 seq:4 repsep 649-884 | ( 0 rep ref:nestedAttr 649-656 | ( 0 rule:nestedAttr choice 649-656 | ( 0 ch:0 ref:normalAttr 649-656 | ( 0 rule:normalAttr seqnc 649-656 | ( 0 seq:0 ref:ident 649-651 | ( 0 rule:ident seqnc 649-651 | ( 0 seq:0 ref:alpha 649-650 | ( 0 rule:alpha choice 649-650 | ( 0 ch:0 char-range 649-650 ) ) ) : ( 0 seq:1 repsep 650-651 | ( 0 rep ref:alphaNum 650-651 | ( 0 rule:alphaNum choice 650-651 | ( 0 ch:0 ref:alpha 650-651 | ( 0 rule:alpha choice 650-651 | ( 0 ch:0 char-range 650-651 ) ) ) ) ) : ( 0 sep text 651-651 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @651 | < None of choices matched input :: rule:alphaNum choice @651 | < Rule `alpha` didn't match :: ch:0 ref:alpha @651 | < None of choices matched input :: rule:alpha choice @651 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @651 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @651 > : < Expected '_', but found ':' :: ch:2 text @651 > > > : < Rule `num` didn't match :: ch:1 ref:num @651 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @651 > > > > ) ) ) : ( 0 seq:1 text 651-652 ) : ( 0 seq:2 ref:ws 652-653 | ( 0 rule:ws repsep 652-653 | ( 0 rep seqnc 652-653 | ( 0 seq:0 ref:spaces 652-653 | ( 0 rule:spaces repsep 652-653 | ( 0 rep text 652-653 ) : ( 0 sep text 653-653 ) : < Expected ' ', but found 'F' :: rep text @653 > ) ) : ( 0 seq:1 choice 653-653 | < Rule `comment` didn't match :: ch:0 ref:comment @653 | < Sequence failed at entry 0 :: rule:comment seqnc @653 | < Expected '#', but found 'F' :: seq:0 text @653 > > > : ( 0 ch:1 text 653-653 ) ) ) : < Expected '
', but found 'F' :: sep text @653 > ) ) : ( 0 seq:3 ref:term 653-656 | ( 0 rule:term choice 653-656 | < Rule `record` didn't match :: ch:0 ref:record @653 | < Sequence failed at entry 1 :: rule:record seqnc @656 | ( 0 seq:0 ref:qualifier 653-656 | ( 0 rule:qualifier repsep 653-656 | ( 0 rep ref:ident 653-656 | ( 0 rule:ident seqnc 653-656 | ( 0 seq:0 ref:alpha 653-654 | ( 0 rule:alpha choice 653-654 | < Expected character in range from 'a' to 'z', but found 'F' :: ch:0 char-range @653 > : ( 0 ch:1 char-range 653-654 ) ) ) : ( 0 seq:1 repsep 654-656 | ( 0 rep ref:alphaNum 654-655 | ( 0 rule:alphaNum choice 654-655 | ( 0 ch:0 ref:alpha 654-655 | ( 0 rule:alpha choice 654-655 | ( 0 ch:0 char-range 654-655 ) ) ) ) ) : ( 0 sep text 655-655 ) : ( 0 rep ref:alphaNum 655-656 | ( 0 rule:alphaNum choice 655-656 | ( 0 ch:0 ref:alpha 655-656 | ( 0 rule:alpha choice 655-656 | ( 0 ch:0 char-range 655-656 ) ) ) ) ) : ( 0 sep text 656-656 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @656 | < None of choices matched input :: rule:alphaNum choice @656 | < Rule `alpha` didn't match :: ch:0 ref:alpha @656 | < None of choices matched input :: rule:alpha choice @656 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @656 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @656 > : < Expected '_', but found ',' :: ch:2 text @656 > > > : < Rule `num` didn't match :: ch:1 ref:num @656 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @656 > > > > ) ) ) : < Expected '.', but found ',' :: sep text @656 > ) ) : < Expected '{', but found ',' :: seq:1 text @656 > > > : < Rule `int` didn't match :: ch:1 ref:int @653 | < Sequence failed at entry 1 :: rule:int seqnc @653 | ( 0 seq:0 choice 653-653 | < Expected '-', but found 'F' :: ch:0 text @653 > : ( 0 ch:1 text 653-653 ) ) : < Rule `num` didn't match :: seq:1 ref:first @653 | < Expected character in range from '0' to '9', but found 'F' :: rule:num char-range @653 > > > > : ( 0 ch:2 ref:var 653-656 | ( 0 rule:var seqnc 653-656 | ( 0 seq:0 char-range 653-654 ) : ( 0 seq:1 repsep 654-656 | ( 0 rep choice 654-655 | < Expected character in range from 'A' to 'Z', but found 'o' :: ch:0 char-range @654 > : ( 0 ch:1 ref:alphaNum 654-655 | ( 0 rule:alphaNum choice 654-655 | ( 0 ch:0 ref:alpha 654-655 | ( 0 rule:alpha choice 654-655 | ( 0 ch:0 char-range 654-655 ) ) ) ) ) ) : ( 0 sep text 655-655 ) : ( 0 rep choice 655-656 | < Expected character in range from 'A' to 'Z', but found 'o' :: ch:0 char-range @655 > : ( 0 ch:1 ref:alphaNum 655-656 | ( 0 rule:alphaNum choice 655-656 | ( 0 ch:0 ref:alpha 655-656 | ( 0 rule:alpha choice 655-656 | ( 0 ch:0 char-range 655-656 ) ) ) ) ) ) : ( 0 sep text 656-656 ) : < None of choices matched input :: rep choice @656 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @656 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @656 | < None of choices matched input :: rule:alphaNum choice @656 | < Rule `alpha` didn't match :: ch:0 ref:alpha @656 | < None of choices matched input :: rule:alpha choice @656 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @656 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @656 > : < Expected '_', but found ',' :: ch:2 text @656 > > > : < Rule `num` didn't match :: ch:1 ref:num @656 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @656 > > > > > ) ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 656-662 | ( 0 rule:commaSpace seqnc 656-662 | ( 0 seq:0 text 656-657 ) : ( 0 seq:1 ref:ws 657-662 | ( 0 rule:ws repsep 657-662 | ( 0 rep seqnc 657-657 | ( 0 seq:0 ref:spaces 657-657 | ( 0 rule:spaces repsep 657-657 | < Expected ' ', but found '
' :: rep text @657 > ) ) : ( 0 seq:1 choice 657-657 | < Rule `comment` didn't match :: ch:0 ref:comment @657 | < Sequence failed at entry 0 :: rule:comment seqnc @657 | < Expected '#', but found '
' :: seq:0 text @657 > > > : ( 0 ch:1 text 657-657 ) ) ) : ( 0 sep text 657-658 ) : ( 0 rep seqnc 658-662 | ( 0 seq:0 ref:spaces 658-662 | ( 0 rule:spaces repsep 658-662 | ( 0 rep text 658-659 ) : ( 0 sep text 659-659 ) : ( 0 rep text 659-660 ) : ( 0 sep text 660-660 ) : ( 0 rep text 660-661 ) : ( 0 sep text 661-661 ) : ( 0 rep text 661-662 ) : ( 0 sep text 662-662 ) : < Expected ' ', but found 'r' :: rep text @662 > ) ) : ( 0 seq:1 choice 662-662 | < Rule `comment` didn't match :: ch:0 ref:comment @662 | < Sequence failed at entry 0 :: rule:comment seqnc @662 | < Expected '#', but found 'r' :: seq:0 text @662 > > > : ( 0 ch:1 text 662-662 ) ) ) : < Expected '
', but found 'r' :: sep text @662 > ) ) ) ) : ( 0 rep ref:nestedAttr 662-729 | ( 0 rule:nestedAttr choice 662-729 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @662 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @668 | ( 0 seq:0 ref:ident 662-668 | ( 0 rule:ident seqnc 662-668 | ( 0 seq:0 ref:alpha 662-663 | ( 0 rule:alpha choice 662-663 | ( 0 ch:0 char-range 662-663 ) ) ) : ( 0 seq:1 repsep 663-668 | ( 0 rep ref:alphaNum 663-664 | ( 0 rule:alphaNum choice 663-664 | ( 0 ch:0 ref:alpha 663-664 | ( 0 rule:alpha choice 663-664 | ( 0 ch:0 char-range 663-664 ) ) ) ) ) : ( 0 sep text 664-664 ) : ( 0 rep ref:alphaNum 664-665 | ( 0 rule:alphaNum choice 664-665 | ( 0 ch:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) ) ) : ( 0 sep text 665-665 ) : ( 0 rep ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) : ( 0 sep text 667-667 ) : ( 0 rep ref:alphaNum 667-668 | ( 0 rule:alphaNum choice 667-668 | ( 0 ch:0 ref:alpha 667-668 | ( 0 rule:alpha choice 667-668 | ( 0 ch:0 char-range 667-668 ) ) ) ) ) : ( 0 sep text 668-668 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @668 | < None of choices matched input :: rule:alphaNum choice @668 | < Rule `alpha` didn't match :: ch:0 ref:alpha @668 | < None of choices matched input :: rule:alpha choice @668 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @668 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @668 > : < Expected '_', but found ' ' :: ch:2 text @668 > > > : < Rule `num` didn't match :: ch:1 ref:num @668 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @668 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @668 > > > : ( 0 ch:1 ref:nested 662-729 | ( 0 rule:nested seqnc 662-729 | ( 0 seq:0 ref:qualifier 662-668 | ( 0 rule:qualifier repsep 662-668 | ( 0 rep ref:ident 662-668 | ( 0 rule:ident seqnc 662-668 | ( 0 seq:0 ref:alpha 662-663 | ( 0 rule:alpha choice 662-663 | ( 0 ch:0 char-range 662-663 ) ) ) : ( 0 seq:1 repsep 663-668 | ( 0 rep ref:alphaNum 663-664 | ( 0 rule:alphaNum choice 663-664 | ( 0 ch:0 ref:alpha 663-664 | ( 0 rule:alpha choice 663-664 | ( 0 ch:0 char-range 663-664 ) ) ) ) ) : ( 0 sep text 664-664 ) : ( 0 rep ref:alphaNum 664-665 | ( 0 rule:alphaNum choice 664-665 | ( 0 ch:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) ) ) : ( 0 sep text 665-665 ) : ( 0 rep ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) : ( 0 sep text 667-667 ) : ( 0 rep ref:alphaNum 667-668 | ( 0 rule:alphaNum choice 667-668 | ( 0 ch:0 ref:alpha 667-668 | ( 0 rule:alpha choice 667-668 | ( 0 ch:0 char-range 667-668 ) ) ) ) ) : ( 0 sep text 668-668 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @668 | < None of choices matched input :: rule:alphaNum choice @668 | < Rule `alpha` didn't match :: ch:0 ref:alpha @668 | < None of choices matched input :: rule:alpha choice @668 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @668 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @668 > : < Expected '_', but found ' ' :: ch:2 text @668 > > > : < Rule `num` didn't match :: ch:1 ref:num @668 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @668 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @668 > ) ) : ( 0 seq:1 ref:ws 668-669 | ( 0 rule:ws repsep 668-669 | ( 0 rep seqnc 668-669 | ( 0 seq:0 ref:spaces 668-669 | ( 0 rule:spaces repsep 668-669 | ( 0 rep text 668-669 ) : ( 0 sep text 669-669 ) : < Expected ' ', but found '{' :: rep text @669 > ) ) : ( 0 seq:1 choice 669-669 | < Rule `comment` didn't match :: ch:0 ref:comment @669 | < Sequence failed at entry 0 :: rule:comment seqnc @669 | < Expected '#', but found '{' :: seq:0 text @669 > > > : ( 0 ch:1 text 669-669 ) ) ) : < Expected '
', but found '{' :: sep text @669 > ) ) : ( 0 seq:2 text 669-670 ) : ( 0 seq:3 ref:ws 670-677 | ( 0 rule:ws repsep 670-677 | ( 0 rep seqnc 670-670 | ( 0 seq:0 ref:spaces 670-670 | ( 0 rule:spaces repsep 670-670 | < Expected ' ', but found '
' :: rep text @670 > ) ) : ( 0 seq:1 choice 670-670 | < Rule `comment` didn't match :: ch:0 ref:comment @670 | < Sequence failed at entry 0 :: rule:comment seqnc @670 | < Expected '#', but found '
' :: seq:0 text @670 > > > : ( 0 ch:1 text 670-670 ) ) ) : ( 0 sep text 670-671 ) : ( 0 rep seqnc 671-677 | ( 0 seq:0 ref:spaces 671-677 | ( 0 rule:spaces repsep 671-677 | ( 0 rep text 671-672 ) : ( 0 sep text 672-672 ) : ( 0 rep text 672-673 ) : ( 0 sep text 673-673 ) : ( 0 rep text 673-674 ) : ( 0 sep text 674-674 ) : ( 0 rep text 674-675 ) : ( 0 sep text 675-675 ) : ( 0 rep text 675-676 ) : ( 0 sep text 676-676 ) : ( 0 rep text 676-677 ) : ( 0 sep text 677-677 ) : < Expected ' ', but found 'i' :: rep text @677 > ) ) : ( 0 seq:1 choice 677-677 | < Rule `comment` didn't match :: ch:0 ref:comment @677 | < Sequence failed at entry 0 :: rule:comment seqnc @677 | < Expected '#', but found 'i' :: seq:0 text @677 > > > : ( 0 ch:1 text 677-677 ) ) ) : < Expected '
', but found 'i' :: sep text @677 > ) ) : ( 0 seq:4 repsep 677-723 | ( 0 rep ref:nestedAttr 677-684 | ( 0 rule:nestedAttr choice 677-684 | ( 0 ch:0 ref:normalAttr 677-684 | ( 0 rule:normalAttr seqnc 677-684 | ( 0 seq:0 ref:ident 677-679 | ( 0 rule:ident seqnc 677-679 | ( 0 seq:0 ref:alpha 677-678 | ( 0 rule:alpha choice 677-678 | ( 0 ch:0 char-range 677-678 ) ) ) : ( 0 seq:1 repsep 678-679 | ( 0 rep ref:alphaNum 678-679 | ( 0 rule:alphaNum choice 678-679 | ( 0 ch:0 ref:alpha 678-679 | ( 0 rule:alpha choice 678-679 | ( 0 ch:0 char-range 678-679 ) ) ) ) ) : ( 0 sep text 679-679 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @679 | < None of choices matched input :: rule:alphaNum choice @679 | < Rule `alpha` didn't match :: ch:0 ref:alpha @679 | < None of choices matched input :: rule:alpha choice @679 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @679 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @679 > : < Expected '_', but found ':' :: ch:2 text @679 > > > : < Rule `num` didn't match :: ch:1 ref:num @679 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @679 > > > > ) ) ) : ( 0 seq:1 text 679-680 ) : ( 0 seq:2 ref:ws 680-681 | ( 0 rule:ws repsep 680-681 | ( 0 rep seqnc 680-681 | ( 0 seq:0 ref:spaces 680-681 | ( 0 rule:spaces repsep 680-681 | ( 0 rep text 680-681 ) : ( 0 sep text 681-681 ) : < Expected ' ', but found 'B' :: rep text @681 > ) ) : ( 0 seq:1 choice 681-681 | < Rule `comment` didn't match :: ch:0 ref:comment @681 | < Sequence failed at entry 0 :: rule:comment seqnc @681 | < Expected '#', but found 'B' :: seq:0 text @681 > > > : ( 0 ch:1 text 681-681 ) ) ) : < Expected '
', but found 'B' :: sep text @681 > ) ) : ( 0 seq:3 ref:term 681-684 | ( 0 rule:term choice 681-684 | < Rule `record` didn't match :: ch:0 ref:record @681 | < Sequence failed at entry 1 :: rule:record seqnc @684 | ( 0 seq:0 ref:qualifier 681-684 | ( 0 rule:qualifier repsep 681-684 | ( 0 rep ref:ident 681-684 | ( 0 rule:ident seqnc 681-684 | ( 0 seq:0 ref:alpha 681-682 | ( 0 rule:alpha choice 681-682 | < Expected character in range from 'a' to 'z', but found 'B' :: ch:0 char-range @681 > : ( 0 ch:1 char-range 681-682 ) ) ) : ( 0 seq:1 repsep 682-684 | ( 0 rep ref:alphaNum 682-683 | ( 0 rule:alphaNum choice 682-683 | ( 0 ch:0 ref:alpha 682-683 | ( 0 rule:alpha choice 682-683 | ( 0 ch:0 char-range 682-683 ) ) ) ) ) : ( 0 sep text 683-683 ) : ( 0 rep ref:alphaNum 683-684 | ( 0 rule:alphaNum choice 683-684 | ( 0 ch:0 ref:alpha 683-684 | ( 0 rule:alpha choice 683-684 | ( 0 ch:0 char-range 683-684 ) ) ) ) ) : ( 0 sep text 684-684 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @684 | < None of choices matched input :: rule:alphaNum choice @684 | < Rule `alpha` didn't match :: ch:0 ref:alpha @684 | < None of choices matched input :: rule:alpha choice @684 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @684 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @684 > : < Expected '_', but found ',' :: ch:2 text @684 > > > : < Rule `num` didn't match :: ch:1 ref:num @684 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @684 > > > > ) ) ) : < Expected '.', but found ',' :: sep text @684 > ) ) : < Expected '{', but found ',' :: seq:1 text @684 > > > : < Rule `int` didn't match :: ch:1 ref:int @681 | < Sequence failed at entry 1 :: rule:int seqnc @681 | ( 0 seq:0 choice 681-681 | < Expected '-', but found 'B' :: ch:0 text @681 > : ( 0 ch:1 text 681-681 ) ) : < Rule `num` didn't match :: seq:1 ref:first @681 | < Expected character in range from '0' to '9', but found 'B' :: rule:num char-range @681 > > > > : ( 0 ch:2 ref:var 681-684 | ( 0 rule:var seqnc 681-684 | ( 0 seq:0 char-range 681-682 ) : ( 0 seq:1 repsep 682-684 | ( 0 rep choice 682-683 | < Expected character in range from 'A' to 'Z', but found 'a' :: ch:0 char-range @682 > : ( 0 ch:1 ref:alphaNum 682-683 | ( 0 rule:alphaNum choice 682-683 | ( 0 ch:0 ref:alpha 682-683 | ( 0 rule:alpha choice 682-683 | ( 0 ch:0 char-range 682-683 ) ) ) ) ) ) : ( 0 sep text 683-683 ) : ( 0 rep choice 683-684 | < Expected character in range from 'A' to 'Z', but found 'r' :: ch:0 char-range @683 > : ( 0 ch:1 ref:alphaNum 683-684 | ( 0 rule:alphaNum choice 683-684 | ( 0 ch:0 ref:alpha 683-684 | ( 0 rule:alpha choice 683-684 | ( 0 ch:0 char-range 683-684 ) ) ) ) ) ) : ( 0 sep text 684-684 ) : < None of choices matched input :: rep choice @684 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @684 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @684 | < None of choices matched input :: rule:alphaNum choice @684 | < Rule `alpha` didn't match :: ch:0 ref:alpha @684 | < None of choices matched input :: rule:alpha choice @684 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @684 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @684 > : < Expected '_', but found ',' :: ch:2 text @684 > > > : < Rule `num` didn't match :: ch:1 ref:num @684 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @684 > > > > > ) ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 684-692 | ( 0 rule:commaSpace seqnc 684-692 | ( 0 seq:0 text 684-685 ) : ( 0 seq:1 ref:ws 685-692 | ( 0 rule:ws repsep 685-692 | ( 0 rep seqnc 685-685 | ( 0 seq:0 ref:spaces 685-685 | ( 0 rule:spaces repsep 685-685 | < Expected ' ', but found '
' :: rep text @685 > ) ) : ( 0 seq:1 choice 685-685 | < Rule `comment` didn't match :: ch:0 ref:comment @685 | < Sequence failed at entry 0 :: rule:comment seqnc @685 | < Expected '#', but found '
' :: seq:0 text @685 > > > : ( 0 ch:1 text 685-685 ) ) ) : ( 0 sep text 685-686 ) : ( 0 rep seqnc 686-692 | ( 0 seq:0 ref:spaces 686-692 | ( 0 rule:spaces repsep 686-692 | ( 0 rep text 686-687 ) : ( 0 sep text 687-687 ) : ( 0 rep text 687-688 ) : ( 0 sep text 688-688 ) : ( 0 rep text 688-689 ) : ( 0 sep text 689-689 ) : ( 0 rep text 689-690 ) : ( 0 sep text 690-690 ) : ( 0 rep text 690-691 ) : ( 0 sep text 691-691 ) : ( 0 rep text 691-692 ) : ( 0 sep text 692-692 ) : < Expected ' ', but found 'i' :: rep text @692 > ) ) : ( 0 seq:1 choice 692-692 | < Rule `comment` didn't match :: ch:0 ref:comment @692 | < Sequence failed at entry 0 :: rule:comment seqnc @692 | < Expected '#', but found 'i' :: seq:0 text @692 > > > : ( 0 ch:1 text 692-692 ) ) ) : < Expected '
', but found 'i' :: sep text @692 > ) ) ) ) : ( 0 rep ref:nestedAttr 692-723 | ( 0 rule:nestedAttr choice 692-723 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @692 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @697 | ( 0 seq:0 ref:ident 692-697 | ( 0 rule:ident seqnc 692-697 | ( 0 seq:0 ref:alpha 692-693 | ( 0 rule:alpha choice 692-693 | ( 0 ch:0 char-range 692-693 ) ) ) : ( 0 seq:1 repsep 693-697 | ( 0 rep ref:alphaNum 693-694 | ( 0 rule:alphaNum choice 693-694 | ( 0 ch:0 ref:alpha 693-694 | ( 0 rule:alpha choice 693-694 | ( 0 ch:0 char-range 693-694 ) ) ) ) ) : ( 0 sep text 694-694 ) : ( 0 rep ref:alphaNum 694-695 | ( 0 rule:alphaNum choice 694-695 | ( 0 ch:0 ref:alpha 694-695 | ( 0 rule:alpha choice 694-695 | ( 0 ch:0 char-range 694-695 ) ) ) ) ) : ( 0 sep text 695-695 ) : ( 0 rep ref:alphaNum 695-696 | ( 0 rule:alphaNum choice 695-696 | ( 0 ch:0 ref:alpha 695-696 | ( 0 rule:alpha choice 695-696 | ( 0 ch:0 char-range 695-696 ) ) ) ) ) : ( 0 sep text 696-696 ) : ( 0 rep ref:alphaNum 696-697 | ( 0 rule:alphaNum choice 696-697 | ( 0 ch:0 ref:alpha 696-697 | ( 0 rule:alpha choice 696-697 | ( 0 ch:0 char-range 696-697 ) ) ) ) ) : ( 0 sep text 697-697 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @697 | < None of choices matched input :: rule:alphaNum choice @697 | < Rule `alpha` didn't match :: ch:0 ref:alpha @697 | < None of choices matched input :: rule:alpha choice @697 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @697 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @697 > : < Expected '_', but found ' ' :: ch:2 text @697 > > > : < Rule `num` didn't match :: ch:1 ref:num @697 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @697 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @697 > > > : ( 0 ch:1 ref:nested 692-723 | ( 0 rule:nested seqnc 692-723 | ( 0 seq:0 ref:qualifier 692-697 | ( 0 rule:qualifier repsep 692-697 | ( 0 rep ref:ident 692-697 | ( 0 rule:ident seqnc 692-697 | ( 0 seq:0 ref:alpha 692-693 | ( 0 rule:alpha choice 692-693 | ( 0 ch:0 char-range 692-693 ) ) ) : ( 0 seq:1 repsep 693-697 | ( 0 rep ref:alphaNum 693-694 | ( 0 rule:alphaNum choice 693-694 | ( 0 ch:0 ref:alpha 693-694 | ( 0 rule:alpha choice 693-694 | ( 0 ch:0 char-range 693-694 ) ) ) ) ) : ( 0 sep text 694-694 ) : ( 0 rep ref:alphaNum 694-695 | ( 0 rule:alphaNum choice 694-695 | ( 0 ch:0 ref:alpha 694-695 | ( 0 rule:alpha choice 694-695 | ( 0 ch:0 char-range 694-695 ) ) ) ) ) : ( 0 sep text 695-695 ) : ( 0 rep ref:alphaNum 695-696 | ( 0 rule:alphaNum choice 695-696 | ( 0 ch:0 ref:alpha 695-696 | ( 0 rule:alpha choice 695-696 | ( 0 ch:0 char-range 695-696 ) ) ) ) ) : ( 0 sep text 696-696 ) : ( 0 rep ref:alphaNum 696-697 | ( 0 rule:alphaNum choice 696-697 | ( 0 ch:0 ref:alpha 696-697 | ( 0 rule:alpha choice 696-697 | ( 0 ch:0 char-range 696-697 ) ) ) ) ) : ( 0 sep text 697-697 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @697 | < None of choices matched input :: rule:alphaNum choice @697 | < Rule `alpha` didn't match :: ch:0 ref:alpha @697 | < None of choices matched input :: rule:alpha choice @697 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @697 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @697 > : < Expected '_', but found ' ' :: ch:2 text @697 > > > : < Rule `num` didn't match :: ch:1 ref:num @697 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @697 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @697 > ) ) : ( 0 seq:1 ref:ws 697-698 | ( 0 rule:ws repsep 697-698 | ( 0 rep seqnc 697-698 | ( 0 seq:0 ref:spaces 697-698 | ( 0 rule:spaces repsep 697-698 | ( 0 rep text 697-698 ) : ( 0 sep text 698-698 ) : < Expected ' ', but found '{' :: rep text @698 > ) ) : ( 0 seq:1 choice 698-698 | < Rule `comment` didn't match :: ch:0 ref:comment @698 | < Sequence failed at entry 0 :: rule:comment seqnc @698 | < Expected '#', but found '{' :: seq:0 text @698 > > > : ( 0 ch:1 text 698-698 ) ) ) : < Expected '
', but found '{' :: sep text @698 > ) ) : ( 0 seq:2 text 698-699 ) : ( 0 seq:3 ref:ws 699-708 | ( 0 rule:ws repsep 699-708 | ( 0 rep seqnc 699-699 | ( 0 seq:0 ref:spaces 699-699 | ( 0 rule:spaces repsep 699-699 | < Expected ' ', but found '
' :: rep text @699 > ) ) : ( 0 seq:1 choice 699-699 | < Rule `comment` didn't match :: ch:0 ref:comment @699 | < Sequence failed at entry 0 :: rule:comment seqnc @699 | < Expected '#', but found '
' :: seq:0 text @699 > > > : ( 0 ch:1 text 699-699 ) ) ) : ( 0 sep text 699-700 ) : ( 0 rep seqnc 700-708 | ( 0 seq:0 ref:spaces 700-708 | ( 0 rule:spaces repsep 700-708 | ( 0 rep text 700-701 ) : ( 0 sep text 701-701 ) : ( 0 rep text 701-702 ) : ( 0 sep text 702-702 ) : ( 0 rep text 702-703 ) : ( 0 sep text 703-703 ) : ( 0 rep text 703-704 ) : ( 0 sep text 704-704 ) : ( 0 rep text 704-705 ) : ( 0 sep text 705-705 ) : ( 0 rep text 705-706 ) : ( 0 sep text 706-706 ) : ( 0 rep text 706-707 ) : ( 0 sep text 707-707 ) : ( 0 rep text 707-708 ) : ( 0 sep text 708-708 ) : < Expected ' ', but found 't' :: rep text @708 > ) ) : ( 0 seq:1 choice 708-708 | < Rule `comment` didn't match :: ch:0 ref:comment @708 | < Sequence failed at entry 0 :: rule:comment seqnc @708 | < Expected '#', but found 't' :: seq:0 text @708 > > > : ( 0 ch:1 text 708-708 ) ) ) : < Expected '
', but found 't' :: sep text @708 > ) ) : ( 0 seq:4 repsep 708-715 | ( 0 rep ref:nestedAttr 708-715 | ( 0 rule:nestedAttr choice 708-715 | ( 0 ch:0 ref:normalAttr 708-715 | ( 0 rule:normalAttr seqnc 708-715 | ( 0 seq:0 ref:ident 708-712 | ( 0 rule:ident seqnc 708-712 | ( 0 seq:0 ref:alpha 708-709 | ( 0 rule:alpha choice 708-709 | ( 0 ch:0 char-range 708-709 ) ) ) : ( 0 seq:1 repsep 709-712 | ( 0 rep ref:alphaNum 709-710 | ( 0 rule:alphaNum choice 709-710 | ( 0 ch:0 ref:alpha 709-710 | ( 0 rule:alpha choice 709-710 | ( 0 ch:0 char-range 709-710 ) ) ) ) ) : ( 0 sep text 710-710 ) : ( 0 rep ref:alphaNum 710-711 | ( 0 rule:alphaNum choice 710-711 | ( 0 ch:0 ref:alpha 710-711 | ( 0 rule:alpha choice 710-711 | ( 0 ch:0 char-range 710-711 ) ) ) ) ) : ( 0 sep text 711-711 ) : ( 0 rep ref:alphaNum 711-712 | ( 0 rule:alphaNum choice 711-712 | ( 0 ch:0 ref:alpha 711-712 | ( 0 rule:alpha choice 711-712 | ( 0 ch:0 char-range 711-712 ) ) ) ) ) : ( 0 sep text 712-712 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @712 | < None of choices matched input :: rule:alphaNum choice @712 | < Rule `alpha` didn't match :: ch:0 ref:alpha @712 | < None of choices matched input :: rule:alpha choice @712 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @712 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @712 > : < Expected '_', but found ':' :: ch:2 text @712 > > > : < Rule `num` didn't match :: ch:1 ref:num @712 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @712 > > > > ) ) ) : ( 0 seq:1 text 712-713 ) : ( 0 seq:2 ref:ws 713-714 | ( 0 rule:ws repsep 713-714 | ( 0 rep seqnc 713-714 | ( 0 seq:0 ref:spaces 713-714 | ( 0 rule:spaces repsep 713-714 | ( 0 rep text 713-714 ) : ( 0 sep text 714-714 ) : < Expected ' ', but found 'I' :: rep text @714 > ) ) : ( 0 seq:1 choice 714-714 | < Rule `comment` didn't match :: ch:0 ref:comment @714 | < Sequence failed at entry 0 :: rule:comment seqnc @714 | < Expected '#', but found 'I' :: seq:0 text @714 > > > : ( 0 ch:1 text 714-714 ) ) ) : < Expected '
', but found 'I' :: sep text @714 > ) ) : ( 0 seq:3 ref:term 714-715 | ( 0 rule:term choice 714-715 | < Rule `record` didn't match :: ch:0 ref:record @714 | < Sequence failed at entry 1 :: rule:record seqnc @715 | ( 0 seq:0 ref:qualifier 714-715 | ( 0 rule:qualifier repsep 714-715 | ( 0 rep ref:ident 714-715 | ( 0 rule:ident seqnc 714-715 | ( 0 seq:0 ref:alpha 714-715 | ( 0 rule:alpha choice 714-715 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @714 > : ( 0 ch:1 char-range 714-715 ) ) ) : ( 0 seq:1 repsep 715-715 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @715 | < None of choices matched input :: rule:alphaNum choice @715 | < Rule `alpha` didn't match :: ch:0 ref:alpha @715 | < None of choices matched input :: rule:alpha choice @715 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @715 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @715 > : < Expected '_', but found '
' :: ch:2 text @715 > > > : < Rule `num` didn't match :: ch:1 ref:num @715 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @715 > > > > ) ) ) : < Expected '.', but found '
' :: sep text @715 > ) ) : < Expected '{', but found '
' :: seq:1 text @715 > > > : < Rule `int` didn't match :: ch:1 ref:int @714 | < Sequence failed at entry 1 :: rule:int seqnc @714 | ( 0 seq:0 choice 714-714 | < Expected '-', but found 'I' :: ch:0 text @714 > : ( 0 ch:1 text 714-714 ) ) : < Rule `num` didn't match :: seq:1 ref:first @714 | < Expected character in range from '0' to '9', but found 'I' :: rule:num char-range @714 > > > > : ( 0 ch:2 ref:var 714-715 | ( 0 rule:var seqnc 714-715 | ( 0 seq:0 char-range 714-715 ) : ( 0 seq:1 repsep 715-715 | < None of choices matched input :: rep choice @715 | < Expected character in range from 'A' to 'Z', but found '
' :: ch:0 char-range @715 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @715 | < None of choices matched input :: rule:alphaNum choice @715 | < Rule `alpha` didn't match :: ch:0 ref:alpha @715 | < None of choices matched input :: rule:alpha choice @715 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @715 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @715 > : < Expected '_', but found '
' :: ch:2 text @715 > > > : < Rule `num` didn't match :: ch:1 ref:num @715 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @715 > > > > > ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @715 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @715 | < Expected ',', but found '
' :: seq:0 text @715 > > > ) : ( 0 seq:5 ref:ws 715-722 | ( 0 rule:ws repsep 715-722 | ( 0 rep seqnc 715-715 | ( 0 seq:0 ref:spaces 715-715 | ( 0 rule:spaces repsep 715-715 | < Expected ' ', but found '
' :: rep text @715 > ) ) : ( 0 seq:1 choice 715-715 | < Rule `comment` didn't match :: ch:0 ref:comment @715 | < Sequence failed at entry 0 :: rule:comment seqnc @715 | < Expected '#', but found '
' :: seq:0 text @715 > > > : ( 0 ch:1 text 715-715 ) ) ) : ( 0 sep text 715-716 ) : ( 0 rep seqnc 716-722 | ( 0 seq:0 ref:spaces 716-722 | ( 0 rule:spaces repsep 716-722 | ( 0 rep text 716-717 ) : ( 0 sep text 717-717 ) : ( 0 rep text 717-718 ) : ( 0 sep text 718-718 ) : ( 0 rep text 718-719 ) : ( 0 sep text 719-719 ) : ( 0 rep text 719-720 ) : ( 0 sep text 720-720 ) : ( 0 rep text 720-721 ) : ( 0 sep text 721-721 ) : ( 0 rep text 721-722 ) : ( 0 sep text 722-722 ) : < Expected ' ', but found '}' :: rep text @722 > ) ) : ( 0 seq:1 choice 722-722 | < Rule `comment` didn't match :: ch:0 ref:comment @722 | < Sequence failed at entry 0 :: rule:comment seqnc @722 | < Expected '#', but found '}' :: seq:0 text @722 > > > : ( 0 ch:1 text 722-722 ) ) ) : < Expected '
', but found '}' :: sep text @722 > ) ) : ( 0 seq:6 text 722-723 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @723 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @723 | < Expected ',', but found '
' :: seq:0 text @723 > > > ) : ( 0 seq:5 ref:ws 723-728 | ( 0 rule:ws repsep 723-728 | ( 0 rep seqnc 723-723 | ( 0 seq:0 ref:spaces 723-723 | ( 0 rule:spaces repsep 723-723 | < Expected ' ', but found '
' :: rep text @723 > ) ) : ( 0 seq:1 choice 723-723 | < Rule `comment` didn't match :: ch:0 ref:comment @723 | < Sequence failed at entry 0 :: rule:comment seqnc @723 | < Expected '#', but found '
' :: seq:0 text @723 > > > : ( 0 ch:1 text 723-723 ) ) ) : ( 0 sep text 723-724 ) : ( 0 rep seqnc 724-728 | ( 0 seq:0 ref:spaces 724-728 | ( 0 rule:spaces repsep 724-728 | ( 0 rep text 724-725 ) : ( 0 sep text 725-725 ) : ( 0 rep text 725-726 ) : ( 0 sep text 726-726 ) : ( 0 rep text 726-727 ) : ( 0 sep text 727-727 ) : ( 0 rep text 727-728 ) : ( 0 sep text 728-728 ) : < Expected ' ', but found '}' :: rep text @728 > ) ) : ( 0 seq:1 choice 728-728 | < Rule `comment` didn't match :: ch:0 ref:comment @728 | < Sequence failed at entry 0 :: rule:comment seqnc @728 | < Expected '#', but found '}' :: seq:0 text @728 > > > : ( 0 ch:1 text 728-728 ) ) ) : < Expected '
', but found '}' :: sep text @728 > ) ) : ( 0 seq:6 text 728-729 ) ) ) ) ) : ( 0 sep ref:commaSpace 729-735 | ( 0 rule:commaSpace seqnc 729-735 | ( 0 seq:0 text 729-730 ) : ( 0 seq:1 ref:ws 730-735 | ( 0 rule:ws repsep 730-735 | ( 0 rep seqnc 730-730 | ( 0 seq:0 ref:spaces 730-730 | ( 0 rule:spaces repsep 730-730 | < Expected ' ', but found '
' :: rep text @730 > ) ) : ( 0 seq:1 choice 730-730 | < Rule `comment` didn't match :: ch:0 ref:comment @730 | < Sequence failed at entry 0 :: rule:comment seqnc @730 | < Expected '#', but found '
' :: seq:0 text @730 > > > : ( 0 ch:1 text 730-730 ) ) ) : ( 0 sep text 730-731 ) : ( 0 rep seqnc 731-735 | ( 0 seq:0 ref:spaces 731-735 | ( 0 rule:spaces repsep 731-735 | ( 0 rep text 731-732 ) : ( 0 sep text 732-732 ) : ( 0 rep text 732-733 ) : ( 0 sep text 733-733 ) : ( 0 rep text 733-734 ) : ( 0 sep text 734-734 ) : ( 0 rep text 734-735 ) : ( 0 sep text 735-735 ) : < Expected ' ', but found 'c' :: rep text @735 > ) ) : ( 0 seq:1 choice 735-735 | < Rule `comment` didn't match :: ch:0 ref:comment @735 | < Sequence failed at entry 0 :: rule:comment seqnc @735 | < Expected '#', but found 'c' :: seq:0 text @735 > > > : ( 0 ch:1 text 735-735 ) ) ) : < Expected '
', but found 'c' :: sep text @735 > ) ) ) ) : ( 0 rep ref:nestedAttr 735-884 | ( 0 rule:nestedAttr choice 735-884 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @735 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @755 | ( 0 seq:0 ref:ident 735-755 | ( 0 rule:ident seqnc 735-755 | ( 0 seq:0 ref:alpha 735-736 | ( 0 rule:alpha choice 735-736 | ( 0 ch:0 char-range 735-736 ) ) ) : ( 0 seq:1 repsep 736-755 | ( 0 rep ref:alphaNum 736-737 | ( 0 rule:alphaNum choice 736-737 | ( 0 ch:0 ref:alpha 736-737 | ( 0 rule:alpha choice 736-737 | ( 0 ch:0 char-range 736-737 ) ) ) ) ) : ( 0 sep text 737-737 ) : ( 0 rep ref:alphaNum 737-738 | ( 0 rule:alphaNum choice 737-738 | ( 0 ch:0 ref:alpha 737-738 | ( 0 rule:alpha choice 737-738 | ( 0 ch:0 char-range 737-738 ) ) ) ) ) : ( 0 sep text 738-738 ) : ( 0 rep ref:alphaNum 738-739 | ( 0 rule:alphaNum choice 738-739 | ( 0 ch:0 ref:alpha 738-739 | ( 0 rule:alpha choice 738-739 | ( 0 ch:0 char-range 738-739 ) ) ) ) ) : ( 0 sep text 739-739 ) : ( 0 rep ref:alphaNum 739-740 | ( 0 rule:alphaNum choice 739-740 | ( 0 ch:0 ref:alpha 739-740 | ( 0 rule:alpha choice 739-740 | ( 0 ch:0 char-range 739-740 ) ) ) ) ) : ( 0 sep text 740-740 ) : ( 0 rep ref:alphaNum 740-741 | ( 0 rule:alphaNum choice 740-741 | ( 0 ch:0 ref:alpha 740-741 | ( 0 rule:alpha choice 740-741 | ( 0 ch:0 char-range 740-741 ) ) ) ) ) : ( 0 sep text 741-741 ) : ( 0 rep ref:alphaNum 741-742 | ( 0 rule:alphaNum choice 741-742 | ( 0 ch:0 ref:alpha 741-742 | ( 0 rule:alpha choice 741-742 | ( 0 ch:0 char-range 741-742 ) ) ) ) ) : ( 0 sep text 742-742 ) : ( 0 rep ref:alphaNum 742-743 | ( 0 rule:alphaNum choice 742-743 | ( 0 ch:0 ref:alpha 742-743 | ( 0 rule:alpha choice 742-743 | ( 0 ch:0 char-range 742-743 ) ) ) ) ) : ( 0 sep text 743-743 ) : ( 0 rep ref:alphaNum 743-744 | ( 0 rule:alphaNum choice 743-744 | ( 0 ch:0 ref:alpha 743-744 | ( 0 rule:alpha choice 743-744 | ( 0 ch:0 char-range 743-744 ) ) ) ) ) : ( 0 sep text 744-744 ) : ( 0 rep ref:alphaNum 744-745 | ( 0 rule:alphaNum choice 744-745 | ( 0 ch:0 ref:alpha 744-745 | ( 0 rule:alpha choice 744-745 | ( 0 ch:0 char-range 744-745 ) ) ) ) ) : ( 0 sep text 745-745 ) : ( 0 rep ref:alphaNum 745-746 | ( 0 rule:alphaNum choice 745-746 | ( 0 ch:0 ref:alpha 745-746 | ( 0 rule:alpha choice 745-746 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @745 > : ( 0 ch:1 char-range 745-746 ) ) ) ) ) : ( 0 sep text 746-746 ) : ( 0 rep ref:alphaNum 746-747 | ( 0 rule:alphaNum choice 746-747 | ( 0 ch:0 ref:alpha 746-747 | ( 0 rule:alpha choice 746-747 | ( 0 ch:0 char-range 746-747 ) ) ) ) ) : ( 0 sep text 747-747 ) : ( 0 rep ref:alphaNum 747-748 | ( 0 rule:alphaNum choice 747-748 | ( 0 ch:0 ref:alpha 747-748 | ( 0 rule:alpha choice 747-748 | ( 0 ch:0 char-range 747-748 ) ) ) ) ) : ( 0 sep text 748-748 ) : ( 0 rep ref:alphaNum 748-749 | ( 0 rule:alphaNum choice 748-749 | ( 0 ch:0 ref:alpha 748-749 | ( 0 rule:alpha choice 748-749 | ( 0 ch:0 char-range 748-749 ) ) ) ) ) : ( 0 sep text 749-749 ) : ( 0 rep ref:alphaNum 749-750 | ( 0 rule:alphaNum choice 749-750 | ( 0 ch:0 ref:alpha 749-750 | ( 0 rule:alpha choice 749-750 | ( 0 ch:0 char-range 749-750 ) ) ) ) ) : ( 0 sep text 750-750 ) : ( 0 rep ref:alphaNum 750-751 | ( 0 rule:alphaNum choice 750-751 | ( 0 ch:0 ref:alpha 750-751 | ( 0 rule:alpha choice 750-751 | ( 0 ch:0 char-range 750-751 ) ) ) ) ) : ( 0 sep text 751-751 ) : ( 0 rep ref:alphaNum 751-752 | ( 0 rule:alphaNum choice 751-752 | ( 0 ch:0 ref:alpha 751-752 | ( 0 rule:alpha choice 751-752 | ( 0 ch:0 char-range 751-752 ) ) ) ) ) : ( 0 sep text 752-752 ) : ( 0 rep ref:alphaNum 752-753 | ( 0 rule:alphaNum choice 752-753 | ( 0 ch:0 ref:alpha 752-753 | ( 0 rule:alpha choice 752-753 | ( 0 ch:0 char-range 752-753 ) ) ) ) ) : ( 0 sep text 753-753 ) : ( 0 rep ref:alphaNum 753-754 | ( 0 rule:alphaNum choice 753-754 | ( 0 ch:0 ref:alpha 753-754 | ( 0 rule:alpha choice 753-754 | ( 0 ch:0 char-range 753-754 ) ) ) ) ) : ( 0 sep text 754-754 ) : ( 0 rep ref:alphaNum 754-755 | ( 0 rule:alphaNum choice 754-755 | ( 0 ch:0 ref:alpha 754-755 | ( 0 rule:alpha choice 754-755 | ( 0 ch:0 char-range 754-755 ) ) ) ) ) : ( 0 sep text 755-755 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @755 | < None of choices matched input :: rule:alphaNum choice @755 | < Rule `alpha` didn't match :: ch:0 ref:alpha @755 | < None of choices matched input :: rule:alpha choice @755 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @755 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @755 > : < Expected '_', but found ' ' :: ch:2 text @755 > > > : < Rule `num` didn't match :: ch:1 ref:num @755 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @755 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @755 > > > : ( 0 ch:1 ref:nested 735-884 | ( 0 rule:nested seqnc 735-884 | ( 0 seq:0 ref:qualifier 735-755 | ( 0 rule:qualifier repsep 735-755 | ( 0 rep ref:ident 735-755 | ( 0 rule:ident seqnc 735-755 | ( 0 seq:0 ref:alpha 735-736 | ( 0 rule:alpha choice 735-736 | ( 0 ch:0 char-range 735-736 ) ) ) : ( 0 seq:1 repsep 736-755 | ( 0 rep ref:alphaNum 736-737 | ( 0 rule:alphaNum choice 736-737 | ( 0 ch:0 ref:alpha 736-737 | ( 0 rule:alpha choice 736-737 | ( 0 ch:0 char-range 736-737 ) ) ) ) ) : ( 0 sep text 737-737 ) : ( 0 rep ref:alphaNum 737-738 | ( 0 rule:alphaNum choice 737-738 | ( 0 ch:0 ref:alpha 737-738 | ( 0 rule:alpha choice 737-738 | ( 0 ch:0 char-range 737-738 ) ) ) ) ) : ( 0 sep text 738-738 ) : ( 0 rep ref:alphaNum 738-739 | ( 0 rule:alphaNum choice 738-739 | ( 0 ch:0 ref:alpha 738-739 | ( 0 rule:alpha choice 738-739 | ( 0 ch:0 char-range 738-739 ) ) ) ) ) : ( 0 sep text 739-739 ) : ( 0 rep ref:alphaNum 739-740 | ( 0 rule:alphaNum choice 739-740 | ( 0 ch:0 ref:alpha 739-740 | ( 0 rule:alpha choice 739-740 | ( 0 ch:0 char-range 739-740 ) ) ) ) ) : ( 0 sep text 740-740 ) : ( 0 rep ref:alphaNum 740-741 | ( 0 rule:alphaNum choice 740-741 | ( 0 ch:0 ref:alpha 740-741 | ( 0 rule:alpha choice 740-741 | ( 0 ch:0 char-range 740-741 ) ) ) ) ) : ( 0 sep text 741-741 ) : ( 0 rep ref:alphaNum 741-742 | ( 0 rule:alphaNum choice 741-742 | ( 0 ch:0 ref:alpha 741-742 | ( 0 rule:alpha choice 741-742 | ( 0 ch:0 char-range 741-742 ) ) ) ) ) : ( 0 sep text 742-742 ) : ( 0 rep ref:alphaNum 742-743 | ( 0 rule:alphaNum choice 742-743 | ( 0 ch:0 ref:alpha 742-743 | ( 0 rule:alpha choice 742-743 | ( 0 ch:0 char-range 742-743 ) ) ) ) ) : ( 0 sep text 743-743 ) : ( 0 rep ref:alphaNum 743-744 | ( 0 rule:alphaNum choice 743-744 | ( 0 ch:0 ref:alpha 743-744 | ( 0 rule:alpha choice 743-744 | ( 0 ch:0 char-range 743-744 ) ) ) ) ) : ( 0 sep text 744-744 ) : ( 0 rep ref:alphaNum 744-745 | ( 0 rule:alphaNum choice 744-745 | ( 0 ch:0 ref:alpha 744-745 | ( 0 rule:alpha choice 744-745 | ( 0 ch:0 char-range 744-745 ) ) ) ) ) : ( 0 sep text 745-745 ) : ( 0 rep ref:alphaNum 745-746 | ( 0 rule:alphaNum choice 745-746 | ( 0 ch:0 ref:alpha 745-746 | ( 0 rule:alpha choice 745-746 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @745 > : ( 0 ch:1 char-range 745-746 ) ) ) ) ) : ( 0 sep text 746-746 ) : ( 0 rep ref:alphaNum 746-747 | ( 0 rule:alphaNum choice 746-747 | ( 0 ch:0 ref:alpha 746-747 | ( 0 rule:alpha choice 746-747 | ( 0 ch:0 char-range 746-747 ) ) ) ) ) : ( 0 sep text 747-747 ) : ( 0 rep ref:alphaNum 747-748 | ( 0 rule:alphaNum choice 747-748 | ( 0 ch:0 ref:alpha 747-748 | ( 0 rule:alpha choice 747-748 | ( 0 ch:0 char-range 747-748 ) ) ) ) ) : ( 0 sep text 748-748 ) : ( 0 rep ref:alphaNum 748-749 | ( 0 rule:alphaNum choice 748-749 | ( 0 ch:0 ref:alpha 748-749 | ( 0 rule:alpha choice 748-749 | ( 0 ch:0 char-range 748-749 ) ) ) ) ) : ( 0 sep text 749-749 ) : ( 0 rep ref:alphaNum 749-750 | ( 0 rule:alphaNum choice 749-750 | ( 0 ch:0 ref:alpha 749-750 | ( 0 rule:alpha choice 749-750 | ( 0 ch:0 char-range 749-750 ) ) ) ) ) : ( 0 sep text 750-750 ) : ( 0 rep ref:alphaNum 750-751 | ( 0 rule:alphaNum choice 750-751 | ( 0 ch:0 ref:alpha 750-751 | ( 0 rule:alpha choice 750-751 | ( 0 ch:0 char-range 750-751 ) ) ) ) ) : ( 0 sep text 751-751 ) : ( 0 rep ref:alphaNum 751-752 | ( 0 rule:alphaNum choice 751-752 | ( 0 ch:0 ref:alpha 751-752 | ( 0 rule:alpha choice 751-752 | ( 0 ch:0 char-range 751-752 ) ) ) ) ) : ( 0 sep text 752-752 ) : ( 0 rep ref:alphaNum 752-753 | ( 0 rule:alphaNum choice 752-753 | ( 0 ch:0 ref:alpha 752-753 | ( 0 rule:alpha choice 752-753 | ( 0 ch:0 char-range 752-753 ) ) ) ) ) : ( 0 sep text 753-753 ) : ( 0 rep ref:alphaNum 753-754 | ( 0 rule:alphaNum choice 753-754 | ( 0 ch:0 ref:alpha 753-754 | ( 0 rule:alpha choice 753-754 | ( 0 ch:0 char-range 753-754 ) ) ) ) ) : ( 0 sep text 754-754 ) : ( 0 rep ref:alphaNum 754-755 | ( 0 rule:alphaNum choice 754-755 | ( 0 ch:0 ref:alpha 754-755 | ( 0 rule:alpha choice 754-755 | ( 0 ch:0 char-range 754-755 ) ) ) ) ) : ( 0 sep text 755-755 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @755 | < None of choices matched input :: rule:alphaNum choice @755 | < Rule `alpha` didn't match :: ch:0 ref:alpha @755 | < None of choices matched input :: rule:alpha choice @755 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @755 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @755 > : < Expected '_', but found ' ' :: ch:2 text @755 > > > : < Rule `num` didn't match :: ch:1 ref:num @755 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @755 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @755 > ) ) : ( 0 seq:1 ref:ws 755-756 | ( 0 rule:ws repsep 755-756 | ( 0 rep seqnc 755-756 | ( 0 seq:0 ref:spaces 755-756 | ( 0 rule:spaces repsep 755-756 | ( 0 rep text 755-756 ) : ( 0 sep text 756-756 ) : < Expected ' ', but found '{' :: rep text @756 > ) ) : ( 0 seq:1 choice 756-756 | < Rule `comment` didn't match :: ch:0 ref:comment @756 | < Sequence failed at entry 0 :: rule:comment seqnc @756 | < Expected '#', but found '{' :: seq:0 text @756 > > > : ( 0 ch:1 text 756-756 ) ) ) : < Expected '
', but found '{' :: sep text @756 > ) ) : ( 0 seq:2 text 756-757 ) : ( 0 seq:3 ref:ws 757-764 | ( 0 rule:ws repsep 757-764 | ( 0 rep seqnc 757-757 | ( 0 seq:0 ref:spaces 757-757 | ( 0 rule:spaces repsep 757-757 | < Expected ' ', but found '
' :: rep text @757 > ) ) : ( 0 seq:1 choice 757-757 | < Rule `comment` didn't match :: ch:0 ref:comment @757 | < Sequence failed at entry 0 :: rule:comment seqnc @757 | < Expected '#', but found '
' :: seq:0 text @757 > > > : ( 0 ch:1 text 757-757 ) ) ) : ( 0 sep text 757-758 ) : ( 0 rep seqnc 758-764 | ( 0 seq:0 ref:spaces 758-764 | ( 0 rule:spaces repsep 758-764 | ( 0 rep text 758-759 ) : ( 0 sep text 759-759 ) : ( 0 rep text 759-760 ) : ( 0 sep text 760-760 ) : ( 0 rep text 760-761 ) : ( 0 sep text 761-761 ) : ( 0 rep text 761-762 ) : ( 0 sep text 762-762 ) : ( 0 rep text 762-763 ) : ( 0 sep text 763-763 ) : ( 0 rep text 763-764 ) : ( 0 sep text 764-764 ) : < Expected ' ', but found 's' :: rep text @764 > ) ) : ( 0 seq:1 choice 764-764 | < Rule `comment` didn't match :: ch:0 ref:comment @764 | < Sequence failed at entry 0 :: rule:comment seqnc @764 | < Expected '#', but found 's' :: seq:0 text @764 > > > : ( 0 ch:1 text 764-764 ) ) ) : < Expected '
', but found 's' :: sep text @764 > ) ) : ( 0 seq:4 repsep 764-878 | ( 0 rep ref:nestedAttr 764-878 | ( 0 rule:nestedAttr choice 764-878 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @764 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @774 | ( 0 seq:0 ref:ident 764-774 | ( 0 rule:ident seqnc 764-774 | ( 0 seq:0 ref:alpha 764-765 | ( 0 rule:alpha choice 764-765 | ( 0 ch:0 char-range 764-765 ) ) ) : ( 0 seq:1 repsep 765-774 | ( 0 rep ref:alphaNum 765-766 | ( 0 rule:alphaNum choice 765-766 | ( 0 ch:0 ref:alpha 765-766 | ( 0 rule:alpha choice 765-766 | ( 0 ch:0 char-range 765-766 ) ) ) ) ) : ( 0 sep text 766-766 ) : ( 0 rep ref:alphaNum 766-767 | ( 0 rule:alphaNum choice 766-767 | ( 0 ch:0 ref:alpha 766-767 | ( 0 rule:alpha choice 766-767 | ( 0 ch:0 char-range 766-767 ) ) ) ) ) : ( 0 sep text 767-767 ) : ( 0 rep ref:alphaNum 767-768 | ( 0 rule:alphaNum choice 767-768 | ( 0 ch:0 ref:alpha 767-768 | ( 0 rule:alpha choice 767-768 | ( 0 ch:0 char-range 767-768 ) ) ) ) ) : ( 0 sep text 768-768 ) : ( 0 rep ref:alphaNum 768-769 | ( 0 rule:alphaNum choice 768-769 | ( 0 ch:0 ref:alpha 768-769 | ( 0 rule:alpha choice 768-769 | ( 0 ch:0 char-range 768-769 ) ) ) ) ) : ( 0 sep text 769-769 ) : ( 0 rep ref:alphaNum 769-770 | ( 0 rule:alphaNum choice 769-770 | ( 0 ch:0 ref:alpha 769-770 | ( 0 rule:alpha choice 769-770 | ( 0 ch:0 char-range 769-770 ) ) ) ) ) : ( 0 sep text 770-770 ) : ( 0 rep ref:alphaNum 770-771 | ( 0 rule:alphaNum choice 770-771 | ( 0 ch:0 ref:alpha 770-771 | ( 0 rule:alpha choice 770-771 | < Expected character in range from 'a' to 'z', but found 'E' :: ch:0 char-range @770 > : ( 0 ch:1 char-range 770-771 ) ) ) ) ) : ( 0 sep text 771-771 ) : ( 0 rep ref:alphaNum 771-772 | ( 0 rule:alphaNum choice 771-772 | ( 0 ch:0 ref:alpha 771-772 | ( 0 rule:alpha choice 771-772 | ( 0 ch:0 char-range 771-772 ) ) ) ) ) : ( 0 sep text 772-772 ) : ( 0 rep ref:alphaNum 772-773 | ( 0 rule:alphaNum choice 772-773 | ( 0 ch:0 ref:alpha 772-773 | ( 0 rule:alpha choice 772-773 | ( 0 ch:0 char-range 772-773 ) ) ) ) ) : ( 0 sep text 773-773 ) : ( 0 rep ref:alphaNum 773-774 | ( 0 rule:alphaNum choice 773-774 | ( 0 ch:0 ref:alpha 773-774 | ( 0 rule:alpha choice 773-774 | ( 0 ch:0 char-range 773-774 ) ) ) ) ) : ( 0 sep text 774-774 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @774 | < None of choices matched input :: rule:alphaNum choice @774 | < Rule `alpha` didn't match :: ch:0 ref:alpha @774 | < None of choices matched input :: rule:alpha choice @774 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @774 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @774 > : < Expected '_', but found ' ' :: ch:2 text @774 > > > : < Rule `num` didn't match :: ch:1 ref:num @774 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @774 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @774 > > > : ( 0 ch:1 ref:nested 764-878 | ( 0 rule:nested seqnc 764-878 | ( 0 seq:0 ref:qualifier 764-774 | ( 0 rule:qualifier repsep 764-774 | ( 0 rep ref:ident 764-774 | ( 0 rule:ident seqnc 764-774 | ( 0 seq:0 ref:alpha 764-765 | ( 0 rule:alpha choice 764-765 | ( 0 ch:0 char-range 764-765 ) ) ) : ( 0 seq:1 repsep 765-774 | ( 0 rep ref:alphaNum 765-766 | ( 0 rule:alphaNum choice 765-766 | ( 0 ch:0 ref:alpha 765-766 | ( 0 rule:alpha choice 765-766 | ( 0 ch:0 char-range 765-766 ) ) ) ) ) : ( 0 sep text 766-766 ) : ( 0 rep ref:alphaNum 766-767 | ( 0 rule:alphaNum choice 766-767 | ( 0 ch:0 ref:alpha 766-767 | ( 0 rule:alpha choice 766-767 | ( 0 ch:0 char-range 766-767 ) ) ) ) ) : ( 0 sep text 767-767 ) : ( 0 rep ref:alphaNum 767-768 | ( 0 rule:alphaNum choice 767-768 | ( 0 ch:0 ref:alpha 767-768 | ( 0 rule:alpha choice 767-768 | ( 0 ch:0 char-range 767-768 ) ) ) ) ) : ( 0 sep text 768-768 ) : ( 0 rep ref:alphaNum 768-769 | ( 0 rule:alphaNum choice 768-769 | ( 0 ch:0 ref:alpha 768-769 | ( 0 rule:alpha choice 768-769 | ( 0 ch:0 char-range 768-769 ) ) ) ) ) : ( 0 sep text 769-769 ) : ( 0 rep ref:alphaNum 769-770 | ( 0 rule:alphaNum choice 769-770 | ( 0 ch:0 ref:alpha 769-770 | ( 0 rule:alpha choice 769-770 | ( 0 ch:0 char-range 769-770 ) ) ) ) ) : ( 0 sep text 770-770 ) : ( 0 rep ref:alphaNum 770-771 | ( 0 rule:alphaNum choice 770-771 | ( 0 ch:0 ref:alpha 770-771 | ( 0 rule:alpha choice 770-771 | < Expected character in range from 'a' to 'z', but found 'E' :: ch:0 char-range @770 > : ( 0 ch:1 char-range 770-771 ) ) ) ) ) : ( 0 sep text 771-771 ) : ( 0 rep ref:alphaNum 771-772 | ( 0 rule:alphaNum choice 771-772 | ( 0 ch:0 ref:alpha 771-772 | ( 0 rule:alpha choice 771-772 | ( 0 ch:0 char-range 771-772 ) ) ) ) ) : ( 0 sep text 772-772 ) : ( 0 rep ref:alphaNum 772-773 | ( 0 rule:alphaNum choice 772-773 | ( 0 ch:0 ref:alpha 772-773 | ( 0 rule:alpha choice 772-773 | ( 0 ch:0 char-range 772-773 ) ) ) ) ) : ( 0 sep text 773-773 ) : ( 0 rep ref:alphaNum 773-774 | ( 0 rule:alphaNum choice 773-774 | ( 0 ch:0 ref:alpha 773-774 | ( 0 rule:alpha choice 773-774 | ( 0 ch:0 char-range 773-774 ) ) ) ) ) : ( 0 sep text 774-774 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @774 | < None of choices matched input :: rule:alphaNum choice @774 | < Rule `alpha` didn't match :: ch:0 ref:alpha @774 | < None of choices matched input :: rule:alpha choice @774 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @774 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @774 > : < Expected '_', but found ' ' :: ch:2 text @774 > > > : < Rule `num` didn't match :: ch:1 ref:num @774 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @774 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @774 > ) ) : ( 0 seq:1 ref:ws 774-775 | ( 0 rule:ws repsep 774-775 | ( 0 rep seqnc 774-775 | ( 0 seq:0 ref:spaces 774-775 | ( 0 rule:spaces repsep 774-775 | ( 0 rep text 774-775 ) : ( 0 sep text 775-775 ) : < Expected ' ', but found '{' :: rep text @775 > ) ) : ( 0 seq:1 choice 775-775 | < Rule `comment` didn't match :: ch:0 ref:comment @775 | < Sequence failed at entry 0 :: rule:comment seqnc @775 | < Expected '#', but found '{' :: seq:0 text @775 > > > : ( 0 ch:1 text 775-775 ) ) ) : < Expected '
', but found '{' :: sep text @775 > ) ) : ( 0 seq:2 text 775-776 ) : ( 0 seq:3 ref:ws 776-785 | ( 0 rule:ws repsep 776-785 | ( 0 rep seqnc 776-776 | ( 0 seq:0 ref:spaces 776-776 | ( 0 rule:spaces repsep 776-776 | < Expected ' ', but found '
' :: rep text @776 > ) ) : ( 0 seq:1 choice 776-776 | < Rule `comment` didn't match :: ch:0 ref:comment @776 | < Sequence failed at entry 0 :: rule:comment seqnc @776 | < Expected '#', but found '
' :: seq:0 text @776 > > > : ( 0 ch:1 text 776-776 ) ) ) : ( 0 sep text 776-777 ) : ( 0 rep seqnc 777-785 | ( 0 seq:0 ref:spaces 777-785 | ( 0 rule:spaces repsep 777-785 | ( 0 rep text 777-778 ) : ( 0 sep text 778-778 ) : ( 0 rep text 778-779 ) : ( 0 sep text 779-779 ) : ( 0 rep text 779-780 ) : ( 0 sep text 780-780 ) : ( 0 rep text 780-781 ) : ( 0 sep text 781-781 ) : ( 0 rep text 781-782 ) : ( 0 sep text 782-782 ) : ( 0 rep text 782-783 ) : ( 0 sep text 783-783 ) : ( 0 rep text 783-784 ) : ( 0 sep text 784-784 ) : ( 0 rep text 784-785 ) : ( 0 sep text 785-785 ) : < Expected ' ', but found 's' :: rep text @785 > ) ) : ( 0 seq:1 choice 785-785 | < Rule `comment` didn't match :: ch:0 ref:comment @785 | < Sequence failed at entry 0 :: rule:comment seqnc @785 | < Expected '#', but found 's' :: seq:0 text @785 > > > : ( 0 ch:1 text 785-785 ) ) ) : < Expected '
', but found 's' :: sep text @785 > ) ) : ( 0 seq:4 repsep 785-870 | ( 0 rep ref:nestedAttr 785-870 | ( 0 rule:nestedAttr choice 785-870 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @785 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @795 | ( 0 seq:0 ref:ident 785-795 | ( 0 rule:ident seqnc 785-795 | ( 0 seq:0 ref:alpha 785-786 | ( 0 rule:alpha choice 785-786 | ( 0 ch:0 char-range 785-786 ) ) ) : ( 0 seq:1 repsep 786-795 | ( 0 rep ref:alphaNum 786-787 | ( 0 rule:alphaNum choice 786-787 | ( 0 ch:0 ref:alpha 786-787 | ( 0 rule:alpha choice 786-787 | ( 0 ch:0 char-range 786-787 ) ) ) ) ) : ( 0 sep text 787-787 ) : ( 0 rep ref:alphaNum 787-788 | ( 0 rule:alphaNum choice 787-788 | ( 0 ch:0 ref:alpha 787-788 | ( 0 rule:alpha choice 787-788 | ( 0 ch:0 char-range 787-788 ) ) ) ) ) : ( 0 sep text 788-788 ) : ( 0 rep ref:alphaNum 788-789 | ( 0 rule:alphaNum choice 788-789 | ( 0 ch:0 ref:alpha 788-789 | ( 0 rule:alpha choice 788-789 | ( 0 ch:0 char-range 788-789 ) ) ) ) ) : ( 0 sep text 789-789 ) : ( 0 rep ref:alphaNum 789-790 | ( 0 rule:alphaNum choice 789-790 | ( 0 ch:0 ref:alpha 789-790 | ( 0 rule:alpha choice 789-790 | ( 0 ch:0 char-range 789-790 ) ) ) ) ) : ( 0 sep text 790-790 ) : ( 0 rep ref:alphaNum 790-791 | ( 0 rule:alphaNum choice 790-791 | ( 0 ch:0 ref:alpha 790-791 | ( 0 rule:alpha choice 790-791 | ( 0 ch:0 char-range 790-791 ) ) ) ) ) : ( 0 sep text 791-791 ) : ( 0 rep ref:alphaNum 791-792 | ( 0 rule:alphaNum choice 791-792 | ( 0 ch:0 ref:alpha 791-792 | ( 0 rule:alpha choice 791-792 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @791 > : ( 0 ch:1 char-range 791-792 ) ) ) ) ) : ( 0 sep text 792-792 ) : ( 0 rep ref:alphaNum 792-793 | ( 0 rule:alphaNum choice 792-793 | ( 0 ch:0 ref:alpha 792-793 | ( 0 rule:alpha choice 792-793 | ( 0 ch:0 char-range 792-793 ) ) ) ) ) : ( 0 sep text 793-793 ) : ( 0 rep ref:alphaNum 793-794 | ( 0 rule:alphaNum choice 793-794 | ( 0 ch:0 ref:alpha 793-794 | ( 0 rule:alpha choice 793-794 | ( 0 ch:0 char-range 793-794 ) ) ) ) ) : ( 0 sep text 794-794 ) : ( 0 rep ref:alphaNum 794-795 | ( 0 rule:alphaNum choice 794-795 | ( 0 ch:0 ref:alpha 794-795 | ( 0 rule:alpha choice 794-795 | ( 0 ch:0 char-range 794-795 ) ) ) ) ) : ( 0 sep text 795-795 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @795 | < None of choices matched input :: rule:alphaNum choice @795 | < Rule `alpha` didn't match :: ch:0 ref:alpha @795 | < None of choices matched input :: rule:alpha choice @795 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @795 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @795 > : < Expected '_', but found ' ' :: ch:2 text @795 > > > : < Rule `num` didn't match :: ch:1 ref:num @795 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @795 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @795 > > > : ( 0 ch:1 ref:nested 785-870 | ( 0 rule:nested seqnc 785-870 | ( 0 seq:0 ref:qualifier 785-795 | ( 0 rule:qualifier repsep 785-795 | ( 0 rep ref:ident 785-795 | ( 0 rule:ident seqnc 785-795 | ( 0 seq:0 ref:alpha 785-786 | ( 0 rule:alpha choice 785-786 | ( 0 ch:0 char-range 785-786 ) ) ) : ( 0 seq:1 repsep 786-795 | ( 0 rep ref:alphaNum 786-787 | ( 0 rule:alphaNum choice 786-787 | ( 0 ch:0 ref:alpha 786-787 | ( 0 rule:alpha choice 786-787 | ( 0 ch:0 char-range 786-787 ) ) ) ) ) : ( 0 sep text 787-787 ) : ( 0 rep ref:alphaNum 787-788 | ( 0 rule:alphaNum choice 787-788 | ( 0 ch:0 ref:alpha 787-788 | ( 0 rule:alpha choice 787-788 | ( 0 ch:0 char-range 787-788 ) ) ) ) ) : ( 0 sep text 788-788 ) : ( 0 rep ref:alphaNum 788-789 | ( 0 rule:alphaNum choice 788-789 | ( 0 ch:0 ref:alpha 788-789 | ( 0 rule:alpha choice 788-789 | ( 0 ch:0 char-range 788-789 ) ) ) ) ) : ( 0 sep text 789-789 ) : ( 0 rep ref:alphaNum 789-790 | ( 0 rule:alphaNum choice 789-790 | ( 0 ch:0 ref:alpha 789-790 | ( 0 rule:alpha choice 789-790 | ( 0 ch:0 char-range 789-790 ) ) ) ) ) : ( 0 sep text 790-790 ) : ( 0 rep ref:alphaNum 790-791 | ( 0 rule:alphaNum choice 790-791 | ( 0 ch:0 ref:alpha 790-791 | ( 0 rule:alpha choice 790-791 | ( 0 ch:0 char-range 790-791 ) ) ) ) ) : ( 0 sep text 791-791 ) : ( 0 rep ref:alphaNum 791-792 | ( 0 rule:alphaNum choice 791-792 | ( 0 ch:0 ref:alpha 791-792 | ( 0 rule:alpha choice 791-792 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @791 > : ( 0 ch:1 char-range 791-792 ) ) ) ) ) : ( 0 sep text 792-792 ) : ( 0 rep ref:alphaNum 792-793 | ( 0 rule:alphaNum choice 792-793 | ( 0 ch:0 ref:alpha 792-793 | ( 0 rule:alpha choice 792-793 | ( 0 ch:0 char-range 792-793 ) ) ) ) ) : ( 0 sep text 793-793 ) : ( 0 rep ref:alphaNum 793-794 | ( 0 rule:alphaNum choice 793-794 | ( 0 ch:0 ref:alpha 793-794 | ( 0 rule:alpha choice 793-794 | ( 0 ch:0 char-range 793-794 ) ) ) ) ) : ( 0 sep text 794-794 ) : ( 0 rep ref:alphaNum 794-795 | ( 0 rule:alphaNum choice 794-795 | ( 0 ch:0 ref:alpha 794-795 | ( 0 rule:alpha choice 794-795 | ( 0 ch:0 char-range 794-795 ) ) ) ) ) : ( 0 sep text 795-795 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @795 | < None of choices matched input :: rule:alphaNum choice @795 | < Rule `alpha` didn't match :: ch:0 ref:alpha @795 | < None of choices matched input :: rule:alpha choice @795 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @795 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @795 > : < Expected '_', but found ' ' :: ch:2 text @795 > > > : < Rule `num` didn't match :: ch:1 ref:num @795 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @795 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @795 > ) ) : ( 0 seq:1 ref:ws 795-796 | ( 0 rule:ws repsep 795-796 | ( 0 rep seqnc 795-796 | ( 0 seq:0 ref:spaces 795-796 | ( 0 rule:spaces repsep 795-796 | ( 0 rep text 795-796 ) : ( 0 sep text 796-796 ) : < Expected ' ', but found '{' :: rep text @796 > ) ) : ( 0 seq:1 choice 796-796 | < Rule `comment` didn't match :: ch:0 ref:comment @796 | < Sequence failed at entry 0 :: rule:comment seqnc @796 | < Expected '#', but found '{' :: seq:0 text @796 > > > : ( 0 ch:1 text 796-796 ) ) ) : < Expected '
', but found '{' :: sep text @796 > ) ) : ( 0 seq:2 text 796-797 ) : ( 0 seq:3 ref:ws 797-808 | ( 0 rule:ws repsep 797-808 | ( 0 rep seqnc 797-797 | ( 0 seq:0 ref:spaces 797-797 | ( 0 rule:spaces repsep 797-797 | < Expected ' ', but found '
' :: rep text @797 > ) ) : ( 0 seq:1 choice 797-797 | < Rule `comment` didn't match :: ch:0 ref:comment @797 | < Sequence failed at entry 0 :: rule:comment seqnc @797 | < Expected '#', but found '
' :: seq:0 text @797 > > > : ( 0 ch:1 text 797-797 ) ) ) : ( 0 sep text 797-798 ) : ( 0 rep seqnc 798-808 | ( 0 seq:0 ref:spaces 798-808 | ( 0 rule:spaces repsep 798-808 | ( 0 rep text 798-799 ) : ( 0 sep text 799-799 ) : ( 0 rep text 799-800 ) : ( 0 sep text 800-800 ) : ( 0 rep text 800-801 ) : ( 0 sep text 801-801 ) : ( 0 rep text 801-802 ) : ( 0 sep text 802-802 ) : ( 0 rep text 802-803 ) : ( 0 sep text 803-803 ) : ( 0 rep text 803-804 ) : ( 0 sep text 804-804 ) : ( 0 rep text 804-805 ) : ( 0 sep text 805-805 ) : ( 0 rep text 805-806 ) : ( 0 sep text 806-806 ) : ( 0 rep text 806-807 ) : ( 0 sep text 807-807 ) : ( 0 rep text 807-808 ) : ( 0 sep text 808-808 ) : < Expected ' ', but found 't' :: rep text @808 > ) ) : ( 0 seq:1 choice 808-808 | < Rule `comment` didn't match :: ch:0 ref:comment @808 | < Sequence failed at entry 0 :: rule:comment seqnc @808 | < Expected '#', but found 't' :: seq:0 text @808 > > > : ( 0 ch:1 text 808-808 ) ) ) : < Expected '
', but found 't' :: sep text @808 > ) ) : ( 0 seq:4 repsep 808-860 | ( 0 rep ref:nestedAttr 808-860 | ( 0 rule:nestedAttr choice 808-860 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @808 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @812 | ( 0 seq:0 ref:ident 808-812 | ( 0 rule:ident seqnc 808-812 | ( 0 seq:0 ref:alpha 808-809 | ( 0 rule:alpha choice 808-809 | ( 0 ch:0 char-range 808-809 ) ) ) : ( 0 seq:1 repsep 809-812 | ( 0 rep ref:alphaNum 809-810 | ( 0 rule:alphaNum choice 809-810 | ( 0 ch:0 ref:alpha 809-810 | ( 0 rule:alpha choice 809-810 | ( 0 ch:0 char-range 809-810 ) ) ) ) ) : ( 0 sep text 810-810 ) : ( 0 rep ref:alphaNum 810-811 | ( 0 rule:alphaNum choice 810-811 | ( 0 ch:0 ref:alpha 810-811 | ( 0 rule:alpha choice 810-811 | ( 0 ch:0 char-range 810-811 ) ) ) ) ) : ( 0 sep text 811-811 ) : ( 0 rep ref:alphaNum 811-812 | ( 0 rule:alphaNum choice 811-812 | ( 0 ch:0 ref:alpha 811-812 | ( 0 rule:alpha choice 811-812 | ( 0 ch:0 char-range 811-812 ) ) ) ) ) : ( 0 sep text 812-812 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @812 | < None of choices matched input :: rule:alphaNum choice @812 | < Rule `alpha` didn't match :: ch:0 ref:alpha @812 | < None of choices matched input :: rule:alpha choice @812 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @812 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @812 > : < Expected '_', but found ' ' :: ch:2 text @812 > > > : < Rule `num` didn't match :: ch:1 ref:num @812 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @812 > > > > ) ) ) : < Expected ':', but found ' ' :: seq:1 text @812 > > > : ( 0 ch:1 ref:nested 808-860 | ( 0 rule:nested seqnc 808-860 | ( 0 seq:0 ref:qualifier 808-812 | ( 0 rule:qualifier repsep 808-812 | ( 0 rep ref:ident 808-812 | ( 0 rule:ident seqnc 808-812 | ( 0 seq:0 ref:alpha 808-809 | ( 0 rule:alpha choice 808-809 | ( 0 ch:0 char-range 808-809 ) ) ) : ( 0 seq:1 repsep 809-812 | ( 0 rep ref:alphaNum 809-810 | ( 0 rule:alphaNum choice 809-810 | ( 0 ch:0 ref:alpha 809-810 | ( 0 rule:alpha choice 809-810 | ( 0 ch:0 char-range 809-810 ) ) ) ) ) : ( 0 sep text 810-810 ) : ( 0 rep ref:alphaNum 810-811 | ( 0 rule:alphaNum choice 810-811 | ( 0 ch:0 ref:alpha 810-811 | ( 0 rule:alpha choice 810-811 | ( 0 ch:0 char-range 810-811 ) ) ) ) ) : ( 0 sep text 811-811 ) : ( 0 rep ref:alphaNum 811-812 | ( 0 rule:alphaNum choice 811-812 | ( 0 ch:0 ref:alpha 811-812 | ( 0 rule:alpha choice 811-812 | ( 0 ch:0 char-range 811-812 ) ) ) ) ) : ( 0 sep text 812-812 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @812 | < None of choices matched input :: rule:alphaNum choice @812 | < Rule `alpha` didn't match :: ch:0 ref:alpha @812 | < None of choices matched input :: rule:alpha choice @812 | < Expected character in range from 'a' to 'z', but found ' ' :: ch:0 char-range @812 > : < Expected character in range from 'A' to 'Z', but found ' ' :: ch:1 char-range @812 > : < Expected '_', but found ' ' :: ch:2 text @812 > > > : < Rule `num` didn't match :: ch:1 ref:num @812 | < Expected character in range from '0' to '9', but found ' ' :: rule:num char-range @812 > > > > ) ) ) : < Expected '.', but found ' ' :: sep text @812 > ) ) : ( 0 seq:1 ref:ws 812-813 | ( 0 rule:ws repsep 812-813 | ( 0 rep seqnc 812-813 | ( 0 seq:0 ref:spaces 812-813 | ( 0 rule:spaces repsep 812-813 | ( 0 rep text 812-813 ) : ( 0 sep text 813-813 ) : < Expected ' ', but found '{' :: rep text @813 > ) ) : ( 0 seq:1 choice 813-813 | < Rule `comment` didn't match :: ch:0 ref:comment @813 | < Sequence failed at entry 0 :: rule:comment seqnc @813 | < Expected '#', but found '{' :: seq:0 text @813 > > > : ( 0 ch:1 text 813-813 ) ) ) : < Expected '
', but found '{' :: sep text @813 > ) ) : ( 0 seq:2 text 813-814 ) : ( 0 seq:3 ref:ws 814-827 | ( 0 rule:ws repsep 814-827 | ( 0 rep seqnc 814-814 | ( 0 seq:0 ref:spaces 814-814 | ( 0 rule:spaces repsep 814-814 | < Expected ' ', but found '
' :: rep text @814 > ) ) : ( 0 seq:1 choice 814-814 | < Rule `comment` didn't match :: ch:0 ref:comment @814 | < Sequence failed at entry 0 :: rule:comment seqnc @814 | < Expected '#', but found '
' :: seq:0 text @814 > > > : ( 0 ch:1 text 814-814 ) ) ) : ( 0 sep text 814-815 ) : ( 0 rep seqnc 815-827 | ( 0 seq:0 ref:spaces 815-827 | ( 0 rule:spaces repsep 815-827 | ( 0 rep text 815-816 ) : ( 0 sep text 816-816 ) : ( 0 rep text 816-817 ) : ( 0 sep text 817-817 ) : ( 0 rep text 817-818 ) : ( 0 sep text 818-818 ) : ( 0 rep text 818-819 ) : ( 0 sep text 819-819 ) : ( 0 rep text 819-820 ) : ( 0 sep text 820-820 ) : ( 0 rep text 820-821 ) : ( 0 sep text 821-821 ) : ( 0 rep text 821-822 ) : ( 0 sep text 822-822 ) : ( 0 rep text 822-823 ) : ( 0 sep text 823-823 ) : ( 0 rep text 823-824 ) : ( 0 sep text 824-824 ) : ( 0 rep text 824-825 ) : ( 0 sep text 825-825 ) : ( 0 rep text 825-826 ) : ( 0 sep text 826-826 ) : ( 0 rep text 826-827 ) : ( 0 sep text 827-827 ) : < Expected ' ', but found 'v' :: rep text @827 > ) ) : ( 0 seq:1 choice 827-827 | < Rule `comment` didn't match :: ch:0 ref:comment @827 | < Sequence failed at entry 0 :: rule:comment seqnc @827 | < Expected '#', but found 'v' :: seq:0 text @827 > > > : ( 0 ch:1 text 827-827 ) ) ) : < Expected '
', but found 'v' :: sep text @827 > ) ) : ( 0 seq:4 repsep 827-848 | ( 0 rep ref:nestedAttr 827-848 | ( 0 rule:nestedAttr choice 827-848 | < Rule `normalAttr` didn't match :: ch:0 ref:normalAttr @827 | < Sequence failed at entry 1 :: rule:normalAttr seqnc @830 | ( 0 seq:0 ref:ident 827-830 | ( 0 rule:ident seqnc 827-830 | ( 0 seq:0 ref:alpha 827-828 | ( 0 rule:alpha choice 827-828 | ( 0 ch:0 char-range 827-828 ) ) ) : ( 0 seq:1 repsep 828-830 | ( 0 rep ref:alphaNum 828-829 | ( 0 rule:alphaNum choice 828-829 | ( 0 ch:0 ref:alpha 828-829 | ( 0 rule:alpha choice 828-829 | ( 0 ch:0 char-range 828-829 ) ) ) ) ) : ( 0 sep text 829-829 ) : ( 0 rep ref:alphaNum 829-830 | ( 0 rule:alphaNum choice 829-830 | ( 0 ch:0 ref:alpha 829-830 | ( 0 rule:alpha choice 829-830 | ( 0 ch:0 char-range 829-830 ) ) ) ) ) : ( 0 sep text 830-830 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @830 | < None of choices matched input :: rule:alphaNum choice @830 | < Rule `alpha` didn't match :: ch:0 ref:alpha @830 | < None of choices matched input :: rule:alpha choice @830 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @830 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @830 > : < Expected '_', but found '{' :: ch:2 text @830 > > > : < Rule `num` didn't match :: ch:1 ref:num @830 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @830 > > > > ) ) ) : < Expected ':', but found '{' :: seq:1 text @830 > > > : ( 0 ch:1 ref:nested 827-848 | ( 0 rule:nested seqnc 827-848 | ( 0 seq:0 ref:qualifier 827-830 | ( 0 rule:qualifier repsep 827-830 | ( 0 rep ref:ident 827-830 | ( 0 rule:ident seqnc 827-830 | ( 0 seq:0 ref:alpha 827-828 | ( 0 rule:alpha choice 827-828 | ( 0 ch:0 char-range 827-828 ) ) ) : ( 0 seq:1 repsep 828-830 | ( 0 rep ref:alphaNum 828-829 | ( 0 rule:alphaNum choice 828-829 | ( 0 ch:0 ref:alpha 828-829 | ( 0 rule:alpha choice 828-829 | ( 0 ch:0 char-range 828-829 ) ) ) ) ) : ( 0 sep text 829-829 ) : ( 0 rep ref:alphaNum 829-830 | ( 0 rule:alphaNum choice 829-830 | ( 0 ch:0 ref:alpha 829-830 | ( 0 rule:alpha choice 829-830 | ( 0 ch:0 char-range 829-830 ) ) ) ) ) : ( 0 sep text 830-830 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @830 | < None of choices matched input :: rule:alphaNum choice @830 | < Rule `alpha` didn't match :: ch:0 ref:alpha @830 | < None of choices matched input :: rule:alpha choice @830 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @830 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @830 > : < Expected '_', but found '{' :: ch:2 text @830 > > > : < Rule `num` didn't match :: ch:1 ref:num @830 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @830 > > > > ) ) ) : < Expected '.', but found '{' :: sep text @830 > ) ) : ( 0 seq:1 ref:ws 830-830 | ( 0 rule:ws repsep 830-830 | ( 0 rep seqnc 830-830 | ( 0 seq:0 ref:spaces 830-830 | ( 0 rule:spaces repsep 830-830 | < Expected ' ', but found '{' :: rep text @830 > ) ) : ( 0 seq:1 choice 830-830 | < Rule `comment` didn't match :: ch:0 ref:comment @830 | < Sequence failed at entry 0 :: rule:comment seqnc @830 | < Expected '#', but found '{' :: seq:0 text @830 > > > : ( 0 ch:1 text 830-830 ) ) ) : < Expected '
', but found '{' :: sep text @830 > ) ) : ( 0 seq:2 text 830-831 ) : ( 0 seq:3 ref:ws 831-831 | ( 0 rule:ws repsep 831-831 | ( 0 rep seqnc 831-831 | ( 0 seq:0 ref:spaces 831-831 | ( 0 rule:spaces repsep 831-831 | < Expected ' ', but found 't' :: rep text @831 > ) ) : ( 0 seq:1 choice 831-831 | < Rule `comment` didn't match :: ch:0 ref:comment @831 | < Sequence failed at entry 0 :: rule:comment seqnc @831 | < Expected '#', but found 't' :: seq:0 text @831 > > > : ( 0 ch:1 text 831-831 ) ) ) : < Expected '
', but found 't' :: sep text @831 > ) ) : ( 0 seq:4 repsep 831-847 | ( 0 rep ref:nestedAttr 831-838 | ( 0 rule:nestedAttr choice 831-838 | ( 0 ch:0 ref:normalAttr 831-838 | ( 0 rule:normalAttr seqnc 831-838 | ( 0 seq:0 ref:ident 831-835 | ( 0 rule:ident seqnc 831-835 | ( 0 seq:0 ref:alpha 831-832 | ( 0 rule:alpha choice 831-832 | ( 0 ch:0 char-range 831-832 ) ) ) : ( 0 seq:1 repsep 832-835 | ( 0 rep ref:alphaNum 832-833 | ( 0 rule:alphaNum choice 832-833 | ( 0 ch:0 ref:alpha 832-833 | ( 0 rule:alpha choice 832-833 | ( 0 ch:0 char-range 832-833 ) ) ) ) ) : ( 0 sep text 833-833 ) : ( 0 rep ref:alphaNum 833-834 | ( 0 rule:alphaNum choice 833-834 | ( 0 ch:0 ref:alpha 833-834 | ( 0 rule:alpha choice 833-834 | ( 0 ch:0 char-range 833-834 ) ) ) ) ) : ( 0 sep text 834-834 ) : ( 0 rep ref:alphaNum 834-835 | ( 0 rule:alphaNum choice 834-835 | ( 0 ch:0 ref:alpha 834-835 | ( 0 rule:alpha choice 834-835 | ( 0 ch:0 char-range 834-835 ) ) ) ) ) : ( 0 sep text 835-835 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @835 | < None of choices matched input :: rule:alphaNum choice @835 | < Rule `alpha` didn't match :: ch:0 ref:alpha @835 | < None of choices matched input :: rule:alpha choice @835 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @835 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @835 > : < Expected '_', but found ':' :: ch:2 text @835 > > > : < Rule `num` didn't match :: ch:1 ref:num @835 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @835 > > > > ) ) ) : ( 0 seq:1 text 835-836 ) : ( 0 seq:2 ref:ws 836-837 | ( 0 rule:ws repsep 836-837 | ( 0 rep seqnc 836-837 | ( 0 seq:0 ref:spaces 836-837 | ( 0 rule:spaces repsep 836-837 | ( 0 rep text 836-837 ) : ( 0 sep text 837-837 ) : < Expected ' ', but found 'N' :: rep text @837 > ) ) : ( 0 seq:1 choice 837-837 | < Rule `comment` didn't match :: ch:0 ref:comment @837 | < Sequence failed at entry 0 :: rule:comment seqnc @837 | < Expected '#', but found 'N' :: seq:0 text @837 > > > : ( 0 ch:1 text 837-837 ) ) ) : < Expected '
', but found 'N' :: sep text @837 > ) ) : ( 0 seq:3 ref:term 837-838 | ( 0 rule:term choice 837-838 | < Rule `record` didn't match :: ch:0 ref:record @837 | < Sequence failed at entry 1 :: rule:record seqnc @838 | ( 0 seq:0 ref:qualifier 837-838 | ( 0 rule:qualifier repsep 837-838 | ( 0 rep ref:ident 837-838 | ( 0 rule:ident seqnc 837-838 | ( 0 seq:0 ref:alpha 837-838 | ( 0 rule:alpha choice 837-838 | < Expected character in range from 'a' to 'z', but found 'N' :: ch:0 char-range @837 > : ( 0 ch:1 char-range 837-838 ) ) ) : ( 0 seq:1 repsep 838-838 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @838 | < None of choices matched input :: rule:alphaNum choice @838 | < Rule `alpha` didn't match :: ch:0 ref:alpha @838 | < None of choices matched input :: rule:alpha choice @838 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @838 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @838 > : < Expected '_', but found ',' :: ch:2 text @838 > > > : < Rule `num` didn't match :: ch:1 ref:num @838 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @838 > > > > ) ) ) : < Expected '.', but found ',' :: sep text @838 > ) ) : < Expected '{', but found ',' :: seq:1 text @838 > > > : < Rule `int` didn't match :: ch:1 ref:int @837 | < Sequence failed at entry 1 :: rule:int seqnc @837 | ( 0 seq:0 choice 837-837 | < Expected '-', but found 'N' :: ch:0 text @837 > : ( 0 ch:1 text 837-837 ) ) : < Rule `num` didn't match :: seq:1 ref:first @837 | < Expected character in range from '0' to '9', but found 'N' :: rule:num char-range @837 > > > > : ( 0 ch:2 ref:var 837-838 | ( 0 rule:var seqnc 837-838 | ( 0 seq:0 char-range 837-838 ) : ( 0 seq:1 repsep 838-838 | < None of choices matched input :: rep choice @838 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @838 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @838 | < None of choices matched input :: rule:alphaNum choice @838 | < Rule `alpha` didn't match :: ch:0 ref:alpha @838 | < None of choices matched input :: rule:alpha choice @838 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @838 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @838 > : < Expected '_', but found ',' :: ch:2 text @838 > > > : < Rule `num` didn't match :: ch:1 ref:num @838 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @838 > > > > > ) ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 838-840 | ( 0 rule:commaSpace seqnc 838-840 | ( 0 seq:0 text 838-839 ) : ( 0 seq:1 ref:ws 839-840 | ( 0 rule:ws repsep 839-840 | ( 0 rep seqnc 839-840 | ( 0 seq:0 ref:spaces 839-840 | ( 0 rule:spaces repsep 839-840 | ( 0 rep text 839-840 ) : ( 0 sep text 840-840 ) : < Expected ' ', but found 's' :: rep text @840 > ) ) : ( 0 seq:1 choice 840-840 | < Rule `comment` didn't match :: ch:0 ref:comment @840 | < Sequence failed at entry 0 :: rule:comment seqnc @840 | < Expected '#', but found 's' :: seq:0 text @840 > > > : ( 0 ch:1 text 840-840 ) ) ) : < Expected '
', but found 's' :: sep text @840 > ) ) ) ) : ( 0 rep ref:nestedAttr 840-847 | ( 0 rule:nestedAttr choice 840-847 | ( 0 ch:0 ref:normalAttr 840-847 | ( 0 rule:normalAttr seqnc 840-847 | ( 0 seq:0 ref:ident 840-844 | ( 0 rule:ident seqnc 840-844 | ( 0 seq:0 ref:alpha 840-841 | ( 0 rule:alpha choice 840-841 | ( 0 ch:0 char-range 840-841 ) ) ) : ( 0 seq:1 repsep 841-844 | ( 0 rep ref:alphaNum 841-842 | ( 0 rule:alphaNum choice 841-842 | ( 0 ch:0 ref:alpha 841-842 | ( 0 rule:alpha choice 841-842 | ( 0 ch:0 char-range 841-842 ) ) ) ) ) : ( 0 sep text 842-842 ) : ( 0 rep ref:alphaNum 842-843 | ( 0 rule:alphaNum choice 842-843 | ( 0 ch:0 ref:alpha 842-843 | ( 0 rule:alpha choice 842-843 | ( 0 ch:0 char-range 842-843 ) ) ) ) ) : ( 0 sep text 843-843 ) : ( 0 rep ref:alphaNum 843-844 | ( 0 rule:alphaNum choice 843-844 | ( 0 ch:0 ref:alpha 843-844 | ( 0 rule:alpha choice 843-844 | ( 0 ch:0 char-range 843-844 ) ) ) ) ) : ( 0 sep text 844-844 ) : < Rule `alphaNum` didn't match :: rep ref:alphaNum @844 | < None of choices matched input :: rule:alphaNum choice @844 | < Rule `alpha` didn't match :: ch:0 ref:alpha @844 | < None of choices matched input :: rule:alpha choice @844 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @844 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @844 > : < Expected '_', but found ':' :: ch:2 text @844 > > > : < Rule `num` didn't match :: ch:1 ref:num @844 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @844 > > > > ) ) ) : ( 0 seq:1 text 844-845 ) : ( 0 seq:2 ref:ws 845-846 | ( 0 rule:ws repsep 845-846 | ( 0 rep seqnc 845-846 | ( 0 seq:0 ref:spaces 845-846 | ( 0 rule:spaces repsep 845-846 | ( 0 rep text 845-846 ) : ( 0 sep text 846-846 ) : < Expected ' ', but found 'S' :: rep text @846 > ) ) : ( 0 seq:1 choice 846-846 | < Rule `comment` didn't match :: ch:0 ref:comment @846 | < Sequence failed at entry 0 :: rule:comment seqnc @846 | < Expected '#', but found 'S' :: seq:0 text @846 > > > : ( 0 ch:1 text 846-846 ) ) ) : < Expected '
', but found 'S' :: sep text @846 > ) ) : ( 0 seq:3 ref:term 846-847 | ( 0 rule:term choice 846-847 | < Rule `record` didn't match :: ch:0 ref:record @846 | < Sequence failed at entry 1 :: rule:record seqnc @847 | ( 0 seq:0 ref:qualifier 846-847 | ( 0 rule:qualifier repsep 846-847 | ( 0 rep ref:ident 846-847 | ( 0 rule:ident seqnc 846-847 | ( 0 seq:0 ref:alpha 846-847 | ( 0 rule:alpha choice 846-847 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @846 > : ( 0 ch:1 char-range 846-847 ) ) ) : ( 0 seq:1 repsep 847-847 | < Rule `alphaNum` didn't match :: rep ref:alphaNum @847 | < None of choices matched input :: rule:alphaNum choice @847 | < Rule `alpha` didn't match :: ch:0 ref:alpha @847 | < None of choices matched input :: rule:alpha choice @847 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @847 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @847 > : < Expected '_', but found '}' :: ch:2 text @847 > > > : < Rule `num` didn't match :: ch:1 ref:num @847 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @847 > > > > ) ) ) : < Expected '.', but found '}' :: sep text @847 > ) ) : < Expected '{', but found '}' :: seq:1 text @847 > > > : < Rule `int` didn't match :: ch:1 ref:int @846 | < Sequence failed at entry 1 :: rule:int seqnc @846 | ( 0 seq:0 choice 846-846 | < Expected '-', but found 'S' :: ch:0 text @846 > : ( 0 ch:1 text 846-846 ) ) : < Rule `num` didn't match :: seq:1 ref:first @846 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @846 > > > > : ( 0 ch:2 ref:var 846-847 | ( 0 rule:var seqnc 846-847 | ( 0 seq:0 char-range 846-847 ) : ( 0 seq:1 repsep 847-847 | < None of choices matched input :: rep choice @847 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @847 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @847 | < None of choices matched input :: rule:alphaNum choice @847 | < Rule `alpha` didn't match :: ch:0 ref:alpha @847 | < None of choices matched input :: rule:alpha choice @847 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @847 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @847 > : < Expected '_', but found '}' :: ch:2 text @847 > > > : < Rule `num` didn't match :: ch:1 ref:num @847 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @847 > > > > > ) ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @847 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @847 | < Expected ',', but found '}' :: seq:0 text @847 > > > ) : ( 0 seq:5 ref:ws 847-847 | ( 0 rule:ws repsep 847-847 | ( 0 rep seqnc 847-847 | ( 0 seq:0 ref:spaces 847-847 | ( 0 rule:spaces repsep 847-847 | < Expected ' ', but found '}' :: rep text @847 > ) ) : ( 0 seq:1 choice 847-847 | < Rule `comment` didn't match :: ch:0 ref:comment @847 | < Sequence failed at entry 0 :: rule:comment seqnc @847 | < Expected '#', but found '}' :: seq:0 text @847 > > > : ( 0 ch:1 text 847-847 ) ) ) : < Expected '
', but found '}' :: sep text @847 > ) ) : ( 0 seq:6 text 847-848 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @848 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @848 | < Expected ',', but found '
' :: seq:0 text @848 > > > ) : ( 0 seq:5 ref:ws 848-859 | ( 0 rule:ws repsep 848-859 | ( 0 rep seqnc 848-848 | ( 0 seq:0 ref:spaces 848-848 | ( 0 rule:spaces repsep 848-848 | < Expected ' ', but found '
' :: rep text @848 > ) ) : ( 0 seq:1 choice 848-848 | < Rule `comment` didn't match :: ch:0 ref:comment @848 | < Sequence failed at entry 0 :: rule:comment seqnc @848 | < Expected '#', but found '
' :: seq:0 text @848 > > > : ( 0 ch:1 text 848-848 ) ) ) : ( 0 sep text 848-849 ) : ( 0 rep seqnc 849-859 | ( 0 seq:0 ref:spaces 849-859 | ( 0 rule:spaces repsep 849-859 | ( 0 rep text 849-850 ) : ( 0 sep text 850-850 ) : ( 0 rep text 850-851 ) : ( 0 sep text 851-851 ) : ( 0 rep text 851-852 ) : ( 0 sep text 852-852 ) : ( 0 rep text 852-853 ) : ( 0 sep text 853-853 ) : ( 0 rep text 853-854 ) : ( 0 sep text 854-854 ) : ( 0 rep text 854-855 ) : ( 0 sep text 855-855 ) : ( 0 rep text 855-856 ) : ( 0 sep text 856-856 ) : ( 0 rep text 856-857 ) : ( 0 sep text 857-857 ) : ( 0 rep text 857-858 ) : ( 0 sep text 858-858 ) : ( 0 rep text 858-859 ) : ( 0 sep text 859-859 ) : < Expected ' ', but found '}' :: rep text @859 > ) ) : ( 0 seq:1 choice 859-859 | < Rule `comment` didn't match :: ch:0 ref:comment @859 | < Sequence failed at entry 0 :: rule:comment seqnc @859 | < Expected '#', but found '}' :: seq:0 text @859 > > > : ( 0 ch:1 text 859-859 ) ) ) : < Expected '
', but found '}' :: sep text @859 > ) ) : ( 0 seq:6 text 859-860 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @860 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @860 | < Expected ',', but found '
' :: seq:0 text @860 > > > ) : ( 0 seq:5 ref:ws 860-869 | ( 0 rule:ws repsep 860-869 | ( 0 rep seqnc 860-860 | ( 0 seq:0 ref:spaces 860-860 | ( 0 rule:spaces repsep 860-860 | < Expected ' ', but found '
' :: rep text @860 > ) ) : ( 0 seq:1 choice 860-860 | < Rule `comment` didn't match :: ch:0 ref:comment @860 | < Sequence failed at entry 0 :: rule:comment seqnc @860 | < Expected '#', but found '
' :: seq:0 text @860 > > > : ( 0 ch:1 text 860-860 ) ) ) : ( 0 sep text 860-861 ) : ( 0 rep seqnc 861-869 | ( 0 seq:0 ref:spaces 861-869 | ( 0 rule:spaces repsep 861-869 | ( 0 rep text 861-862 ) : ( 0 sep text 862-862 ) : ( 0 rep text 862-863 ) : ( 0 sep text 863-863 ) : ( 0 rep text 863-864 ) : ( 0 sep text 864-864 ) : ( 0 rep text 864-865 ) : ( 0 sep text 865-865 ) : ( 0 rep text 865-866 ) : ( 0 sep text 866-866 ) : ( 0 rep text 866-867 ) : ( 0 sep text 867-867 ) : ( 0 rep text 867-868 ) : ( 0 sep text 868-868 ) : ( 0 rep text 868-869 ) : ( 0 sep text 869-869 ) : < Expected ' ', but found '}' :: rep text @869 > ) ) : ( 0 seq:1 choice 869-869 | < Rule `comment` didn't match :: ch:0 ref:comment @869 | < Sequence failed at entry 0 :: rule:comment seqnc @869 | < Expected '#', but found '}' :: seq:0 text @869 > > > : ( 0 ch:1 text 869-869 ) ) ) : < Expected '
', but found '}' :: sep text @869 > ) ) : ( 0 seq:6 text 869-870 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @870 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @870 | < Expected ',', but found '
' :: seq:0 text @870 > > > ) : ( 0 seq:5 ref:ws 870-877 | ( 0 rule:ws repsep 870-877 | ( 0 rep seqnc 870-870 | ( 0 seq:0 ref:spaces 870-870 | ( 0 rule:spaces repsep 870-870 | < Expected ' ', but found '
' :: rep text @870 > ) ) : ( 0 seq:1 choice 870-870 | < Rule `comment` didn't match :: ch:0 ref:comment @870 | < Sequence failed at entry 0 :: rule:comment seqnc @870 | < Expected '#', but found '
' :: seq:0 text @870 > > > : ( 0 ch:1 text 870-870 ) ) ) : ( 0 sep text 870-871 ) : ( 0 rep seqnc 871-877 | ( 0 seq:0 ref:spaces 871-877 | ( 0 rule:spaces repsep 871-877 | ( 0 rep text 871-872 ) : ( 0 sep text 872-872 ) : ( 0 rep text 872-873 ) : ( 0 sep text 873-873 ) : ( 0 rep text 873-874 ) : ( 0 sep text 874-874 ) : ( 0 rep text 874-875 ) : ( 0 sep text 875-875 ) : ( 0 rep text 875-876 ) : ( 0 sep text 876-876 ) : ( 0 rep text 876-877 ) : ( 0 sep text 877-877 ) : < Expected ' ', but found '}' :: rep text @877 > ) ) : ( 0 seq:1 choice 877-877 | < Rule `comment` didn't match :: ch:0 ref:comment @877 | < Sequence failed at entry 0 :: rule:comment seqnc @877 | < Expected '#', but found '}' :: seq:0 text @877 > > > : ( 0 ch:1 text 877-877 ) ) ) : < Expected '
', but found '}' :: sep text @877 > ) ) : ( 0 seq:6 text 877-878 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @878 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @878 | < Expected ',', but found '
' :: seq:0 text @878 > > > ) : ( 0 seq:5 ref:ws 878-883 | ( 0 rule:ws repsep 878-883 | ( 0 rep seqnc 878-878 | ( 0 seq:0 ref:spaces 878-878 | ( 0 rule:spaces repsep 878-878 | < Expected ' ', but found '
' :: rep text @878 > ) ) : ( 0 seq:1 choice 878-878 | < Rule `comment` didn't match :: ch:0 ref:comment @878 | < Sequence failed at entry 0 :: rule:comment seqnc @878 | < Expected '#', but found '
' :: seq:0 text @878 > > > : ( 0 ch:1 text 878-878 ) ) ) : ( 0 sep text 878-879 ) : ( 0 rep seqnc 879-883 | ( 0 seq:0 ref:spaces 879-883 | ( 0 rule:spaces repsep 879-883 | ( 0 rep text 879-880 ) : ( 0 sep text 880-880 ) : ( 0 rep text 880-881 ) : ( 0 sep text 881-881 ) : ( 0 rep text 881-882 ) : ( 0 sep text 882-882 ) : ( 0 rep text 882-883 ) : ( 0 sep text 883-883 ) : < Expected ' ', but found '}' :: rep text @883 > ) ) : ( 0 seq:1 choice 883-883 | < Rule `comment` didn't match :: ch:0 ref:comment @883 | < Sequence failed at entry 0 :: rule:comment seqnc @883 | < Expected '#', but found '}' :: seq:0 text @883 > > > : ( 0 ch:1 text 883-883 ) ) ) : < Expected '
', but found '}' :: sep text @883 > ) ) : ( 0 seq:6 text 883-884 ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @884 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @884 | < Expected ',', but found '
' :: seq:0 text @884 > > > ) : ( 0 seq:5 ref:ws 884-887 | ( 0 rule:ws repsep 884-887 | ( 0 rep seqnc 884-884 | ( 0 seq:0 ref:spaces 884-884 | ( 0 rule:spaces repsep 884-884 | < Expected ' ', but found '
' :: rep text @884 > ) ) : ( 0 seq:1 choice 884-884 | < Rule `comment` didn't match :: ch:0 ref:comment @884 | < Sequence failed at entry 0 :: rule:comment seqnc @884 | < Expected '#', but found '
' :: seq:0 text @884 > > > : ( 0 ch:1 text 884-884 ) ) ) : ( 0 sep text 884-885 ) : ( 0 rep seqnc 885-887 | ( 0 seq:0 ref:spaces 885-887 | ( 0 rule:spaces repsep 885-887 | ( 0 rep text 885-886 ) : ( 0 sep text 886-886 ) : ( 0 rep text 886-887 ) : ( 0 sep text 887-887 ) : < Expected ' ', but found '}' :: rep text @887 > ) ) : ( 0 seq:1 choice 887-887 | < Rule `comment` didn't match :: ch:0 ref:comment @887 | < Sequence failed at entry 0 :: rule:comment seqnc @887 | < Expected '#', but found '}' :: seq:0 text @887 > > > : ( 0 ch:1 text 887-887 ) ) ) : < Expected '
', but found '}' :: sep text @887 > ) ) : ( 0 seq:6 text 887-888 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @889 | ( 0 seq:0 ref:ws 888-889 | ( 0 rule:ws repsep 888-889 | ( 0 rep seqnc 888-888 | ( 0 seq:0 ref:spaces 888-888 | ( 0 rule:spaces repsep 888-888 | < Expected ' ', but found '
' :: rep text @888 > ) ) : ( 0 seq:1 choice 888-888 | < Rule `comment` didn't match :: ch:0 ref:comment @888 | < Sequence failed at entry 0 :: rule:comment seqnc @888 | < Expected '#', but found '
' :: seq:0 text @888 > > > : ( 0 ch:1 text 888-888 ) ) ) : ( 0 sep text 888-889 ) : ( 0 rep seqnc 889-889 | ( 0 seq:0 ref:spaces 889-889 | ( 0 rule:spaces repsep 889-889 | < Expected ' ', but found '}' :: rep text @889 > ) ) : ( 0 seq:1 choice 889-889 | < Rule `comment` didn't match :: ch:0 ref:comment @889 | < Sequence failed at entry 0 :: rule:comment seqnc @889 | < Expected '#', but found '}' :: seq:0 text @889 > > > : ( 0 ch:1 text 889-889 ) ) ) : < Expected '
', but found '}' :: sep text @889 > ) ) : < Expected '&', but found '}' :: seq:1 text @889 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @889 | ( 0 seq:0 ref:ws 889-889 | ( 0 rule:ws repsep 889-889 | ( 0 rep seqnc 889-889 | ( 0 seq:0 ref:spaces 889-889 | ( 0 rule:spaces repsep 889-889 | < Expected ' ', but found '}' :: rep text @889 > ) ) : ( 0 seq:1 choice 889-889 | < Rule `comment` didn't match :: ch:0 ref:comment @889 | < Sequence failed at entry 0 :: rule:comment seqnc @889 | < Expected '#', but found '}' :: seq:0 text @889 > > > : ( 0 ch:1 text 889-889 ) ) ) : < Expected '
', but found '}' :: sep text @889 > ) ) : < Expected '|', but found '}' :: seq:1 text @889 > > ) : ( 0 seq:7 ref:ws 889-889 | ( 0 rule:ws repsep 889-889 | ( 0 rep seqnc 889-889 | ( 0 seq:0 ref:spaces 889-889 | ( 0 rule:spaces repsep 889-889 | < Expected ' ', but found '}' :: rep text @889 > ) ) : ( 0 seq:1 choice 889-889 | < Rule `comment` didn't match :: ch:0 ref:comment @889 | < Sequence failed at entry 0 :: rule:comment seqnc @889 | < Expected '#', but found '}' :: seq:0 text @889 > > > : ( 0 ch:1 text 889-889 ) ) ) : < Expected '
', but found '}' :: sep text @889 > ) ) : ( 0 seq:8 text 889-890 ) ) ) ) ) : ( 0 sep ref:ws 890-891 | ( 0 rule:ws repsep 890-891 | ( 0 rep seqnc 890-890 | ( 0 seq:0 ref:spaces 890-890 | ( 0 rule:spaces repsep 890-890 | < Expected ' ', but found '
' :: rep text @890 > ) ) : ( 0 seq:1 choice 890-890 | < Rule `comment` didn't match :: ch:0 ref:comment @890 | < Sequence failed at entry 0 :: rule:comment seqnc @890 | < Expected '#', but found '
' :: seq:0 text @890 > > > : ( 0 ch:1 text 890-890 ) ) ) : ( 0 sep text 890-891 ) : < Sequence failed at entry 1 :: rep seqnc @891 | ( 0 seq:0 ref:spaces 891-891 | ( 0 rule:spaces repsep 891-891 | < Expected ' ', but found end-of-input :: rep text @891 > ) ) : < None of choices matched input :: seq:1 choice @891 | < Rule `comment` didn't match :: ch:0 ref:comment @891 | < Sequence failed at entry 0 :: rule:comment seqnc @891 | < Expected '#', but found end-of-input :: seq:0 text @891 > > > : < End of input :: ch:1 text @891 > > > ) ) : < Rule `declaration` didn't match :: rep ref:declaration @891 | < None of choices matched input :: rule:declaration choice @891 | < Rule `rule` didn't match :: ch:0 ref:rule @891 | < Sequence failed at entry 0 :: rule:rule seqnc @891 | < Rule `defKW` didn't match :: seq:0 ref:defKW @891 | < Expected 'def', but found end-of-input :: rule:defKW text @891 > > > > : < Rule `tableDecl` didn't match :: ch:1 ref:tableDecl @891 | < Sequence failed at entry 0 :: rule:tableDecl seqnc @891 | < Rule `tableKW` didn't match :: seq:0 ref:tableKW @891 | < Expected 'table', but found end-of-input :: rule:tableKW text @891 > > > > : < Rule `import` didn't match :: ch:2 ref:import @891 | < Sequence failed at entry 0 :: rule:import seqnc @891 | < Rule `importKW` didn't match :: seq:0 ref:importKW @891 | < Expected 'import', but found end-of-input :: rule:importKW text @891 > > > > : < Rule `fact` didn't match :: ch:3 ref:fact @891 | < Sequence failed at entry 0 :: rule:fact seqnc @891 | < Rule `record` didn't match :: seq:0 ref:record @891 | < Sequence failed at entry 1 :: rule:record seqnc @891 | ( 0 seq:0 ref:qualifier 891-891 | ( 0 rule:qualifier repsep 891-891 | < Rule `ident` didn't match :: rep ref:ident @891 | < Sequence failed at entry 0 :: rule:ident seqnc @891 | < Rule `alpha` didn't match :: seq:0 ref:alpha @891 | < None of choices matched input :: rule:alpha choice @891 | < Expected character in range from 'a' to 'z', but found end-of-input :: ch:0 char-range @891 > : < Expected character in range from 'A' to 'Z', but found end-of-input :: ch:1 char-range @891 > : < Expected '_', but found end-of-input :: ch:2 text @891 > > > > > ) ) : < Expected '{', but found end-of-input :: seq:1 text @891 > > > > > > > ) : ( 0 seq:2 ref:ws 891-891 | ( 0 rule:ws repsep 891-891 | < Sequence failed at entry 1 :: rep seqnc @891 | ( 0 seq:0 ref:spaces 891-891 | ( 0 rule:spaces repsep 891-891 | < Expected ' ', but found end-of-input :: rep text @891 > ) ) : < None of choices matched input :: seq:1 choice @891 | < Rule `comment` didn't match :: ch:0 ref:comment @891 | < Sequence failed at entry 0 :: rule:comment seqnc @891 | < Expected '#', but found end-of-input :: seq:0 text @891 > > > : < End of input :: ch:1 text @891 > > > ) ) )