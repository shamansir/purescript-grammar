( 0 <main> ref:value 0-27 | ( 0 rule:value choice 0-27 | ( 0 ch:0 ref:object 0-27 | ( 0 rule:object seqnc 0-27 | ( 0 seq:0 text 0-1 ) : ( 0 seq:1 repsep 1-26 | ( 0 rep ref:keyValue 1-14 | ( 0 rule:keyValue seqnc 1-14 | ( 0 seq:0 ref:string 1-6 | ( 0 rule:string seqnc 1-6 | ( 0 seq:0 text 1-2 ) : ( 0 seq:1 repsep 2-5 | ( 0 rep ref:stringChar 2-3 | ( 0 rule:stringChar choice 2-3 | ( 0 ch:0 not-char 2-3 ) ) ) : ( 0 sep text 3-3 ) : ( 0 rep ref:stringChar 3-4 | ( 0 rule:stringChar choice 3-4 | ( 0 ch:0 not-char 3-4 ) ) ) : ( 0 sep text 4-4 ) : ( 0 rep ref:stringChar 4-5 | ( 0 rule:stringChar choice 4-5 | ( 0 ch:0 not-char 4-5 ) ) ) : ( 0 sep text 5-5 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @5 | < None of choices matched input :: rule:stringChar choice @5 | < Expected not to find '"', but found '"' :: ch:0 not-char @5 > : < Sequence failed at entry 0 :: ch:1 seqnc @5 | < Expected '\\', but found '"' :: seq:0 char @5 > > > > ) : ( 0 seq:2 text 5-6 ) ) ) : ( 0 seq:1 text 6-7 ) : ( 0 seq:2 ref:value 7-14 | ( 0 rule:value choice 7-14 | < Rule `object` didn't match :: ch:0 ref:object @7 | < Sequence failed at entry 0 :: rule:object seqnc @7 | < Expected '{', but found '[' :: seq:0 text @7 > > > : ( 0 ch:1 ref:array 7-14 | ( 0 rule:array seqnc 7-14 | ( 0 seq:0 text 7-8 ) : ( 0 seq:1 repsep 8-13 | ( 0 rep ref:value 8-9 | ( 0 rule:value choice 8-9 | < Rule `object` didn't match :: ch:0 ref:object @8 | < Sequence failed at entry 0 :: rule:object seqnc @8 | < Expected '{', but found '1' :: seq:0 text @8 > > > : < Rule `array` didn't match :: ch:1 ref:array @8 | < Sequence failed at entry 0 :: rule:array seqnc @8 | < Expected '[', but found '1' :: seq:0 text @8 > > > : ( 0 ch:2 ref:int 8-9 | ( 0 rule:int seqnc 8-9 | ( 0 seq:0 char-range 8-9 ) : ( 0 seq:1 repsep 9-9 | < Expected character in range from '0' to '9', but found ',' :: rep char-range @9 > ) ) ) ) ) : ( 0 sep text 9-10 ) : ( 0 rep ref:value 10-11 | ( 0 rule:value choice 10-11 | < Rule `object` didn't match :: ch:0 ref:object @10 | < Sequence failed at entry 0 :: rule:object seqnc @10 | < Expected '{', but found '2' :: seq:0 text @10 > > > : < Rule `array` didn't match :: ch:1 ref:array @10 | < Sequence failed at entry 0 :: rule:array seqnc @10 | < Expected '[', but found '2' :: seq:0 text @10 > > > : ( 0 ch:2 ref:int 10-11 | ( 0 rule:int seqnc 10-11 | ( 0 seq:0 char-range 10-11 ) : ( 0 seq:1 repsep 11-11 | < Expected character in range from '0' to '9', but found ',' :: rep char-range @11 > ) ) ) ) ) : ( 0 sep text 11-12 ) : ( 0 rep ref:value 12-13 | ( 0 rule:value choice 12-13 | < Rule `object` didn't match :: ch:0 ref:object @12 | < Sequence failed at entry 0 :: rule:object seqnc @12 | < Expected '{', but found '3' :: seq:0 text @12 > > > : < Rule `array` didn't match :: ch:1 ref:array @12 | < Sequence failed at entry 0 :: rule:array seqnc @12 | < Expected '[', but found '3' :: seq:0 text @12 > > > : ( 0 ch:2 ref:int 12-13 | ( 0 rule:int seqnc 12-13 | ( 0 seq:0 char-range 12-13 ) : ( 0 seq:1 repsep 13-13 | < Expected character in range from '0' to '9', but found ']' :: rep char-range @13 > ) ) ) ) ) : < Expected ',', but found ']' :: sep text @13 > ) : ( 0 seq:2 text 13-14 ) ) ) ) ) ) ) : ( 0 sep text 14-15 ) : ( 0 rep ref:keyValue 15-26 | ( 0 rule:keyValue seqnc 15-26 | ( 0 seq:0 ref:string 15-21 | ( 0 rule:string seqnc 15-21 | ( 0 seq:0 text 15-16 ) : ( 0 seq:1 repsep 16-20 | ( 0 rep ref:stringChar 16-17 | ( 0 rule:stringChar choice 16-17 | ( 0 ch:0 not-char 16-17 ) ) ) : ( 0 sep text 17-17 ) : ( 0 rep ref:stringChar 17-18 | ( 0 rule:stringChar choice 17-18 | ( 0 ch:0 not-char 17-18 ) ) ) : ( 0 sep text 18-18 ) : ( 0 rep ref:stringChar 18-19 | ( 0 rule:stringChar choice 18-19 | ( 0 ch:0 not-char 18-19 ) ) ) : ( 0 sep text 19-19 ) : ( 0 rep ref:stringChar 19-20 | ( 0 rule:stringChar choice 19-20 | ( 0 ch:0 not-char 19-20 ) ) ) : ( 0 sep text 20-20 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @20 | < None of choices matched input :: rule:stringChar choice @20 | < Expected not to find '"', but found '"' :: ch:0 not-char @20 > : < Sequence failed at entry 0 :: ch:1 seqnc @20 | < Expected '\\', but found '"' :: seq:0 char @20 > > > > ) : ( 0 seq:2 text 20-21 ) ) ) : ( 0 seq:1 text 21-22 ) : ( 0 seq:2 ref:value 22-26 | ( 0 rule:value choice 22-26 | < Rule `object` didn't match :: ch:0 ref:object @22 | < Sequence failed at entry 0 :: rule:object seqnc @22 | < Expected '{', but found 'n' :: seq:0 text @22 > > > : < Rule `array` didn't match :: ch:1 ref:array @22 | < Sequence failed at entry 0 :: rule:array seqnc @22 | < Expected '[', but found 'n' :: seq:0 text @22 > > > : < Rule `int` didn't match :: ch:2 ref:int @22 | < Sequence failed at entry 0 :: rule:int seqnc @22 | < Expected character in range from '0' to '9', but found 'n' :: seq:0 char-range @22 > > > : < Rule `string` didn't match :: ch:3 ref:string @22 | < Sequence failed at entry 0 :: rule:string seqnc @22 | < Expected '"', but found 'n' :: seq:0 text @22 > > > : ( 0 ch:4 ref:null 22-26 | ( 0 rule:null text 22-26 ) ) ) ) ) ) : < Expected ',', but found '}' :: sep text @26 > ) : ( 0 seq:2 text 26-27 ) ) ) ) )