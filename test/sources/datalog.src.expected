( 0 <main> seqnc 0-725 | ( 0 seq:0 ref:ws 0-0 | ( 0 rule:ws repsep 0-0 | ( 0 rep seqnc 0-0 | ( 0 seq:0 ref:spaces 0-0 | ( 0 rule:spaces repsep 0-0 | < Expected ' ', but found '.' :: rep text @0 > ) ) : ( 0 seq:1 choice 0-0 | < Rule `comment` didn't match :: ch:0 ref:comment @0 | < Sequence failed at entry 0 :: rule:comment seqnc @0 | < Expected '#', but found '.' :: seq:0 text @0 > > > : ( 0 ch:1 text 0-0 ) ) ) : < Expected '
', but found '.' :: sep text @0 > ) ) : ( 0 seq:1 repsep 0-725 | ( 0 rep ref:statement 0-17 | ( 0 rule:statement choice 0-17 | < Rule `rule` didn't match :: ch:0 ref:rule @0 | < Sequence failed at entry 0 :: rule:rule seqnc @0 | < Rule `record` didn't match :: seq:0 ref:record @0 | < Sequence failed at entry 0 :: rule:record seqnc @0 | < Rule `ident` didn't match :: seq:0 ref:ident @0 | < Sequence failed at entry 0 :: rule:ident seqnc @0 | < Rule `alpha` didn't match :: seq:0 ref:alpha @0 | < None of choices matched input :: rule:alpha choice @0 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @0 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @0 > : < Expected '_', but found '.' :: ch:2 text @0 > > > > > > > > > : < Rule `fact` didn't match :: ch:1 ref:fact @0 | < Sequence failed at entry 0 :: rule:fact seqnc @0 | < Rule `record` didn't match :: seq:0 ref:record @0 | < Sequence failed at entry 0 :: rule:record seqnc @0 | < Rule `ident` didn't match :: seq:0 ref:ident @0 | < Sequence failed at entry 0 :: rule:ident seqnc @0 | < Rule `alpha` didn't match :: seq:0 ref:alpha @0 | < None of choices matched input :: rule:alpha choice @0 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @0 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @0 > : < Expected '_', but found '.' :: ch:2 text @0 > > > > > > > > > : < Rule `query` didn't match :: ch:2 ref:query @0 | < Sequence failed at entry 0 :: rule:query seqnc @0 | < Rule `record` didn't match :: seq:0 ref:record @0 | < Sequence failed at entry 0 :: rule:record seqnc @0 | < Rule `ident` didn't match :: seq:0 ref:ident @0 | < Sequence failed at entry 0 :: rule:ident seqnc @0 | < Rule `alpha` didn't match :: seq:0 ref:alpha @0 | < None of choices matched input :: rule:alpha choice @0 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @0 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @0 > : < Expected '_', but found '.' :: ch:2 text @0 > > > > > > > > > : < Rule `deleteFact` didn't match :: ch:3 ref:deleteFact @0 | < Sequence failed at entry 0 :: rule:deleteFact seqnc @0 | < Expected '-', but found '.' :: seq:0 text @0 > > > : ( 0 ch:4 ref:tableDecl 0-17 | ( 0 rule:tableDecl seqnc 0-17 | ( 0 seq:0 ref:tableKW 0-6 | ( 0 rule:tableKW text 0-6 ) ) : ( 0 seq:1 ref:ws 6-7 | ( 0 rule:ws repsep 6-7 | ( 0 rep seqnc 6-7 | ( 0 seq:0 ref:spaces 6-7 | ( 0 rule:spaces repsep 6-7 | ( 0 rep text 6-7 ) : ( 0 sep text 7-7 ) : < Expected ' ', but found 'a' :: rep text @7 > ) ) : ( 0 seq:1 choice 7-7 | < Rule `comment` didn't match :: ch:0 ref:comment @7 | < Sequence failed at entry 0 :: rule:comment seqnc @7 | < Expected '#', but found 'a' :: seq:0 text @7 > > > : ( 0 ch:1 text 7-7 ) ) ) : < Expected '
', but found 'a' :: sep text @7 > ) ) : ( 0 seq:2 ref:name 7-17 | ( 0 rule:ident seqnc 7-17 | ( 0 seq:0 ref:alpha 7-8 | ( 0 rule:alpha choice 7-8 | ( 0 ch:0 char-range 7-8 ) ) ) : ( 0 seq:1 repsep 8-17 | ( 0 rep choice 8-9 | ( 0 ch:0 ref:alphaNum 8-9 | ( 0 rule:alphaNum choice 8-9 | ( 0 ch:0 ref:alpha 8-9 | ( 0 rule:alpha choice 8-9 | ( 0 ch:0 char-range 8-9 ) ) ) ) ) ) : ( 0 sep text 9-9 ) : ( 0 rep choice 9-10 | ( 0 ch:0 ref:alphaNum 9-10 | ( 0 rule:alphaNum choice 9-10 | ( 0 ch:0 ref:alpha 9-10 | ( 0 rule:alpha choice 9-10 | ( 0 ch:0 char-range 9-10 ) ) ) ) ) ) : ( 0 sep text 10-10 ) : ( 0 rep choice 10-11 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @10 | < None of choices matched input :: rule:alphaNum choice @10 | < Rule `alpha` didn't match :: ch:0 ref:alpha @10 | < None of choices matched input :: rule:alpha choice @10 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @10 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @10 > : < Expected '_', but found '.' :: ch:2 text @10 > > > : < Rule `num` didn't match :: ch:1 ref:num @10 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @10 > > > > : ( 0 ch:1 text 10-11 ) ) : ( 0 sep text 11-11 ) : ( 0 rep choice 11-12 | ( 0 ch:0 ref:alphaNum 11-12 | ( 0 rule:alphaNum choice 11-12 | ( 0 ch:0 ref:alpha 11-12 | ( 0 rule:alpha choice 11-12 | ( 0 ch:0 char-range 11-12 ) ) ) ) ) ) : ( 0 sep text 12-12 ) : ( 0 rep choice 12-13 | ( 0 ch:0 ref:alphaNum 12-13 | ( 0 rule:alphaNum choice 12-13 | ( 0 ch:0 ref:alpha 12-13 | ( 0 rule:alpha choice 12-13 | ( 0 ch:0 char-range 12-13 ) ) ) ) ) ) : ( 0 sep text 13-13 ) : ( 0 rep choice 13-14 | ( 0 ch:0 ref:alphaNum 13-14 | ( 0 rule:alphaNum choice 13-14 | ( 0 ch:0 ref:alpha 13-14 | ( 0 rule:alpha choice 13-14 | ( 0 ch:0 char-range 13-14 ) ) ) ) ) ) : ( 0 sep text 14-14 ) : ( 0 rep choice 14-15 | ( 0 ch:0 ref:alphaNum 14-15 | ( 0 rule:alphaNum choice 14-15 | ( 0 ch:0 ref:alpha 14-15 | ( 0 rule:alpha choice 14-15 | ( 0 ch:0 char-range 14-15 ) ) ) ) ) ) : ( 0 sep text 15-15 ) : ( 0 rep choice 15-16 | ( 0 ch:0 ref:alphaNum 15-16 | ( 0 rule:alphaNum choice 15-16 | ( 0 ch:0 ref:alpha 15-16 | ( 0 rule:alpha choice 15-16 | ( 0 ch:0 char-range 15-16 ) ) ) ) ) ) : ( 0 sep text 16-16 ) : ( 0 rep choice 16-17 | ( 0 ch:0 ref:alphaNum 16-17 | ( 0 rule:alphaNum choice 16-17 | ( 0 ch:0 ref:alpha 16-17 | ( 0 rule:alpha choice 16-17 | ( 0 ch:0 char-range 16-17 ) ) ) ) ) ) : ( 0 sep text 17-17 ) : < None of choices matched input :: rep choice @17 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @17 | < None of choices matched input :: rule:alphaNum choice @17 | < Rule `alpha` didn't match :: ch:0 ref:alpha @17 | < None of choices matched input :: rule:alpha choice @17 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @17 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @17 > : < Expected '_', but found '
' :: ch:2 text @17 > > > : < Rule `num` didn't match :: ch:1 ref:num @17 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @17 > > > > : < Expected '.', but found '
' :: ch:1 text @17 > > ) ) ) ) ) ) ) : ( 0 sep ref:ws 17-18 | ( 0 rule:ws repsep 17-18 | ( 0 rep seqnc 17-17 | ( 0 seq:0 ref:spaces 17-17 | ( 0 rule:spaces repsep 17-17 | < Expected ' ', but found '
' :: rep text @17 > ) ) : ( 0 seq:1 choice 17-17 | < Rule `comment` didn't match :: ch:0 ref:comment @17 | < Sequence failed at entry 0 :: rule:comment seqnc @17 | < Expected '#', but found '
' :: seq:0 text @17 > > > : ( 0 ch:1 text 17-17 ) ) ) : ( 0 sep text 17-18 ) : ( 0 rep seqnc 18-18 | ( 0 seq:0 ref:spaces 18-18 | ( 0 rule:spaces repsep 18-18 | < Expected ' ', but found '.' :: rep text @18 > ) ) : ( 0 seq:1 choice 18-18 | < Rule `comment` didn't match :: ch:0 ref:comment @18 | < Sequence failed at entry 0 :: rule:comment seqnc @18 | < Expected '#', but found '.' :: seq:0 text @18 > > > : ( 0 ch:1 text 18-18 ) ) ) : < Expected '
', but found '.' :: sep text @18 > ) ) : ( 0 rep ref:statement 18-34 | ( 0 rule:statement choice 18-34 | < Rule `rule` didn't match :: ch:0 ref:rule @18 | < Sequence failed at entry 0 :: rule:rule seqnc @18 | < Rule `record` didn't match :: seq:0 ref:record @18 | < Sequence failed at entry 0 :: rule:record seqnc @18 | < Rule `ident` didn't match :: seq:0 ref:ident @18 | < Sequence failed at entry 0 :: rule:ident seqnc @18 | < Rule `alpha` didn't match :: seq:0 ref:alpha @18 | < None of choices matched input :: rule:alpha choice @18 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @18 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @18 > : < Expected '_', but found '.' :: ch:2 text @18 > > > > > > > > > : < Rule `fact` didn't match :: ch:1 ref:fact @18 | < Sequence failed at entry 0 :: rule:fact seqnc @18 | < Rule `record` didn't match :: seq:0 ref:record @18 | < Sequence failed at entry 0 :: rule:record seqnc @18 | < Rule `ident` didn't match :: seq:0 ref:ident @18 | < Sequence failed at entry 0 :: rule:ident seqnc @18 | < Rule `alpha` didn't match :: seq:0 ref:alpha @18 | < None of choices matched input :: rule:alpha choice @18 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @18 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @18 > : < Expected '_', but found '.' :: ch:2 text @18 > > > > > > > > > : < Rule `query` didn't match :: ch:2 ref:query @18 | < Sequence failed at entry 0 :: rule:query seqnc @18 | < Rule `record` didn't match :: seq:0 ref:record @18 | < Sequence failed at entry 0 :: rule:record seqnc @18 | < Rule `ident` didn't match :: seq:0 ref:ident @18 | < Sequence failed at entry 0 :: rule:ident seqnc @18 | < Rule `alpha` didn't match :: seq:0 ref:alpha @18 | < None of choices matched input :: rule:alpha choice @18 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @18 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @18 > : < Expected '_', but found '.' :: ch:2 text @18 > > > > > > > > > : < Rule `deleteFact` didn't match :: ch:3 ref:deleteFact @18 | < Sequence failed at entry 0 :: rule:deleteFact seqnc @18 | < Expected '-', but found '.' :: seq:0 text @18 > > > : ( 0 ch:4 ref:tableDecl 18-34 | ( 0 rule:tableDecl seqnc 18-34 | ( 0 seq:0 ref:tableKW 18-24 | ( 0 rule:tableKW text 18-24 ) ) : ( 0 seq:1 ref:ws 24-25 | ( 0 rule:ws repsep 24-25 | ( 0 rep seqnc 24-25 | ( 0 seq:0 ref:spaces 24-25 | ( 0 rule:spaces repsep 24-25 | ( 0 rep text 24-25 ) : ( 0 sep text 25-25 ) : < Expected ' ', but found 'a' :: rep text @25 > ) ) : ( 0 seq:1 choice 25-25 | < Rule `comment` didn't match :: ch:0 ref:comment @25 | < Sequence failed at entry 0 :: rule:comment seqnc @25 | < Expected '#', but found 'a' :: seq:0 text @25 > > > : ( 0 ch:1 text 25-25 ) ) ) : < Expected '
', but found 'a' :: sep text @25 > ) ) : ( 0 seq:2 ref:name 25-34 | ( 0 rule:ident seqnc 25-34 | ( 0 seq:0 ref:alpha 25-26 | ( 0 rule:alpha choice 25-26 | ( 0 ch:0 char-range 25-26 ) ) ) : ( 0 seq:1 repsep 26-34 | ( 0 rep choice 26-27 | ( 0 ch:0 ref:alphaNum 26-27 | ( 0 rule:alphaNum choice 26-27 | ( 0 ch:0 ref:alpha 26-27 | ( 0 rule:alpha choice 26-27 | ( 0 ch:0 char-range 26-27 ) ) ) ) ) ) : ( 0 sep text 27-27 ) : ( 0 rep choice 27-28 | ( 0 ch:0 ref:alphaNum 27-28 | ( 0 rule:alphaNum choice 27-28 | ( 0 ch:0 ref:alpha 27-28 | ( 0 rule:alpha choice 27-28 | ( 0 ch:0 char-range 27-28 ) ) ) ) ) ) : ( 0 sep text 28-28 ) : ( 0 rep choice 28-29 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @28 | < None of choices matched input :: rule:alphaNum choice @28 | < Rule `alpha` didn't match :: ch:0 ref:alpha @28 | < None of choices matched input :: rule:alpha choice @28 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @28 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @28 > : < Expected '_', but found '.' :: ch:2 text @28 > > > : < Rule `num` didn't match :: ch:1 ref:num @28 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @28 > > > > : ( 0 ch:1 text 28-29 ) ) : ( 0 sep text 29-29 ) : ( 0 rep choice 29-30 | ( 0 ch:0 ref:alphaNum 29-30 | ( 0 rule:alphaNum choice 29-30 | ( 0 ch:0 ref:alpha 29-30 | ( 0 rule:alpha choice 29-30 | ( 0 ch:0 char-range 29-30 ) ) ) ) ) ) : ( 0 sep text 30-30 ) : ( 0 rep choice 30-31 | ( 0 ch:0 ref:alphaNum 30-31 | ( 0 rule:alphaNum choice 30-31 | ( 0 ch:0 ref:alpha 30-31 | ( 0 rule:alpha choice 30-31 | ( 0 ch:0 char-range 30-31 ) ) ) ) ) ) : ( 0 sep text 31-31 ) : ( 0 rep choice 31-32 | ( 0 ch:0 ref:alphaNum 31-32 | ( 0 rule:alphaNum choice 31-32 | ( 0 ch:0 ref:alpha 31-32 | ( 0 rule:alpha choice 31-32 | ( 0 ch:0 char-range 31-32 ) ) ) ) ) ) : ( 0 sep text 32-32 ) : ( 0 rep choice 32-33 | ( 0 ch:0 ref:alphaNum 32-33 | ( 0 rule:alphaNum choice 32-33 | ( 0 ch:0 ref:alpha 32-33 | ( 0 rule:alpha choice 32-33 | ( 0 ch:0 char-range 32-33 ) ) ) ) ) ) : ( 0 sep text 33-33 ) : ( 0 rep choice 33-34 | ( 0 ch:0 ref:alphaNum 33-34 | ( 0 rule:alphaNum choice 33-34 | ( 0 ch:0 ref:alpha 33-34 | ( 0 rule:alpha choice 33-34 | ( 0 ch:0 char-range 33-34 ) ) ) ) ) ) : ( 0 sep text 34-34 ) : < None of choices matched input :: rep choice @34 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @34 | < None of choices matched input :: rule:alphaNum choice @34 | < Rule `alpha` didn't match :: ch:0 ref:alpha @34 | < None of choices matched input :: rule:alpha choice @34 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @34 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @34 > : < Expected '_', but found '
' :: ch:2 text @34 > > > : < Rule `num` didn't match :: ch:1 ref:num @34 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @34 > > > > : < Expected '.', but found '
' :: ch:1 text @34 > > ) ) ) ) ) ) ) : ( 0 sep ref:ws 34-35 | ( 0 rule:ws repsep 34-35 | ( 0 rep seqnc 34-34 | ( 0 seq:0 ref:spaces 34-34 | ( 0 rule:spaces repsep 34-34 | < Expected ' ', but found '
' :: rep text @34 > ) ) : ( 0 seq:1 choice 34-34 | < Rule `comment` didn't match :: ch:0 ref:comment @34 | < Sequence failed at entry 0 :: rule:comment seqnc @34 | < Expected '#', but found '
' :: seq:0 text @34 > > > : ( 0 ch:1 text 34-34 ) ) ) : ( 0 sep text 34-35 ) : ( 0 rep seqnc 35-35 | ( 0 seq:0 ref:spaces 35-35 | ( 0 rule:spaces repsep 35-35 | < Expected ' ', but found '.' :: rep text @35 > ) ) : ( 0 seq:1 choice 35-35 | < Rule `comment` didn't match :: ch:0 ref:comment @35 | < Sequence failed at entry 0 :: rule:comment seqnc @35 | < Expected '#', but found '.' :: seq:0 text @35 > > > : ( 0 ch:1 text 35-35 ) ) ) : < Expected '
', but found '.' :: sep text @35 > ) ) : ( 0 rep ref:statement 35-49 | ( 0 rule:statement choice 35-49 | < Rule `rule` didn't match :: ch:0 ref:rule @35 | < Sequence failed at entry 0 :: rule:rule seqnc @35 | < Rule `record` didn't match :: seq:0 ref:record @35 | < Sequence failed at entry 0 :: rule:record seqnc @35 | < Rule `ident` didn't match :: seq:0 ref:ident @35 | < Sequence failed at entry 0 :: rule:ident seqnc @35 | < Rule `alpha` didn't match :: seq:0 ref:alpha @35 | < None of choices matched input :: rule:alpha choice @35 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @35 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @35 > : < Expected '_', but found '.' :: ch:2 text @35 > > > > > > > > > : < Rule `fact` didn't match :: ch:1 ref:fact @35 | < Sequence failed at entry 0 :: rule:fact seqnc @35 | < Rule `record` didn't match :: seq:0 ref:record @35 | < Sequence failed at entry 0 :: rule:record seqnc @35 | < Rule `ident` didn't match :: seq:0 ref:ident @35 | < Sequence failed at entry 0 :: rule:ident seqnc @35 | < Rule `alpha` didn't match :: seq:0 ref:alpha @35 | < None of choices matched input :: rule:alpha choice @35 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @35 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @35 > : < Expected '_', but found '.' :: ch:2 text @35 > > > > > > > > > : < Rule `query` didn't match :: ch:2 ref:query @35 | < Sequence failed at entry 0 :: rule:query seqnc @35 | < Rule `record` didn't match :: seq:0 ref:record @35 | < Sequence failed at entry 0 :: rule:record seqnc @35 | < Rule `ident` didn't match :: seq:0 ref:ident @35 | < Sequence failed at entry 0 :: rule:ident seqnc @35 | < Rule `alpha` didn't match :: seq:0 ref:alpha @35 | < None of choices matched input :: rule:alpha choice @35 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @35 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @35 > : < Expected '_', but found '.' :: ch:2 text @35 > > > > > > > > > : < Rule `deleteFact` didn't match :: ch:3 ref:deleteFact @35 | < Sequence failed at entry 0 :: rule:deleteFact seqnc @35 | < Expected '-', but found '.' :: seq:0 text @35 > > > : ( 0 ch:4 ref:tableDecl 35-49 | ( 0 rule:tableDecl seqnc 35-49 | ( 0 seq:0 ref:tableKW 35-41 | ( 0 rule:tableKW text 35-41 ) ) : ( 0 seq:1 ref:ws 41-42 | ( 0 rule:ws repsep 41-42 | ( 0 rep seqnc 41-42 | ( 0 seq:0 ref:spaces 41-42 | ( 0 rule:spaces repsep 41-42 | ( 0 rep text 41-42 ) : ( 0 sep text 42-42 ) : < Expected ' ', but found 'a' :: rep text @42 > ) ) : ( 0 seq:1 choice 42-42 | < Rule `comment` didn't match :: ch:0 ref:comment @42 | < Sequence failed at entry 0 :: rule:comment seqnc @42 | < Expected '#', but found 'a' :: seq:0 text @42 > > > : ( 0 ch:1 text 42-42 ) ) ) : < Expected '
', but found 'a' :: sep text @42 > ) ) : ( 0 seq:2 ref:name 42-49 | ( 0 rule:ident seqnc 42-49 | ( 0 seq:0 ref:alpha 42-43 | ( 0 rule:alpha choice 42-43 | ( 0 ch:0 char-range 42-43 ) ) ) : ( 0 seq:1 repsep 43-49 | ( 0 rep choice 43-44 | ( 0 ch:0 ref:alphaNum 43-44 | ( 0 rule:alphaNum choice 43-44 | ( 0 ch:0 ref:alpha 43-44 | ( 0 rule:alpha choice 43-44 | ( 0 ch:0 char-range 43-44 ) ) ) ) ) ) : ( 0 sep text 44-44 ) : ( 0 rep choice 44-45 | ( 0 ch:0 ref:alphaNum 44-45 | ( 0 rule:alphaNum choice 44-45 | ( 0 ch:0 ref:alpha 44-45 | ( 0 rule:alpha choice 44-45 | ( 0 ch:0 char-range 44-45 ) ) ) ) ) ) : ( 0 sep text 45-45 ) : ( 0 rep choice 45-46 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @45 | < None of choices matched input :: rule:alphaNum choice @45 | < Rule `alpha` didn't match :: ch:0 ref:alpha @45 | < None of choices matched input :: rule:alpha choice @45 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @45 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @45 > : < Expected '_', but found '.' :: ch:2 text @45 > > > : < Rule `num` didn't match :: ch:1 ref:num @45 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @45 > > > > : ( 0 ch:1 text 45-46 ) ) : ( 0 sep text 46-46 ) : ( 0 rep choice 46-47 | ( 0 ch:0 ref:alphaNum 46-47 | ( 0 rule:alphaNum choice 46-47 | ( 0 ch:0 ref:alpha 46-47 | ( 0 rule:alpha choice 46-47 | ( 0 ch:0 char-range 46-47 ) ) ) ) ) ) : ( 0 sep text 47-47 ) : ( 0 rep choice 47-48 | ( 0 ch:0 ref:alphaNum 47-48 | ( 0 rule:alphaNum choice 47-48 | ( 0 ch:0 ref:alpha 47-48 | ( 0 rule:alpha choice 47-48 | ( 0 ch:0 char-range 47-48 ) ) ) ) ) ) : ( 0 sep text 48-48 ) : ( 0 rep choice 48-49 | ( 0 ch:0 ref:alphaNum 48-49 | ( 0 rule:alphaNum choice 48-49 | ( 0 ch:0 ref:alpha 48-49 | ( 0 rule:alpha choice 48-49 | ( 0 ch:0 char-range 48-49 ) ) ) ) ) ) : ( 0 sep text 49-49 ) : < None of choices matched input :: rep choice @49 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @49 | < None of choices matched input :: rule:alphaNum choice @49 | < Rule `alpha` didn't match :: ch:0 ref:alpha @49 | < None of choices matched input :: rule:alpha choice @49 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @49 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @49 > : < Expected '_', but found '
' :: ch:2 text @49 > > > : < Rule `num` didn't match :: ch:1 ref:num @49 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @49 > > > > : < Expected '.', but found '
' :: ch:1 text @49 > > ) ) ) ) ) ) ) : ( 0 sep ref:ws 49-50 | ( 0 rule:ws repsep 49-50 | ( 0 rep seqnc 49-49 | ( 0 seq:0 ref:spaces 49-49 | ( 0 rule:spaces repsep 49-49 | < Expected ' ', but found '
' :: rep text @49 > ) ) : ( 0 seq:1 choice 49-49 | < Rule `comment` didn't match :: ch:0 ref:comment @49 | < Sequence failed at entry 0 :: rule:comment seqnc @49 | < Expected '#', but found '
' :: seq:0 text @49 > > > : ( 0 ch:1 text 49-49 ) ) ) : ( 0 sep text 49-50 ) : ( 0 rep seqnc 50-50 | ( 0 seq:0 ref:spaces 50-50 | ( 0 rule:spaces repsep 50-50 | < Expected ' ', but found '.' :: rep text @50 > ) ) : ( 0 seq:1 choice 50-50 | < Rule `comment` didn't match :: ch:0 ref:comment @50 | < Sequence failed at entry 0 :: rule:comment seqnc @50 | < Expected '#', but found '.' :: seq:0 text @50 > > > : ( 0 ch:1 text 50-50 ) ) ) : < Expected '
', but found '.' :: sep text @50 > ) ) : ( 0 rep ref:statement 50-64 | ( 0 rule:statement choice 50-64 | < Rule `rule` didn't match :: ch:0 ref:rule @50 | < Sequence failed at entry 0 :: rule:rule seqnc @50 | < Rule `record` didn't match :: seq:0 ref:record @50 | < Sequence failed at entry 0 :: rule:record seqnc @50 | < Rule `ident` didn't match :: seq:0 ref:ident @50 | < Sequence failed at entry 0 :: rule:ident seqnc @50 | < Rule `alpha` didn't match :: seq:0 ref:alpha @50 | < None of choices matched input :: rule:alpha choice @50 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @50 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @50 > : < Expected '_', but found '.' :: ch:2 text @50 > > > > > > > > > : < Rule `fact` didn't match :: ch:1 ref:fact @50 | < Sequence failed at entry 0 :: rule:fact seqnc @50 | < Rule `record` didn't match :: seq:0 ref:record @50 | < Sequence failed at entry 0 :: rule:record seqnc @50 | < Rule `ident` didn't match :: seq:0 ref:ident @50 | < Sequence failed at entry 0 :: rule:ident seqnc @50 | < Rule `alpha` didn't match :: seq:0 ref:alpha @50 | < None of choices matched input :: rule:alpha choice @50 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @50 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @50 > : < Expected '_', but found '.' :: ch:2 text @50 > > > > > > > > > : < Rule `query` didn't match :: ch:2 ref:query @50 | < Sequence failed at entry 0 :: rule:query seqnc @50 | < Rule `record` didn't match :: seq:0 ref:record @50 | < Sequence failed at entry 0 :: rule:record seqnc @50 | < Rule `ident` didn't match :: seq:0 ref:ident @50 | < Sequence failed at entry 0 :: rule:ident seqnc @50 | < Rule `alpha` didn't match :: seq:0 ref:alpha @50 | < None of choices matched input :: rule:alpha choice @50 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @50 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @50 > : < Expected '_', but found '.' :: ch:2 text @50 > > > > > > > > > : < Rule `deleteFact` didn't match :: ch:3 ref:deleteFact @50 | < Sequence failed at entry 0 :: rule:deleteFact seqnc @50 | < Expected '-', but found '.' :: seq:0 text @50 > > > : ( 0 ch:4 ref:tableDecl 50-64 | ( 0 rule:tableDecl seqnc 50-64 | ( 0 seq:0 ref:tableKW 50-56 | ( 0 rule:tableKW text 50-56 ) ) : ( 0 seq:1 ref:ws 56-57 | ( 0 rule:ws repsep 56-57 | ( 0 rep seqnc 56-57 | ( 0 seq:0 ref:spaces 56-57 | ( 0 rule:spaces repsep 56-57 | ( 0 rep text 56-57 ) : ( 0 sep text 57-57 ) : < Expected ' ', but found 'a' :: rep text @57 > ) ) : ( 0 seq:1 choice 57-57 | < Rule `comment` didn't match :: ch:0 ref:comment @57 | < Sequence failed at entry 0 :: rule:comment seqnc @57 | < Expected '#', but found 'a' :: seq:0 text @57 > > > : ( 0 ch:1 text 57-57 ) ) ) : < Expected '
', but found 'a' :: sep text @57 > ) ) : ( 0 seq:2 ref:name 57-64 | ( 0 rule:ident seqnc 57-64 | ( 0 seq:0 ref:alpha 57-58 | ( 0 rule:alpha choice 57-58 | ( 0 ch:0 char-range 57-58 ) ) ) : ( 0 seq:1 repsep 58-64 | ( 0 rep choice 58-59 | ( 0 ch:0 ref:alphaNum 58-59 | ( 0 rule:alphaNum choice 58-59 | ( 0 ch:0 ref:alpha 58-59 | ( 0 rule:alpha choice 58-59 | ( 0 ch:0 char-range 58-59 ) ) ) ) ) ) : ( 0 sep text 59-59 ) : ( 0 rep choice 59-60 | ( 0 ch:0 ref:alphaNum 59-60 | ( 0 rule:alphaNum choice 59-60 | ( 0 ch:0 ref:alpha 59-60 | ( 0 rule:alpha choice 59-60 | ( 0 ch:0 char-range 59-60 ) ) ) ) ) ) : ( 0 sep text 60-60 ) : ( 0 rep choice 60-61 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @60 | < None of choices matched input :: rule:alphaNum choice @60 | < Rule `alpha` didn't match :: ch:0 ref:alpha @60 | < None of choices matched input :: rule:alpha choice @60 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @60 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @60 > : < Expected '_', but found '.' :: ch:2 text @60 > > > : < Rule `num` didn't match :: ch:1 ref:num @60 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @60 > > > > : ( 0 ch:1 text 60-61 ) ) : ( 0 sep text 61-61 ) : ( 0 rep choice 61-62 | ( 0 ch:0 ref:alphaNum 61-62 | ( 0 rule:alphaNum choice 61-62 | ( 0 ch:0 ref:alpha 61-62 | ( 0 rule:alpha choice 61-62 | ( 0 ch:0 char-range 61-62 ) ) ) ) ) ) : ( 0 sep text 62-62 ) : ( 0 rep choice 62-63 | ( 0 ch:0 ref:alphaNum 62-63 | ( 0 rule:alphaNum choice 62-63 | ( 0 ch:0 ref:alpha 62-63 | ( 0 rule:alpha choice 62-63 | ( 0 ch:0 char-range 62-63 ) ) ) ) ) ) : ( 0 sep text 63-63 ) : ( 0 rep choice 63-64 | ( 0 ch:0 ref:alphaNum 63-64 | ( 0 rule:alphaNum choice 63-64 | ( 0 ch:0 ref:alpha 63-64 | ( 0 rule:alpha choice 63-64 | ( 0 ch:0 char-range 63-64 ) ) ) ) ) ) : ( 0 sep text 64-64 ) : < None of choices matched input :: rep choice @64 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @64 | < None of choices matched input :: rule:alphaNum choice @64 | < Rule `alpha` didn't match :: ch:0 ref:alpha @64 | < None of choices matched input :: rule:alpha choice @64 | < Expected character in range from 'a' to 'z', but found '
' :: ch:0 char-range @64 > : < Expected character in range from 'A' to 'Z', but found '
' :: ch:1 char-range @64 > : < Expected '_', but found '
' :: ch:2 text @64 > > > : < Rule `num` didn't match :: ch:1 ref:num @64 | < Expected character in range from '0' to '9', but found '
' :: rule:num char-range @64 > > > > : < Expected '.', but found '
' :: ch:1 text @64 > > ) ) ) ) ) ) ) : ( 0 sep ref:ws 64-66 | ( 0 rule:ws repsep 64-66 | ( 0 rep seqnc 64-64 | ( 0 seq:0 ref:spaces 64-64 | ( 0 rule:spaces repsep 64-64 | < Expected ' ', but found '
' :: rep text @64 > ) ) : ( 0 seq:1 choice 64-64 | < Rule `comment` didn't match :: ch:0 ref:comment @64 | < Sequence failed at entry 0 :: rule:comment seqnc @64 | < Expected '#', but found '
' :: seq:0 text @64 > > > : ( 0 ch:1 text 64-64 ) ) ) : ( 0 sep text 64-65 ) : ( 0 rep seqnc 65-65 | ( 0 seq:0 ref:spaces 65-65 | ( 0 rule:spaces repsep 65-65 | < Expected ' ', but found '
' :: rep text @65 > ) ) : ( 0 seq:1 choice 65-65 | < Rule `comment` didn't match :: ch:0 ref:comment @65 | < Sequence failed at entry 0 :: rule:comment seqnc @65 | < Expected '#', but found '
' :: seq:0 text @65 > > > : ( 0 ch:1 text 65-65 ) ) ) : ( 0 sep text 65-66 ) : ( 0 rep seqnc 66-66 | ( 0 seq:0 ref:spaces 66-66 | ( 0 rule:spaces repsep 66-66 | < Expected ' ', but found 'h' :: rep text @66 > ) ) : ( 0 seq:1 choice 66-66 | < Rule `comment` didn't match :: ch:0 ref:comment @66 | < Sequence failed at entry 0 :: rule:comment seqnc @66 | < Expected '#', but found 'h' :: seq:0 text @66 > > > : ( 0 ch:1 text 66-66 ) ) ) : < Expected '
', but found 'h' :: sep text @66 > ) ) : ( 0 rep ref:statement 66-288 | ( 0 rule:statement choice 66-288 | ( 0 ch:0 ref:rule 66-288 | ( 0 rule:rule seqnc 66-288 | ( 0 seq:0 ref:record 66-109 | ( 0 rule:record seqnc 66-109 | ( 0 seq:0 ref:ident 66-76 | ( 0 rule:ident seqnc 66-76 | ( 0 seq:0 ref:alpha 66-67 | ( 0 rule:alpha choice 66-67 | ( 0 ch:0 char-range 66-67 ) ) ) : ( 0 seq:1 repsep 67-76 | ( 0 rep choice 67-68 | ( 0 ch:0 ref:alphaNum 67-68 | ( 0 rule:alphaNum choice 67-68 | ( 0 ch:0 ref:alpha 67-68 | ( 0 rule:alpha choice 67-68 | ( 0 ch:0 char-range 67-68 ) ) ) ) ) ) : ( 0 sep text 68-68 ) : ( 0 rep choice 68-69 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @68 | < None of choices matched input :: rule:alphaNum choice @68 | < Rule `alpha` didn't match :: ch:0 ref:alpha @68 | < None of choices matched input :: rule:alpha choice @68 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @68 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @68 > : < Expected '_', but found '.' :: ch:2 text @68 > > > : < Rule `num` didn't match :: ch:1 ref:num @68 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @68 > > > > : ( 0 ch:1 text 68-69 ) ) : ( 0 sep text 69-69 ) : ( 0 rep choice 69-70 | ( 0 ch:0 ref:alphaNum 69-70 | ( 0 rule:alphaNum choice 69-70 | ( 0 ch:0 ref:alpha 69-70 | ( 0 rule:alpha choice 69-70 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @69 > : ( 0 ch:1 char-range 69-70 ) ) ) ) ) ) : ( 0 sep text 70-70 ) : ( 0 rep choice 70-71 | ( 0 ch:0 ref:alphaNum 70-71 | ( 0 rule:alphaNum choice 70-71 | ( 0 ch:0 ref:alpha 70-71 | ( 0 rule:alpha choice 70-71 | ( 0 ch:0 char-range 70-71 ) ) ) ) ) ) : ( 0 sep text 71-71 ) : ( 0 rep choice 71-72 | ( 0 ch:0 ref:alphaNum 71-72 | ( 0 rule:alphaNum choice 71-72 | ( 0 ch:0 ref:alpha 71-72 | ( 0 rule:alpha choice 71-72 | ( 0 ch:0 char-range 71-72 ) ) ) ) ) ) : ( 0 sep text 72-72 ) : ( 0 rep choice 72-73 | ( 0 ch:0 ref:alphaNum 72-73 | ( 0 rule:alphaNum choice 72-73 | ( 0 ch:0 ref:alpha 72-73 | ( 0 rule:alpha choice 72-73 | ( 0 ch:0 char-range 72-73 ) ) ) ) ) ) : ( 0 sep text 73-73 ) : ( 0 rep choice 73-74 | ( 0 ch:0 ref:alphaNum 73-74 | ( 0 rule:alphaNum choice 73-74 | ( 0 ch:0 ref:alpha 73-74 | ( 0 rule:alpha choice 73-74 | ( 0 ch:0 char-range 73-74 ) ) ) ) ) ) : ( 0 sep text 74-74 ) : ( 0 rep choice 74-75 | ( 0 ch:0 ref:alphaNum 74-75 | ( 0 rule:alphaNum choice 74-75 | ( 0 ch:0 ref:alpha 74-75 | ( 0 rule:alpha choice 74-75 | ( 0 ch:0 char-range 74-75 ) ) ) ) ) ) : ( 0 sep text 75-75 ) : ( 0 rep choice 75-76 | ( 0 ch:0 ref:alphaNum 75-76 | ( 0 rule:alphaNum choice 75-76 | ( 0 ch:0 ref:alpha 75-76 | ( 0 rule:alpha choice 75-76 | ( 0 ch:0 char-range 75-76 ) ) ) ) ) ) : ( 0 sep text 76-76 ) : < None of choices matched input :: rep choice @76 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @76 | < None of choices matched input :: rule:alphaNum choice @76 | < Rule `alpha` didn't match :: ch:0 ref:alpha @76 | < None of choices matched input :: rule:alpha choice @76 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @76 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @76 > : < Expected '_', but found '{' :: ch:2 text @76 > > > : < Rule `num` didn't match :: ch:1 ref:num @76 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @76 > > > > : < Expected '.', but found '{' :: ch:1 text @76 > > ) ) ) : ( 0 seq:1 text 76-77 ) : ( 0 seq:2 ref:ws 77-77 | ( 0 rule:ws repsep 77-77 | ( 0 rep seqnc 77-77 | ( 0 seq:0 ref:spaces 77-77 | ( 0 rule:spaces repsep 77-77 | < Expected ' ', but found 't' :: rep text @77 > ) ) : ( 0 seq:1 choice 77-77 | < Rule `comment` didn't match :: ch:0 ref:comment @77 | < Sequence failed at entry 0 :: rule:comment seqnc @77 | < Expected '#', but found 't' :: seq:0 text @77 > > > : ( 0 ch:1 text 77-77 ) ) ) : < Expected '
', but found 't' :: sep text @77 > ) ) : ( 0 seq:3 ref:recordAttrs 77-108 | ( 0 rule:recordAttrs repsep 77-108 | ( 0 rep choice 77-84 | ( 0 ch:0 ref:recordKeyValue 77-84 | ( 0 rule:recordKeyValue seqnc 77-84 | ( 0 seq:0 ref:ident 77-81 | ( 0 rule:ident seqnc 77-81 | ( 0 seq:0 ref:alpha 77-78 | ( 0 rule:alpha choice 77-78 | ( 0 ch:0 char-range 77-78 ) ) ) : ( 0 seq:1 repsep 78-81 | ( 0 rep choice 78-79 | ( 0 ch:0 ref:alphaNum 78-79 | ( 0 rule:alphaNum choice 78-79 | ( 0 ch:0 ref:alpha 78-79 | ( 0 rule:alpha choice 78-79 | ( 0 ch:0 char-range 78-79 ) ) ) ) ) ) : ( 0 sep text 79-79 ) : ( 0 rep choice 79-80 | ( 0 ch:0 ref:alphaNum 79-80 | ( 0 rule:alphaNum choice 79-80 | ( 0 ch:0 ref:alpha 79-80 | ( 0 rule:alpha choice 79-80 | ( 0 ch:0 char-range 79-80 ) ) ) ) ) ) : ( 0 sep text 80-80 ) : ( 0 rep choice 80-81 | ( 0 ch:0 ref:alphaNum 80-81 | ( 0 rule:alphaNum choice 80-81 | ( 0 ch:0 ref:alpha 80-81 | ( 0 rule:alpha choice 80-81 | ( 0 ch:0 char-range 80-81 ) ) ) ) ) ) : ( 0 sep text 81-81 ) : < None of choices matched input :: rep choice @81 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @81 | < None of choices matched input :: rule:alphaNum choice @81 | < Rule `alpha` didn't match :: ch:0 ref:alpha @81 | < None of choices matched input :: rule:alpha choice @81 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @81 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @81 > : < Expected '_', but found ':' :: ch:2 text @81 > > > : < Rule `num` didn't match :: ch:1 ref:num @81 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @81 > > > > : < Expected '.', but found ':' :: ch:1 text @81 > > ) ) ) : ( 0 seq:1 text 81-82 ) : ( 0 seq:2 ref:ws 82-83 | ( 0 rule:ws repsep 82-83 | ( 0 rep seqnc 82-83 | ( 0 seq:0 ref:spaces 82-83 | ( 0 rule:spaces repsep 82-83 | ( 0 rep text 82-83 ) : ( 0 sep text 83-83 ) : < Expected ' ', but found 'T' :: rep text @83 > ) ) : ( 0 seq:1 choice 83-83 | < Rule `comment` didn't match :: ch:0 ref:comment @83 | < Sequence failed at entry 0 :: rule:comment seqnc @83 | < Expected '#', but found 'T' :: seq:0 text @83 > > > : ( 0 ch:1 text 83-83 ) ) ) : < Expected '
', but found 'T' :: sep text @83 > ) ) : ( 0 seq:3 ref:term 83-84 | ( 0 rule:term choice 83-84 | < Rule `record` didn't match :: ch:0 ref:record @83 | < Sequence failed at entry 1 :: rule:record seqnc @84 | ( 0 seq:0 ref:ident 83-84 | ( 0 rule:ident seqnc 83-84 | ( 0 seq:0 ref:alpha 83-84 | ( 0 rule:alpha choice 83-84 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @83 > : ( 0 ch:1 char-range 83-84 ) ) ) : ( 0 seq:1 repsep 84-84 | < None of choices matched input :: rep choice @84 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @84 | < None of choices matched input :: rule:alphaNum choice @84 | < Rule `alpha` didn't match :: ch:0 ref:alpha @84 | < None of choices matched input :: rule:alpha choice @84 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @84 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @84 > : < Expected '_', but found ',' :: ch:2 text @84 > > > : < Rule `num` didn't match :: ch:1 ref:num @84 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @84 > > > > : < Expected '.', but found ',' :: ch:1 text @84 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @84 > > > : < Rule `int` didn't match :: ch:1 ref:int @83 | < Sequence failed at entry 1 :: rule:int seqnc @83 | ( 0 seq:0 choice 83-83 | < Expected '-', but found 'T' :: ch:0 text @83 > : ( 0 ch:1 text 83-83 ) ) : < Rule `num` didn't match :: seq:1 ref:first @83 | < Expected character in range from '0' to '9', but found 'T' :: rule:num char-range @83 > > > > : ( 0 ch:2 ref:var 83-84 | ( 0 rule:var seqnc 83-84 | ( 0 seq:0 char-range 83-84 ) : ( 0 seq:1 repsep 84-84 | < None of choices matched input :: rep choice @84 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @84 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @84 | < None of choices matched input :: rule:alphaNum choice @84 | < Rule `alpha` didn't match :: ch:0 ref:alpha @84 | < None of choices matched input :: rule:alpha choice @84 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @84 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @84 > : < Expected '_', but found ',' :: ch:2 text @84 > > > : < Rule `num` didn't match :: ch:1 ref:num @84 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @84 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 84-86 | ( 0 rule:commaSpace seqnc 84-86 | ( 0 seq:0 text 84-85 ) : ( 0 seq:1 ref:ws 85-86 | ( 0 rule:ws repsep 85-86 | ( 0 rep seqnc 85-86 | ( 0 seq:0 ref:spaces 85-86 | ( 0 rule:spaces repsep 85-86 | ( 0 rep text 85-86 ) : ( 0 sep text 86-86 ) : < Expected ' ', but found 's' :: rep text @86 > ) ) : ( 0 seq:1 choice 86-86 | < Rule `comment` didn't match :: ch:0 ref:comment @86 | < Sequence failed at entry 0 :: rule:comment seqnc @86 | < Expected '#', but found 's' :: seq:0 text @86 > > > : ( 0 ch:1 text 86-86 ) ) ) : < Expected '
', but found 's' :: sep text @86 > ) ) ) ) : ( 0 rep choice 86-93 | ( 0 ch:0 ref:recordKeyValue 86-93 | ( 0 rule:recordKeyValue seqnc 86-93 | ( 0 seq:0 ref:ident 86-90 | ( 0 rule:ident seqnc 86-90 | ( 0 seq:0 ref:alpha 86-87 | ( 0 rule:alpha choice 86-87 | ( 0 ch:0 char-range 86-87 ) ) ) : ( 0 seq:1 repsep 87-90 | ( 0 rep choice 87-88 | ( 0 ch:0 ref:alphaNum 87-88 | ( 0 rule:alphaNum choice 87-88 | ( 0 ch:0 ref:alpha 87-88 | ( 0 rule:alpha choice 87-88 | ( 0 ch:0 char-range 87-88 ) ) ) ) ) ) : ( 0 sep text 88-88 ) : ( 0 rep choice 88-89 | ( 0 ch:0 ref:alphaNum 88-89 | ( 0 rule:alphaNum choice 88-89 | ( 0 ch:0 ref:alpha 88-89 | ( 0 rule:alpha choice 88-89 | ( 0 ch:0 char-range 88-89 ) ) ) ) ) ) : ( 0 sep text 89-89 ) : ( 0 rep choice 89-90 | ( 0 ch:0 ref:alphaNum 89-90 | ( 0 rule:alphaNum choice 89-90 | ( 0 ch:0 ref:alpha 89-90 | ( 0 rule:alpha choice 89-90 | ( 0 ch:0 char-range 89-90 ) ) ) ) ) ) : ( 0 sep text 90-90 ) : < None of choices matched input :: rep choice @90 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @90 | < None of choices matched input :: rule:alphaNum choice @90 | < Rule `alpha` didn't match :: ch:0 ref:alpha @90 | < None of choices matched input :: rule:alpha choice @90 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @90 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @90 > : < Expected '_', but found ':' :: ch:2 text @90 > > > : < Rule `num` didn't match :: ch:1 ref:num @90 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @90 > > > > : < Expected '.', but found ':' :: ch:1 text @90 > > ) ) ) : ( 0 seq:1 text 90-91 ) : ( 0 seq:2 ref:ws 91-92 | ( 0 rule:ws repsep 91-92 | ( 0 rep seqnc 91-92 | ( 0 seq:0 ref:spaces 91-92 | ( 0 rule:spaces repsep 91-92 | ( 0 rep text 91-92 ) : ( 0 sep text 92-92 ) : < Expected ' ', but found 'S' :: rep text @92 > ) ) : ( 0 seq:1 choice 92-92 | < Rule `comment` didn't match :: ch:0 ref:comment @92 | < Sequence failed at entry 0 :: rule:comment seqnc @92 | < Expected '#', but found 'S' :: seq:0 text @92 > > > : ( 0 ch:1 text 92-92 ) ) ) : < Expected '
', but found 'S' :: sep text @92 > ) ) : ( 0 seq:3 ref:term 92-93 | ( 0 rule:term choice 92-93 | < Rule `record` didn't match :: ch:0 ref:record @92 | < Sequence failed at entry 1 :: rule:record seqnc @93 | ( 0 seq:0 ref:ident 92-93 | ( 0 rule:ident seqnc 92-93 | ( 0 seq:0 ref:alpha 92-93 | ( 0 rule:alpha choice 92-93 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @92 > : ( 0 ch:1 char-range 92-93 ) ) ) : ( 0 seq:1 repsep 93-93 | < None of choices matched input :: rep choice @93 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @93 | < None of choices matched input :: rule:alphaNum choice @93 | < Rule `alpha` didn't match :: ch:0 ref:alpha @93 | < None of choices matched input :: rule:alpha choice @93 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @93 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @93 > : < Expected '_', but found ',' :: ch:2 text @93 > > > : < Rule `num` didn't match :: ch:1 ref:num @93 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @93 > > > > : < Expected '.', but found ',' :: ch:1 text @93 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @93 > > > : < Rule `int` didn't match :: ch:1 ref:int @92 | < Sequence failed at entry 1 :: rule:int seqnc @92 | ( 0 seq:0 choice 92-92 | < Expected '-', but found 'S' :: ch:0 text @92 > : ( 0 ch:1 text 92-92 ) ) : < Rule `num` didn't match :: seq:1 ref:first @92 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @92 > > > > : ( 0 ch:2 ref:var 92-93 | ( 0 rule:var seqnc 92-93 | ( 0 seq:0 char-range 92-93 ) : ( 0 seq:1 repsep 93-93 | < None of choices matched input :: rep choice @93 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @93 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @93 | < None of choices matched input :: rule:alphaNum choice @93 | < Rule `alpha` didn't match :: ch:0 ref:alpha @93 | < None of choices matched input :: rule:alpha choice @93 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @93 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @93 > : < Expected '_', but found ',' :: ch:2 text @93 > > > : < Rule `num` didn't match :: ch:1 ref:num @93 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @93 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 93-95 | ( 0 rule:commaSpace seqnc 93-95 | ( 0 seq:0 text 93-94 ) : ( 0 seq:1 ref:ws 94-95 | ( 0 rule:ws repsep 94-95 | ( 0 rep seqnc 94-95 | ( 0 seq:0 ref:spaces 94-95 | ( 0 rule:spaces repsep 94-95 | ( 0 rep text 94-95 ) : ( 0 sep text 95-95 ) : < Expected ' ', but found 'h' :: rep text @95 > ) ) : ( 0 seq:1 choice 95-95 | < Rule `comment` didn't match :: ch:0 ref:comment @95 | < Sequence failed at entry 0 :: rule:comment seqnc @95 | < Expected '#', but found 'h' :: seq:0 text @95 > > > : ( 0 ch:1 text 95-95 ) ) ) : < Expected '
', but found 'h' :: sep text @95 > ) ) ) ) : ( 0 rep choice 95-108 | ( 0 ch:0 ref:recordKeyValue 95-108 | ( 0 rule:recordKeyValue seqnc 95-108 | ( 0 seq:0 ref:ident 95-104 | ( 0 rule:ident seqnc 95-104 | ( 0 seq:0 ref:alpha 95-96 | ( 0 rule:alpha choice 95-96 | ( 0 ch:0 char-range 95-96 ) ) ) : ( 0 seq:1 repsep 96-104 | ( 0 rep choice 96-97 | ( 0 ch:0 ref:alphaNum 96-97 | ( 0 rule:alphaNum choice 96-97 | ( 0 ch:0 ref:alpha 96-97 | ( 0 rule:alpha choice 96-97 | ( 0 ch:0 char-range 96-97 ) ) ) ) ) ) : ( 0 sep text 97-97 ) : ( 0 rep choice 97-98 | ( 0 ch:0 ref:alphaNum 97-98 | ( 0 rule:alphaNum choice 97-98 | ( 0 ch:0 ref:alpha 97-98 | ( 0 rule:alpha choice 97-98 | ( 0 ch:0 char-range 97-98 ) ) ) ) ) ) : ( 0 sep text 98-98 ) : ( 0 rep choice 98-99 | ( 0 ch:0 ref:alphaNum 98-99 | ( 0 rule:alphaNum choice 98-99 | ( 0 ch:0 ref:alpha 98-99 | ( 0 rule:alpha choice 98-99 | ( 0 ch:0 char-range 98-99 ) ) ) ) ) ) : ( 0 sep text 99-99 ) : ( 0 rep choice 99-100 | ( 0 ch:0 ref:alphaNum 99-100 | ( 0 rule:alphaNum choice 99-100 | ( 0 ch:0 ref:alpha 99-100 | ( 0 rule:alpha choice 99-100 | ( 0 ch:0 char-range 99-100 ) ) ) ) ) ) : ( 0 sep text 100-100 ) : ( 0 rep choice 100-101 | ( 0 ch:0 ref:alphaNum 100-101 | ( 0 rule:alphaNum choice 100-101 | ( 0 ch:0 ref:alpha 100-101 | ( 0 rule:alpha choice 100-101 | ( 0 ch:0 char-range 100-101 ) ) ) ) ) ) : ( 0 sep text 101-101 ) : ( 0 rep choice 101-102 | ( 0 ch:0 ref:alphaNum 101-102 | ( 0 rule:alphaNum choice 101-102 | ( 0 ch:0 ref:alpha 101-102 | ( 0 rule:alpha choice 101-102 | ( 0 ch:0 char-range 101-102 ) ) ) ) ) ) : ( 0 sep text 102-102 ) : ( 0 rep choice 102-103 | ( 0 ch:0 ref:alphaNum 102-103 | ( 0 rule:alphaNum choice 102-103 | ( 0 ch:0 ref:alpha 102-103 | ( 0 rule:alpha choice 102-103 | ( 0 ch:0 char-range 102-103 ) ) ) ) ) ) : ( 0 sep text 103-103 ) : ( 0 rep choice 103-104 | ( 0 ch:0 ref:alphaNum 103-104 | ( 0 rule:alphaNum choice 103-104 | ( 0 ch:0 ref:alpha 103-104 | ( 0 rule:alpha choice 103-104 | ( 0 ch:0 char-range 103-104 ) ) ) ) ) ) : ( 0 sep text 104-104 ) : < None of choices matched input :: rep choice @104 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @104 | < None of choices matched input :: rule:alphaNum choice @104 | < Rule `alpha` didn't match :: ch:0 ref:alpha @104 | < None of choices matched input :: rule:alpha choice @104 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @104 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @104 > : < Expected '_', but found ':' :: ch:2 text @104 > > > : < Rule `num` didn't match :: ch:1 ref:num @104 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @104 > > > > : < Expected '.', but found ':' :: ch:1 text @104 > > ) ) ) : ( 0 seq:1 text 104-105 ) : ( 0 seq:2 ref:ws 105-106 | ( 0 rule:ws repsep 105-106 | ( 0 rep seqnc 105-106 | ( 0 seq:0 ref:spaces 105-106 | ( 0 rule:spaces repsep 105-106 | ( 0 rep text 105-106 ) : ( 0 sep text 106-106 ) : < Expected ' ', but found 'H' :: rep text @106 > ) ) : ( 0 seq:1 choice 106-106 | < Rule `comment` didn't match :: ch:0 ref:comment @106 | < Sequence failed at entry 0 :: rule:comment seqnc @106 | < Expected '#', but found 'H' :: seq:0 text @106 > > > : ( 0 ch:1 text 106-106 ) ) ) : < Expected '
', but found 'H' :: sep text @106 > ) ) : ( 0 seq:3 ref:term 106-108 | ( 0 rule:term choice 106-108 | < Rule `record` didn't match :: ch:0 ref:record @106 | < Sequence failed at entry 1 :: rule:record seqnc @108 | ( 0 seq:0 ref:ident 106-108 | ( 0 rule:ident seqnc 106-108 | ( 0 seq:0 ref:alpha 106-107 | ( 0 rule:alpha choice 106-107 | < Expected character in range from 'a' to 'z', but found 'H' :: ch:0 char-range @106 > : ( 0 ch:1 char-range 106-107 ) ) ) : ( 0 seq:1 repsep 107-108 | ( 0 rep choice 107-108 | ( 0 ch:0 ref:alphaNum 107-108 | ( 0 rule:alphaNum choice 107-108 | ( 0 ch:0 ref:alpha 107-108 | ( 0 rule:alpha choice 107-108 | < Expected character in range from 'a' to 'z', but found 'H' :: ch:0 char-range @107 > : ( 0 ch:1 char-range 107-108 ) ) ) ) ) ) : ( 0 sep text 108-108 ) : < None of choices matched input :: rep choice @108 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @108 | < None of choices matched input :: rule:alphaNum choice @108 | < Rule `alpha` didn't match :: ch:0 ref:alpha @108 | < None of choices matched input :: rule:alpha choice @108 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @108 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @108 > : < Expected '_', but found '}' :: ch:2 text @108 > > > : < Rule `num` didn't match :: ch:1 ref:num @108 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @108 > > > > : < Expected '.', but found '}' :: ch:1 text @108 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @108 > > > : < Rule `int` didn't match :: ch:1 ref:int @106 | < Sequence failed at entry 1 :: rule:int seqnc @106 | ( 0 seq:0 choice 106-106 | < Expected '-', but found 'H' :: ch:0 text @106 > : ( 0 ch:1 text 106-106 ) ) : < Rule `num` didn't match :: seq:1 ref:first @106 | < Expected character in range from '0' to '9', but found 'H' :: rule:num char-range @106 > > > > : ( 0 ch:2 ref:var 106-108 | ( 0 rule:var seqnc 106-108 | ( 0 seq:0 char-range 106-107 ) : ( 0 seq:1 repsep 107-108 | ( 0 rep choice 107-108 | ( 0 ch:0 char-range 107-108 ) ) : ( 0 sep text 108-108 ) : < None of choices matched input :: rep choice @108 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @108 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @108 | < None of choices matched input :: rule:alphaNum choice @108 | < Rule `alpha` didn't match :: ch:0 ref:alpha @108 | < None of choices matched input :: rule:alpha choice @108 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @108 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @108 > : < Expected '_', but found '}' :: ch:2 text @108 > > > : < Rule `num` didn't match :: ch:1 ref:num @108 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @108 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @108 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @108 | < Expected ',', but found '}' :: seq:0 text @108 > > > ) ) : ( 0 seq:4 ref:ws 108-108 | ( 0 rule:ws repsep 108-108 | ( 0 rep seqnc 108-108 | ( 0 seq:0 ref:spaces 108-108 | ( 0 rule:spaces repsep 108-108 | < Expected ' ', but found '}' :: rep text @108 > ) ) : ( 0 seq:1 choice 108-108 | < Rule `comment` didn't match :: ch:0 ref:comment @108 | < Sequence failed at entry 0 :: rule:comment seqnc @108 | < Expected '#', but found '}' :: seq:0 text @108 > > > : ( 0 ch:1 text 108-108 ) ) ) : < Expected '
', but found '}' :: sep text @108 > ) ) : ( 0 seq:5 text 108-109 ) ) ) : ( 0 seq:1 ref:ws 109-110 | ( 0 rule:ws repsep 109-110 | ( 0 rep seqnc 109-110 | ( 0 seq:0 ref:spaces 109-110 | ( 0 rule:spaces repsep 109-110 | ( 0 rep text 109-110 ) : ( 0 sep text 110-110 ) : < Expected ' ', but found ':' :: rep text @110 > ) ) : ( 0 seq:1 choice 110-110 | < Rule `comment` didn't match :: ch:0 ref:comment @110 | < Sequence failed at entry 0 :: rule:comment seqnc @110 | < Expected '#', but found ':' :: seq:0 text @110 > > > : ( 0 ch:1 text 110-110 ) ) ) : < Expected '
', but found ':' :: sep text @110 > ) ) : ( 0 seq:2 text 110-112 ) : ( 0 seq:3 ref:ws 112-115 | ( 0 rule:ws repsep 112-115 | ( 0 rep seqnc 112-112 | ( 0 seq:0 ref:spaces 112-112 | ( 0 rule:spaces repsep 112-112 | < Expected ' ', but found '
' :: rep text @112 > ) ) : ( 0 seq:1 choice 112-112 | < Rule `comment` didn't match :: ch:0 ref:comment @112 | < Sequence failed at entry 0 :: rule:comment seqnc @112 | < Expected '#', but found '
' :: seq:0 text @112 > > > : ( 0 ch:1 text 112-112 ) ) ) : ( 0 sep text 112-113 ) : ( 0 rep seqnc 113-115 | ( 0 seq:0 ref:spaces 113-115 | ( 0 rule:spaces repsep 113-115 | ( 0 rep text 113-114 ) : ( 0 sep text 114-114 ) : ( 0 rep text 114-115 ) : ( 0 sep text 115-115 ) : < Expected ' ', but found 'h' :: rep text @115 > ) ) : ( 0 seq:1 choice 115-115 | < Rule `comment` didn't match :: ch:0 ref:comment @115 | < Sequence failed at entry 0 :: rule:comment seqnc @115 | < Expected '#', but found 'h' :: seq:0 text @115 > > > : ( 0 ch:1 text 115-115 ) ) ) : < Expected '
', but found 'h' :: sep text @115 > ) ) : ( 0 seq:4 repsep 115-287 | ( 0 rep ref:disjunct 115-156 | ( 0 rule:disjunct repsep 115-156 | ( 0 rep ref:conjunct 115-155 | ( 0 rule:conjunct choice 115-155 | ( 0 ch:0 ref:record 115-155 | ( 0 rule:record seqnc 115-155 | ( 0 seq:0 ref:ident 115-123 | ( 0 rule:ident seqnc 115-123 | ( 0 seq:0 ref:alpha 115-116 | ( 0 rule:alpha choice 115-116 | ( 0 ch:0 char-range 115-116 ) ) ) : ( 0 seq:1 repsep 116-123 | ( 0 rep choice 116-117 | ( 0 ch:0 ref:alphaNum 116-117 | ( 0 rule:alphaNum choice 116-117 | ( 0 ch:0 ref:alpha 116-117 | ( 0 rule:alpha choice 116-117 | ( 0 ch:0 char-range 116-117 ) ) ) ) ) ) : ( 0 sep text 117-117 ) : ( 0 rep choice 117-118 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @117 | < None of choices matched input :: rule:alphaNum choice @117 | < Rule `alpha` didn't match :: ch:0 ref:alpha @117 | < None of choices matched input :: rule:alpha choice @117 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @117 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @117 > : < Expected '_', but found '.' :: ch:2 text @117 > > > : < Rule `num` didn't match :: ch:1 ref:num @117 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @117 > > > > : ( 0 ch:1 text 117-118 ) ) : ( 0 sep text 118-118 ) : ( 0 rep choice 118-119 | ( 0 ch:0 ref:alphaNum 118-119 | ( 0 rule:alphaNum choice 118-119 | ( 0 ch:0 ref:alpha 118-119 | ( 0 rule:alpha choice 118-119 | ( 0 ch:0 char-range 118-119 ) ) ) ) ) ) : ( 0 sep text 119-119 ) : ( 0 rep choice 119-120 | ( 0 ch:0 ref:alphaNum 119-120 | ( 0 rule:alphaNum choice 119-120 | ( 0 ch:0 ref:alpha 119-120 | ( 0 rule:alpha choice 119-120 | ( 0 ch:0 char-range 119-120 ) ) ) ) ) ) : ( 0 sep text 120-120 ) : ( 0 rep choice 120-121 | ( 0 ch:0 ref:alphaNum 120-121 | ( 0 rule:alphaNum choice 120-121 | ( 0 ch:0 ref:alpha 120-121 | ( 0 rule:alpha choice 120-121 | ( 0 ch:0 char-range 120-121 ) ) ) ) ) ) : ( 0 sep text 121-121 ) : ( 0 rep choice 121-122 | ( 0 ch:0 ref:alphaNum 121-122 | ( 0 rule:alphaNum choice 121-122 | ( 0 ch:0 ref:alpha 121-122 | ( 0 rule:alpha choice 121-122 | ( 0 ch:0 char-range 121-122 ) ) ) ) ) ) : ( 0 sep text 122-122 ) : ( 0 rep choice 122-123 | ( 0 ch:0 ref:alphaNum 122-123 | ( 0 rule:alphaNum choice 122-123 | ( 0 ch:0 ref:alpha 122-123 | ( 0 rule:alpha choice 122-123 | ( 0 ch:0 char-range 122-123 ) ) ) ) ) ) : ( 0 sep text 123-123 ) : < None of choices matched input :: rep choice @123 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @123 | < None of choices matched input :: rule:alphaNum choice @123 | < Rule `alpha` didn't match :: ch:0 ref:alpha @123 | < None of choices matched input :: rule:alpha choice @123 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @123 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @123 > : < Expected '_', but found '{' :: ch:2 text @123 > > > : < Rule `num` didn't match :: ch:1 ref:num @123 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @123 > > > > : < Expected '.', but found '{' :: ch:1 text @123 > > ) ) ) : ( 0 seq:1 text 123-124 ) : ( 0 seq:2 ref:ws 124-124 | ( 0 rule:ws repsep 124-124 | ( 0 rep seqnc 124-124 | ( 0 seq:0 ref:spaces 124-124 | ( 0 rule:spaces repsep 124-124 | < Expected ' ', but found 't' :: rep text @124 > ) ) : ( 0 seq:1 choice 124-124 | < Rule `comment` didn't match :: ch:0 ref:comment @124 | < Sequence failed at entry 0 :: rule:comment seqnc @124 | < Expected '#', but found 't' :: seq:0 text @124 > > > : ( 0 ch:1 text 124-124 ) ) ) : < Expected '
', but found 't' :: sep text @124 > ) ) : ( 0 seq:3 ref:recordAttrs 124-154 | ( 0 rule:recordAttrs repsep 124-154 | ( 0 rep choice 124-131 | ( 0 ch:0 ref:recordKeyValue 124-131 | ( 0 rule:recordKeyValue seqnc 124-131 | ( 0 seq:0 ref:ident 124-128 | ( 0 rule:ident seqnc 124-128 | ( 0 seq:0 ref:alpha 124-125 | ( 0 rule:alpha choice 124-125 | ( 0 ch:0 char-range 124-125 ) ) ) : ( 0 seq:1 repsep 125-128 | ( 0 rep choice 125-126 | ( 0 ch:0 ref:alphaNum 125-126 | ( 0 rule:alphaNum choice 125-126 | ( 0 ch:0 ref:alpha 125-126 | ( 0 rule:alpha choice 125-126 | ( 0 ch:0 char-range 125-126 ) ) ) ) ) ) : ( 0 sep text 126-126 ) : ( 0 rep choice 126-127 | ( 0 ch:0 ref:alphaNum 126-127 | ( 0 rule:alphaNum choice 126-127 | ( 0 ch:0 ref:alpha 126-127 | ( 0 rule:alpha choice 126-127 | ( 0 ch:0 char-range 126-127 ) ) ) ) ) ) : ( 0 sep text 127-127 ) : ( 0 rep choice 127-128 | ( 0 ch:0 ref:alphaNum 127-128 | ( 0 rule:alphaNum choice 127-128 | ( 0 ch:0 ref:alpha 127-128 | ( 0 rule:alpha choice 127-128 | ( 0 ch:0 char-range 127-128 ) ) ) ) ) ) : ( 0 sep text 128-128 ) : < None of choices matched input :: rep choice @128 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @128 | < None of choices matched input :: rule:alphaNum choice @128 | < Rule `alpha` didn't match :: ch:0 ref:alpha @128 | < None of choices matched input :: rule:alpha choice @128 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @128 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @128 > : < Expected '_', but found ':' :: ch:2 text @128 > > > : < Rule `num` didn't match :: ch:1 ref:num @128 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @128 > > > > : < Expected '.', but found ':' :: ch:1 text @128 > > ) ) ) : ( 0 seq:1 text 128-129 ) : ( 0 seq:2 ref:ws 129-130 | ( 0 rule:ws repsep 129-130 | ( 0 rep seqnc 129-130 | ( 0 seq:0 ref:spaces 129-130 | ( 0 rule:spaces repsep 129-130 | ( 0 rep text 129-130 ) : ( 0 sep text 130-130 ) : < Expected ' ', but found 'T' :: rep text @130 > ) ) : ( 0 seq:1 choice 130-130 | < Rule `comment` didn't match :: ch:0 ref:comment @130 | < Sequence failed at entry 0 :: rule:comment seqnc @130 | < Expected '#', but found 'T' :: seq:0 text @130 > > > : ( 0 ch:1 text 130-130 ) ) ) : < Expected '
', but found 'T' :: sep text @130 > ) ) : ( 0 seq:3 ref:term 130-131 | ( 0 rule:term choice 130-131 | < Rule `record` didn't match :: ch:0 ref:record @130 | < Sequence failed at entry 1 :: rule:record seqnc @131 | ( 0 seq:0 ref:ident 130-131 | ( 0 rule:ident seqnc 130-131 | ( 0 seq:0 ref:alpha 130-131 | ( 0 rule:alpha choice 130-131 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @130 > : ( 0 ch:1 char-range 130-131 ) ) ) : ( 0 seq:1 repsep 131-131 | < None of choices matched input :: rep choice @131 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @131 | < None of choices matched input :: rule:alphaNum choice @131 | < Rule `alpha` didn't match :: ch:0 ref:alpha @131 | < None of choices matched input :: rule:alpha choice @131 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @131 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @131 > : < Expected '_', but found ',' :: ch:2 text @131 > > > : < Rule `num` didn't match :: ch:1 ref:num @131 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @131 > > > > : < Expected '.', but found ',' :: ch:1 text @131 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @131 > > > : < Rule `int` didn't match :: ch:1 ref:int @130 | < Sequence failed at entry 1 :: rule:int seqnc @130 | ( 0 seq:0 choice 130-130 | < Expected '-', but found 'T' :: ch:0 text @130 > : ( 0 ch:1 text 130-130 ) ) : < Rule `num` didn't match :: seq:1 ref:first @130 | < Expected character in range from '0' to '9', but found 'T' :: rule:num char-range @130 > > > > : ( 0 ch:2 ref:var 130-131 | ( 0 rule:var seqnc 130-131 | ( 0 seq:0 char-range 130-131 ) : ( 0 seq:1 repsep 131-131 | < None of choices matched input :: rep choice @131 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @131 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @131 | < None of choices matched input :: rule:alphaNum choice @131 | < Rule `alpha` didn't match :: ch:0 ref:alpha @131 | < None of choices matched input :: rule:alpha choice @131 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @131 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @131 > : < Expected '_', but found ',' :: ch:2 text @131 > > > : < Rule `num` didn't match :: ch:1 ref:num @131 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @131 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 131-133 | ( 0 rule:commaSpace seqnc 131-133 | ( 0 seq:0 text 131-132 ) : ( 0 seq:1 ref:ws 132-133 | ( 0 rule:ws repsep 132-133 | ( 0 rep seqnc 132-133 | ( 0 seq:0 ref:spaces 132-133 | ( 0 rule:spaces repsep 132-133 | ( 0 rep text 132-133 ) : ( 0 sep text 133-133 ) : < Expected ' ', but found 's' :: rep text @133 > ) ) : ( 0 seq:1 choice 133-133 | < Rule `comment` didn't match :: ch:0 ref:comment @133 | < Sequence failed at entry 0 :: rule:comment seqnc @133 | < Expected '#', but found 's' :: seq:0 text @133 > > > : ( 0 ch:1 text 133-133 ) ) ) : < Expected '
', but found 's' :: sep text @133 > ) ) ) ) : ( 0 rep choice 133-140 | ( 0 ch:0 ref:recordKeyValue 133-140 | ( 0 rule:recordKeyValue seqnc 133-140 | ( 0 seq:0 ref:ident 133-137 | ( 0 rule:ident seqnc 133-137 | ( 0 seq:0 ref:alpha 133-134 | ( 0 rule:alpha choice 133-134 | ( 0 ch:0 char-range 133-134 ) ) ) : ( 0 seq:1 repsep 134-137 | ( 0 rep choice 134-135 | ( 0 ch:0 ref:alphaNum 134-135 | ( 0 rule:alphaNum choice 134-135 | ( 0 ch:0 ref:alpha 134-135 | ( 0 rule:alpha choice 134-135 | ( 0 ch:0 char-range 134-135 ) ) ) ) ) ) : ( 0 sep text 135-135 ) : ( 0 rep choice 135-136 | ( 0 ch:0 ref:alphaNum 135-136 | ( 0 rule:alphaNum choice 135-136 | ( 0 ch:0 ref:alpha 135-136 | ( 0 rule:alpha choice 135-136 | ( 0 ch:0 char-range 135-136 ) ) ) ) ) ) : ( 0 sep text 136-136 ) : ( 0 rep choice 136-137 | ( 0 ch:0 ref:alphaNum 136-137 | ( 0 rule:alphaNum choice 136-137 | ( 0 ch:0 ref:alpha 136-137 | ( 0 rule:alpha choice 136-137 | ( 0 ch:0 char-range 136-137 ) ) ) ) ) ) : ( 0 sep text 137-137 ) : < None of choices matched input :: rep choice @137 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @137 | < None of choices matched input :: rule:alphaNum choice @137 | < Rule `alpha` didn't match :: ch:0 ref:alpha @137 | < None of choices matched input :: rule:alpha choice @137 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @137 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @137 > : < Expected '_', but found ':' :: ch:2 text @137 > > > : < Rule `num` didn't match :: ch:1 ref:num @137 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @137 > > > > : < Expected '.', but found ':' :: ch:1 text @137 > > ) ) ) : ( 0 seq:1 text 137-138 ) : ( 0 seq:2 ref:ws 138-139 | ( 0 rule:ws repsep 138-139 | ( 0 rep seqnc 138-139 | ( 0 seq:0 ref:spaces 138-139 | ( 0 rule:spaces repsep 138-139 | ( 0 rep text 138-139 ) : ( 0 sep text 139-139 ) : < Expected ' ', but found 'S' :: rep text @139 > ) ) : ( 0 seq:1 choice 139-139 | < Rule `comment` didn't match :: ch:0 ref:comment @139 | < Sequence failed at entry 0 :: rule:comment seqnc @139 | < Expected '#', but found 'S' :: seq:0 text @139 > > > : ( 0 ch:1 text 139-139 ) ) ) : < Expected '
', but found 'S' :: sep text @139 > ) ) : ( 0 seq:3 ref:term 139-140 | ( 0 rule:term choice 139-140 | < Rule `record` didn't match :: ch:0 ref:record @139 | < Sequence failed at entry 1 :: rule:record seqnc @140 | ( 0 seq:0 ref:ident 139-140 | ( 0 rule:ident seqnc 139-140 | ( 0 seq:0 ref:alpha 139-140 | ( 0 rule:alpha choice 139-140 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @139 > : ( 0 ch:1 char-range 139-140 ) ) ) : ( 0 seq:1 repsep 140-140 | < None of choices matched input :: rep choice @140 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @140 | < None of choices matched input :: rule:alphaNum choice @140 | < Rule `alpha` didn't match :: ch:0 ref:alpha @140 | < None of choices matched input :: rule:alpha choice @140 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @140 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @140 > : < Expected '_', but found ',' :: ch:2 text @140 > > > : < Rule `num` didn't match :: ch:1 ref:num @140 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @140 > > > > : < Expected '.', but found ',' :: ch:1 text @140 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @140 > > > : < Rule `int` didn't match :: ch:1 ref:int @139 | < Sequence failed at entry 1 :: rule:int seqnc @139 | ( 0 seq:0 choice 139-139 | < Expected '-', but found 'S' :: ch:0 text @139 > : ( 0 ch:1 text 139-139 ) ) : < Rule `num` didn't match :: seq:1 ref:first @139 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @139 > > > > : ( 0 ch:2 ref:var 139-140 | ( 0 rule:var seqnc 139-140 | ( 0 seq:0 char-range 139-140 ) : ( 0 seq:1 repsep 140-140 | < None of choices matched input :: rep choice @140 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @140 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @140 | < None of choices matched input :: rule:alphaNum choice @140 | < Rule `alpha` didn't match :: ch:0 ref:alpha @140 | < None of choices matched input :: rule:alpha choice @140 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @140 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @140 > : < Expected '_', but found ',' :: ch:2 text @140 > > > : < Rule `num` didn't match :: ch:1 ref:num @140 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @140 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 140-142 | ( 0 rule:commaSpace seqnc 140-142 | ( 0 seq:0 text 140-141 ) : ( 0 seq:1 ref:ws 141-142 | ( 0 rule:ws repsep 141-142 | ( 0 rep seqnc 141-142 | ( 0 seq:0 ref:spaces 141-142 | ( 0 rule:spaces repsep 141-142 | ( 0 rep text 141-142 ) : ( 0 sep text 142-142 ) : < Expected ' ', but found 'h' :: rep text @142 > ) ) : ( 0 seq:1 choice 142-142 | < Rule `comment` didn't match :: ch:0 ref:comment @142 | < Sequence failed at entry 0 :: rule:comment seqnc @142 | < Expected '#', but found 'h' :: seq:0 text @142 > > > : ( 0 ch:1 text 142-142 ) ) ) : < Expected '
', but found 'h' :: sep text @142 > ) ) ) ) : ( 0 rep choice 142-154 | ( 0 ch:0 ref:recordKeyValue 142-154 | ( 0 rule:recordKeyValue seqnc 142-154 | ( 0 seq:0 ref:ident 142-151 | ( 0 rule:ident seqnc 142-151 | ( 0 seq:0 ref:alpha 142-143 | ( 0 rule:alpha choice 142-143 | ( 0 ch:0 char-range 142-143 ) ) ) : ( 0 seq:1 repsep 143-151 | ( 0 rep choice 143-144 | ( 0 ch:0 ref:alphaNum 143-144 | ( 0 rule:alphaNum choice 143-144 | ( 0 ch:0 ref:alpha 143-144 | ( 0 rule:alpha choice 143-144 | ( 0 ch:0 char-range 143-144 ) ) ) ) ) ) : ( 0 sep text 144-144 ) : ( 0 rep choice 144-145 | ( 0 ch:0 ref:alphaNum 144-145 | ( 0 rule:alphaNum choice 144-145 | ( 0 ch:0 ref:alpha 144-145 | ( 0 rule:alpha choice 144-145 | ( 0 ch:0 char-range 144-145 ) ) ) ) ) ) : ( 0 sep text 145-145 ) : ( 0 rep choice 145-146 | ( 0 ch:0 ref:alphaNum 145-146 | ( 0 rule:alphaNum choice 145-146 | ( 0 ch:0 ref:alpha 145-146 | ( 0 rule:alpha choice 145-146 | ( 0 ch:0 char-range 145-146 ) ) ) ) ) ) : ( 0 sep text 146-146 ) : ( 0 rep choice 146-147 | ( 0 ch:0 ref:alphaNum 146-147 | ( 0 rule:alphaNum choice 146-147 | ( 0 ch:0 ref:alpha 146-147 | ( 0 rule:alpha choice 146-147 | ( 0 ch:0 char-range 146-147 ) ) ) ) ) ) : ( 0 sep text 147-147 ) : ( 0 rep choice 147-148 | ( 0 ch:0 ref:alphaNum 147-148 | ( 0 rule:alphaNum choice 147-148 | ( 0 ch:0 ref:alpha 147-148 | ( 0 rule:alpha choice 147-148 | ( 0 ch:0 char-range 147-148 ) ) ) ) ) ) : ( 0 sep text 148-148 ) : ( 0 rep choice 148-149 | ( 0 ch:0 ref:alphaNum 148-149 | ( 0 rule:alphaNum choice 148-149 | ( 0 ch:0 ref:alpha 148-149 | ( 0 rule:alpha choice 148-149 | ( 0 ch:0 char-range 148-149 ) ) ) ) ) ) : ( 0 sep text 149-149 ) : ( 0 rep choice 149-150 | ( 0 ch:0 ref:alphaNum 149-150 | ( 0 rule:alphaNum choice 149-150 | ( 0 ch:0 ref:alpha 149-150 | ( 0 rule:alpha choice 149-150 | ( 0 ch:0 char-range 149-150 ) ) ) ) ) ) : ( 0 sep text 150-150 ) : ( 0 rep choice 150-151 | ( 0 ch:0 ref:alphaNum 150-151 | ( 0 rule:alphaNum choice 150-151 | ( 0 ch:0 ref:alpha 150-151 | ( 0 rule:alpha choice 150-151 | ( 0 ch:0 char-range 150-151 ) ) ) ) ) ) : ( 0 sep text 151-151 ) : < None of choices matched input :: rep choice @151 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @151 | < None of choices matched input :: rule:alphaNum choice @151 | < Rule `alpha` didn't match :: ch:0 ref:alpha @151 | < None of choices matched input :: rule:alpha choice @151 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @151 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @151 > : < Expected '_', but found ':' :: ch:2 text @151 > > > : < Rule `num` didn't match :: ch:1 ref:num @151 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @151 > > > > : < Expected '.', but found ':' :: ch:1 text @151 > > ) ) ) : ( 0 seq:1 text 151-152 ) : ( 0 seq:2 ref:ws 152-153 | ( 0 rule:ws repsep 152-153 | ( 0 rep seqnc 152-153 | ( 0 seq:0 ref:spaces 152-153 | ( 0 rule:spaces repsep 152-153 | ( 0 rep text 152-153 ) : ( 0 sep text 153-153 ) : < Expected ' ', but found 'H' :: rep text @153 > ) ) : ( 0 seq:1 choice 153-153 | < Rule `comment` didn't match :: ch:0 ref:comment @153 | < Sequence failed at entry 0 :: rule:comment seqnc @153 | < Expected '#', but found 'H' :: seq:0 text @153 > > > : ( 0 ch:1 text 153-153 ) ) ) : < Expected '
', but found 'H' :: sep text @153 > ) ) : ( 0 seq:3 ref:term 153-154 | ( 0 rule:term choice 153-154 | < Rule `record` didn't match :: ch:0 ref:record @153 | < Sequence failed at entry 1 :: rule:record seqnc @154 | ( 0 seq:0 ref:ident 153-154 | ( 0 rule:ident seqnc 153-154 | ( 0 seq:0 ref:alpha 153-154 | ( 0 rule:alpha choice 153-154 | < Expected character in range from 'a' to 'z', but found 'H' :: ch:0 char-range @153 > : ( 0 ch:1 char-range 153-154 ) ) ) : ( 0 seq:1 repsep 154-154 | < None of choices matched input :: rep choice @154 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @154 | < None of choices matched input :: rule:alphaNum choice @154 | < Rule `alpha` didn't match :: ch:0 ref:alpha @154 | < None of choices matched input :: rule:alpha choice @154 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @154 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @154 > : < Expected '_', but found '}' :: ch:2 text @154 > > > : < Rule `num` didn't match :: ch:1 ref:num @154 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @154 > > > > : < Expected '.', but found '}' :: ch:1 text @154 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @154 > > > : < Rule `int` didn't match :: ch:1 ref:int @153 | < Sequence failed at entry 1 :: rule:int seqnc @153 | ( 0 seq:0 choice 153-153 | < Expected '-', but found 'H' :: ch:0 text @153 > : ( 0 ch:1 text 153-153 ) ) : < Rule `num` didn't match :: seq:1 ref:first @153 | < Expected character in range from '0' to '9', but found 'H' :: rule:num char-range @153 > > > > : ( 0 ch:2 ref:var 153-154 | ( 0 rule:var seqnc 153-154 | ( 0 seq:0 char-range 153-154 ) : ( 0 seq:1 repsep 154-154 | < None of choices matched input :: rep choice @154 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @154 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @154 | < None of choices matched input :: rule:alphaNum choice @154 | < Rule `alpha` didn't match :: ch:0 ref:alpha @154 | < None of choices matched input :: rule:alpha choice @154 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @154 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @154 > : < Expected '_', but found '}' :: ch:2 text @154 > > > : < Rule `num` didn't match :: ch:1 ref:num @154 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @154 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @154 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @154 | < Expected ',', but found '}' :: seq:0 text @154 > > > ) ) : ( 0 seq:4 ref:ws 154-154 | ( 0 rule:ws repsep 154-154 | ( 0 rep seqnc 154-154 | ( 0 seq:0 ref:spaces 154-154 | ( 0 rule:spaces repsep 154-154 | < Expected ' ', but found '}' :: rep text @154 > ) ) : ( 0 seq:1 choice 154-154 | < Rule `comment` didn't match :: ch:0 ref:comment @154 | < Sequence failed at entry 0 :: rule:comment seqnc @154 | < Expected '#', but found '}' :: seq:0 text @154 > > > : ( 0 ch:1 text 154-154 ) ) ) : < Expected '
', but found '}' :: sep text @154 > ) ) : ( 0 seq:5 text 154-155 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @156 | ( 0 seq:0 ref:ws 155-156 | ( 0 rule:ws repsep 155-156 | ( 0 rep seqnc 155-156 | ( 0 seq:0 ref:spaces 155-156 | ( 0 rule:spaces repsep 155-156 | ( 0 rep text 155-156 ) : ( 0 sep text 156-156 ) : < Expected ' ', but found '|' :: rep text @156 > ) ) : ( 0 seq:1 choice 156-156 | < Rule `comment` didn't match :: ch:0 ref:comment @156 | < Sequence failed at entry 0 :: rule:comment seqnc @156 | < Expected '#', but found '|' :: seq:0 text @156 > > > : ( 0 ch:1 text 156-156 ) ) ) : < Expected '
', but found '|' :: sep text @156 > ) ) : < Expected '&', but found '|' :: seq:1 text @156 > > ) ) : ( 0 sep seqnc 156-160 | ( 0 seq:0 ref:ws 156-156 | ( 0 rule:ws repsep 156-156 | ( 0 rep seqnc 156-156 | ( 0 seq:0 ref:spaces 156-156 | ( 0 rule:spaces repsep 156-156 | < Expected ' ', but found '|' :: rep text @156 > ) ) : ( 0 seq:1 choice 156-156 | < Rule `comment` didn't match :: ch:0 ref:comment @156 | < Sequence failed at entry 0 :: rule:comment seqnc @156 | < Expected '#', but found '|' :: seq:0 text @156 > > > : ( 0 ch:1 text 156-156 ) ) ) : < Expected '
', but found '|' :: sep text @156 > ) ) : ( 0 seq:1 text 156-157 ) : ( 0 seq:2 ref:ws 157-160 | ( 0 rule:ws repsep 157-160 | ( 0 rep seqnc 157-157 | ( 0 seq:0 ref:spaces 157-157 | ( 0 rule:spaces repsep 157-157 | < Expected ' ', but found '
' :: rep text @157 > ) ) : ( 0 seq:1 choice 157-157 | < Rule `comment` didn't match :: ch:0 ref:comment @157 | < Sequence failed at entry 0 :: rule:comment seqnc @157 | < Expected '#', but found '
' :: seq:0 text @157 > > > : ( 0 ch:1 text 157-157 ) ) ) : ( 0 sep text 157-158 ) : ( 0 rep seqnc 158-160 | ( 0 seq:0 ref:spaces 158-160 | ( 0 rule:spaces repsep 158-160 | ( 0 rep text 158-159 ) : ( 0 sep text 159-159 ) : ( 0 rep text 159-160 ) : ( 0 sep text 160-160 ) : < Expected ' ', but found '?' :: rep text @160 > ) ) : ( 0 seq:1 choice 160-160 | < Rule `comment` didn't match :: ch:0 ref:comment @160 | < Sequence failed at entry 0 :: rule:comment seqnc @160 | < Expected '#', but found '?' :: seq:0 text @160 > > > : ( 0 ch:1 text 160-160 ) ) ) : < Expected '
', but found '?' :: sep text @160 > ) ) ) : ( 0 rep ref:disjunct 160-164 | ( 0 rule:disjunct repsep 160-164 | ( 0 rep ref:conjunct 160-163 | ( 0 rule:conjunct choice 160-163 | < Rule `record` didn't match :: ch:0 ref:record @160 | < Sequence failed at entry 0 :: rule:record seqnc @160 | < Rule `ident` didn't match :: seq:0 ref:ident @160 | < Sequence failed at entry 0 :: rule:ident seqnc @160 | < Rule `alpha` didn't match :: seq:0 ref:alpha @160 | < None of choices matched input :: rule:alpha choice @160 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @160 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @160 > : < Expected '_', but found '?' :: ch:2 text @160 > > > > > > > : < Rule `comparison` didn't match :: ch:1 ref:comparison @160 | < Sequence failed at entry 2 :: rule:comparison seqnc @164 | ( 0 seq:0 ref:left 160-163 | ( 0 rule:term choice 160-163 | < Rule `record` didn't match :: ch:0 ref:record @160 | < Sequence failed at entry 0 :: rule:record seqnc @160 | < Rule `ident` didn't match :: seq:0 ref:ident @160 | < Sequence failed at entry 0 :: rule:ident seqnc @160 | < Rule `alpha` didn't match :: seq:0 ref:alpha @160 | < None of choices matched input :: rule:alpha choice @160 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @160 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @160 > : < Expected '_', but found '?' :: ch:2 text @160 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @160 | < Sequence failed at entry 1 :: rule:int seqnc @160 | ( 0 seq:0 choice 160-160 | < Expected '-', but found '?' :: ch:0 text @160 > : ( 0 ch:1 text 160-160 ) ) : < Rule `num` didn't match :: seq:1 ref:first @160 | < Expected character in range from '0' to '9', but found '?' :: rule:num char-range @160 > > > > : < Rule `var` didn't match :: ch:2 ref:var @160 | < Sequence failed at entry 0 :: rule:var seqnc @160 | < Expected character in range from 'A' to 'Z', but found '?' :: seq:0 char-range @160 > > > : < Rule `string` didn't match :: ch:3 ref:string @160 | < Sequence failed at entry 0 :: rule:string seqnc @160 | < Expected '"', but found '?' :: seq:0 text @160 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @160 | < None of choices matched input :: rule:bool choice @160 | < Expected 'true', but found '??? ' :: ch:0 text @160 > : < Expected 'false', but found '??? |' :: ch:1 text @160 > > > : < Rule `array` didn't match :: ch:5 ref:array @160 | < Sequence failed at entry 0 :: rule:array seqnc @160 | < Expected '[', but found '?' :: seq:0 text @160 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @160 | < Sequence failed at entry 0 :: rule:dict seqnc @160 | < Expected '{', but found '?' :: seq:0 text @160 > > > : ( 0 ch:7 ref:placeholder 160-163 | ( 0 rule:placeholder text 160-163 ) ) ) ) : ( 0 seq:1 ref:ws 163-164 | ( 0 rule:ws repsep 163-164 | ( 0 rep seqnc 163-164 | ( 0 seq:0 ref:spaces 163-164 | ( 0 rule:spaces repsep 163-164 | ( 0 rep text 163-164 ) : ( 0 sep text 164-164 ) : < Expected ' ', but found '|' :: rep text @164 > ) ) : ( 0 seq:1 choice 164-164 | < Rule `comment` didn't match :: ch:0 ref:comment @164 | < Sequence failed at entry 0 :: rule:comment seqnc @164 | < Expected '#', but found '|' :: seq:0 text @164 > > > : ( 0 ch:1 text 164-164 ) ) ) : < Expected '
', but found '|' :: sep text @164 > ) ) : < Rule `comparisonOp` didn't match :: seq:2 ref:comparisonOp @164 | < None of choices matched input :: rule:comparisonOp choice @164 | < Expected '<=', but found '|
' :: ch:0 text @164 > : < Expected '>=', but found '|
' :: ch:1 text @164 > : < Expected '>', but found '|' :: ch:2 text @164 > : < Expected '<', but found '|' :: ch:3 text @164 > : < Expected '=', but found '|' :: ch:4 text @164 > : < Expected '!=', but found '|
' :: ch:5 text @164 > > > > > : < Rule `arithmetic` didn't match :: ch:2 ref:arithmetic @160 | < None of choices matched input :: rule:arithmetic choice @160 | < Rule `assignmentOnLeft` didn't match :: ch:0 ref:assignmentOnLeft @160 | < Sequence failed at entry 2 :: rule:assignmentOnLeft seqnc @164 | ( 0 seq:0 ref:result 160-163 | ( 0 rule:term choice 160-163 | < Rule `record` didn't match :: ch:0 ref:record @160 | < Sequence failed at entry 0 :: rule:record seqnc @160 | < Rule `ident` didn't match :: seq:0 ref:ident @160 | < Sequence failed at entry 0 :: rule:ident seqnc @160 | < Rule `alpha` didn't match :: seq:0 ref:alpha @160 | < None of choices matched input :: rule:alpha choice @160 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @160 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @160 > : < Expected '_', but found '?' :: ch:2 text @160 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @160 | < Sequence failed at entry 1 :: rule:int seqnc @160 | ( 0 seq:0 choice 160-160 | < Expected '-', but found '?' :: ch:0 text @160 > : ( 0 ch:1 text 160-160 ) ) : < Rule `num` didn't match :: seq:1 ref:first @160 | < Expected character in range from '0' to '9', but found '?' :: rule:num char-range @160 > > > > : < Rule `var` didn't match :: ch:2 ref:var @160 | < Sequence failed at entry 0 :: rule:var seqnc @160 | < Expected character in range from 'A' to 'Z', but found '?' :: seq:0 char-range @160 > > > : < Rule `string` didn't match :: ch:3 ref:string @160 | < Sequence failed at entry 0 :: rule:string seqnc @160 | < Expected '"', but found '?' :: seq:0 text @160 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @160 | < None of choices matched input :: rule:bool choice @160 | < Expected 'true', but found '??? ' :: ch:0 text @160 > : < Expected 'false', but found '??? |' :: ch:1 text @160 > > > : < Rule `array` didn't match :: ch:5 ref:array @160 | < Sequence failed at entry 0 :: rule:array seqnc @160 | < Expected '[', but found '?' :: seq:0 text @160 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @160 | < Sequence failed at entry 0 :: rule:dict seqnc @160 | < Expected '{', but found '?' :: seq:0 text @160 > > > : ( 0 ch:7 ref:placeholder 160-163 | ( 0 rule:placeholder text 160-163 ) ) ) ) : ( 0 seq:1 ref:ws 163-164 | ( 0 rule:ws repsep 163-164 | ( 0 rep seqnc 163-164 | ( 0 seq:0 ref:spaces 163-164 | ( 0 rule:spaces repsep 163-164 | ( 0 rep text 163-164 ) : ( 0 sep text 164-164 ) : < Expected ' ', but found '|' :: rep text @164 > ) ) : ( 0 seq:1 choice 164-164 | < Rule `comment` didn't match :: ch:0 ref:comment @164 | < Sequence failed at entry 0 :: rule:comment seqnc @164 | < Expected '#', but found '|' :: seq:0 text @164 > > > : ( 0 ch:1 text 164-164 ) ) ) : < Expected '
', but found '|' :: sep text @164 > ) ) : < Expected '=', but found '|' :: seq:2 text @164 > > > : < Rule `assignmentOnRight` didn't match :: ch:1 ref:assignmentOnRight @160 | < Sequence failed at entry 2 :: rule:assignmentOnRight seqnc @164 | ( 0 seq:0 ref:left 160-163 | ( 0 rule:term choice 160-163 | < Rule `record` didn't match :: ch:0 ref:record @160 | < Sequence failed at entry 0 :: rule:record seqnc @160 | < Rule `ident` didn't match :: seq:0 ref:ident @160 | < Sequence failed at entry 0 :: rule:ident seqnc @160 | < Rule `alpha` didn't match :: seq:0 ref:alpha @160 | < None of choices matched input :: rule:alpha choice @160 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @160 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @160 > : < Expected '_', but found '?' :: ch:2 text @160 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @160 | < Sequence failed at entry 1 :: rule:int seqnc @160 | ( 0 seq:0 choice 160-160 | < Expected '-', but found '?' :: ch:0 text @160 > : ( 0 ch:1 text 160-160 ) ) : < Rule `num` didn't match :: seq:1 ref:first @160 | < Expected character in range from '0' to '9', but found '?' :: rule:num char-range @160 > > > > : < Rule `var` didn't match :: ch:2 ref:var @160 | < Sequence failed at entry 0 :: rule:var seqnc @160 | < Expected character in range from 'A' to 'Z', but found '?' :: seq:0 char-range @160 > > > : < Rule `string` didn't match :: ch:3 ref:string @160 | < Sequence failed at entry 0 :: rule:string seqnc @160 | < Expected '"', but found '?' :: seq:0 text @160 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @160 | < None of choices matched input :: rule:bool choice @160 | < Expected 'true', but found '??? ' :: ch:0 text @160 > : < Expected 'false', but found '??? |' :: ch:1 text @160 > > > : < Rule `array` didn't match :: ch:5 ref:array @160 | < Sequence failed at entry 0 :: rule:array seqnc @160 | < Expected '[', but found '?' :: seq:0 text @160 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @160 | < Sequence failed at entry 0 :: rule:dict seqnc @160 | < Expected '{', but found '?' :: seq:0 text @160 > > > : ( 0 ch:7 ref:placeholder 160-163 | ( 0 rule:placeholder text 160-163 ) ) ) ) : ( 0 seq:1 ref:ws 163-164 | ( 0 rule:ws repsep 163-164 | ( 0 rep seqnc 163-164 | ( 0 seq:0 ref:spaces 163-164 | ( 0 rule:spaces repsep 163-164 | ( 0 rep text 163-164 ) : ( 0 sep text 164-164 ) : < Expected ' ', but found '|' :: rep text @164 > ) ) : ( 0 seq:1 choice 164-164 | < Rule `comment` didn't match :: ch:0 ref:comment @164 | < Sequence failed at entry 0 :: rule:comment seqnc @164 | < Expected '#', but found '|' :: seq:0 text @164 > > > : ( 0 ch:1 text 164-164 ) ) ) : < Expected '
', but found '|' :: sep text @164 > ) ) : < Rule `arithmeticOp` didn't match :: seq:2 ref:arithmeticOp @164 | < None of choices matched input :: rule:arithmeticOp choice @164 | < Expected '+', but found '|' :: ch:0 text @164 > : < Expected '*', but found '|' :: ch:1 text @164 > : < Expected '-', but found '|' :: ch:2 text @164 > > > > > > > : < Rule `negation` didn't match :: ch:3 ref:negation @160 | < Sequence failed at entry 0 :: rule:negation seqnc @160 | < Expected '!', but found '?' :: seq:0 text @160 > > > : < Rule `aggregation` didn't match :: ch:4 ref:aggregation @160 | < Sequence failed at entry 0 :: rule:aggregation seqnc @160 | < Rule `ident` didn't match :: seq:0 ref:aggregation @160 | < Sequence failed at entry 0 :: rule:ident seqnc @160 | < Rule `alpha` didn't match :: seq:0 ref:alpha @160 | < None of choices matched input :: rule:alpha choice @160 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @160 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @160 > : < Expected '_', but found '?' :: ch:2 text @160 > > > > > > > : ( 0 ch:5 ref:placeholder 160-163 | ( 0 rule:placeholder text 160-163 ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @164 | ( 0 seq:0 ref:ws 163-164 | ( 0 rule:ws repsep 163-164 | ( 0 rep seqnc 163-164 | ( 0 seq:0 ref:spaces 163-164 | ( 0 rule:spaces repsep 163-164 | ( 0 rep text 163-164 ) : ( 0 sep text 164-164 ) : < Expected ' ', but found '|' :: rep text @164 > ) ) : ( 0 seq:1 choice 164-164 | < Rule `comment` didn't match :: ch:0 ref:comment @164 | < Sequence failed at entry 0 :: rule:comment seqnc @164 | < Expected '#', but found '|' :: seq:0 text @164 > > > : ( 0 ch:1 text 164-164 ) ) ) : < Expected '
', but found '|' :: sep text @164 > ) ) : < Expected '&', but found '|' :: seq:1 text @164 > > ) ) : ( 0 sep seqnc 164-168 | ( 0 seq:0 ref:ws 164-164 | ( 0 rule:ws repsep 164-164 | ( 0 rep seqnc 164-164 | ( 0 seq:0 ref:spaces 164-164 | ( 0 rule:spaces repsep 164-164 | < Expected ' ', but found '|' :: rep text @164 > ) ) : ( 0 seq:1 choice 164-164 | < Rule `comment` didn't match :: ch:0 ref:comment @164 | < Sequence failed at entry 0 :: rule:comment seqnc @164 | < Expected '#', but found '|' :: seq:0 text @164 > > > : ( 0 ch:1 text 164-164 ) ) ) : < Expected '
', but found '|' :: sep text @164 > ) ) : ( 0 seq:1 text 164-165 ) : ( 0 seq:2 ref:ws 165-168 | ( 0 rule:ws repsep 165-168 | ( 0 rep seqnc 165-165 | ( 0 seq:0 ref:spaces 165-165 | ( 0 rule:spaces repsep 165-165 | < Expected ' ', but found '
' :: rep text @165 > ) ) : ( 0 seq:1 choice 165-165 | < Rule `comment` didn't match :: ch:0 ref:comment @165 | < Sequence failed at entry 0 :: rule:comment seqnc @165 | < Expected '#', but found '
' :: seq:0 text @165 > > > : ( 0 ch:1 text 165-165 ) ) ) : ( 0 sep text 165-166 ) : ( 0 rep seqnc 166-168 | ( 0 seq:0 ref:spaces 166-168 | ( 0 rule:spaces repsep 166-168 | ( 0 rep text 166-167 ) : ( 0 sep text 167-167 ) : ( 0 rep text 167-168 ) : ( 0 sep text 168-168 ) : < Expected ' ', but found 'h' :: rep text @168 > ) ) : ( 0 seq:1 choice 168-168 | < Rule `comment` didn't match :: ch:0 ref:comment @168 | < Sequence failed at entry 0 :: rule:comment seqnc @168 | < Expected '#', but found 'h' :: seq:0 text @168 > > > : ( 0 ch:1 text 168-168 ) ) ) : < Expected '
', but found 'h' :: sep text @168 > ) ) ) : ( 0 rep ref:disjunct 168-204 | ( 0 rule:disjunct repsep 168-204 | ( 0 rep ref:conjunct 168-203 | ( 0 rule:conjunct choice 168-203 | ( 0 ch:0 ref:record 168-203 | ( 0 rule:record seqnc 168-203 | ( 0 seq:0 ref:ident 168-174 | ( 0 rule:ident seqnc 168-174 | ( 0 seq:0 ref:alpha 168-169 | ( 0 rule:alpha choice 168-169 | ( 0 ch:0 char-range 168-169 ) ) ) : ( 0 seq:1 repsep 169-174 | ( 0 rep choice 169-170 | ( 0 ch:0 ref:alphaNum 169-170 | ( 0 rule:alphaNum choice 169-170 | ( 0 ch:0 ref:alpha 169-170 | ( 0 rule:alpha choice 169-170 | ( 0 ch:0 char-range 169-170 ) ) ) ) ) ) : ( 0 sep text 170-170 ) : ( 0 rep choice 170-171 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @170 | < None of choices matched input :: rule:alphaNum choice @170 | < Rule `alpha` didn't match :: ch:0 ref:alpha @170 | < None of choices matched input :: rule:alpha choice @170 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @170 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @170 > : < Expected '_', but found '.' :: ch:2 text @170 > > > : < Rule `num` didn't match :: ch:1 ref:num @170 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @170 > > > > : ( 0 ch:1 text 170-171 ) ) : ( 0 sep text 171-171 ) : ( 0 rep choice 171-172 | ( 0 ch:0 ref:alphaNum 171-172 | ( 0 rule:alphaNum choice 171-172 | ( 0 ch:0 ref:alpha 171-172 | ( 0 rule:alpha choice 171-172 | ( 0 ch:0 char-range 171-172 ) ) ) ) ) ) : ( 0 sep text 172-172 ) : ( 0 rep choice 172-173 | ( 0 ch:0 ref:alphaNum 172-173 | ( 0 rule:alphaNum choice 172-173 | ( 0 ch:0 ref:alpha 172-173 | ( 0 rule:alpha choice 172-173 | ( 0 ch:0 char-range 172-173 ) ) ) ) ) ) : ( 0 sep text 173-173 ) : ( 0 rep choice 173-174 | ( 0 ch:0 ref:alphaNum 173-174 | ( 0 rule:alphaNum choice 173-174 | ( 0 ch:0 ref:alpha 173-174 | ( 0 rule:alpha choice 173-174 | ( 0 ch:0 char-range 173-174 ) ) ) ) ) ) : ( 0 sep text 174-174 ) : < None of choices matched input :: rep choice @174 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @174 | < None of choices matched input :: rule:alphaNum choice @174 | < Rule `alpha` didn't match :: ch:0 ref:alpha @174 | < None of choices matched input :: rule:alpha choice @174 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @174 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @174 > : < Expected '_', but found '{' :: ch:2 text @174 > > > : < Rule `num` didn't match :: ch:1 ref:num @174 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @174 > > > > : < Expected '.', but found '{' :: ch:1 text @174 > > ) ) ) : ( 0 seq:1 text 174-175 ) : ( 0 seq:2 ref:ws 175-175 | ( 0 rule:ws repsep 175-175 | ( 0 rep seqnc 175-175 | ( 0 seq:0 ref:spaces 175-175 | ( 0 rule:spaces repsep 175-175 | < Expected ' ', but found '?' :: rep text @175 > ) ) : ( 0 seq:1 choice 175-175 | < Rule `comment` didn't match :: ch:0 ref:comment @175 | < Sequence failed at entry 0 :: rule:comment seqnc @175 | < Expected '#', but found '?' :: seq:0 text @175 > > > : ( 0 ch:1 text 175-175 ) ) ) : < Expected '
', but found '?' :: sep text @175 > ) ) : ( 0 seq:3 ref:recordAttrs 175-202 | ( 0 rule:recordAttrs repsep 175-202 | ( 0 rep choice 175-178 | < Rule `recordKeyValue` didn't match :: ch:0 ref:recordKeyValue @175 | < Sequence failed at entry 0 :: rule:recordKeyValue seqnc @175 | < Rule `ident` didn't match :: seq:0 ref:ident @175 | < Sequence failed at entry 0 :: rule:ident seqnc @175 | < Rule `alpha` didn't match :: seq:0 ref:alpha @175 | < None of choices matched input :: rule:alpha choice @175 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @175 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @175 > : < Expected '_', but found '?' :: ch:2 text @175 > > > > > > > : ( 0 ch:1 ref:placeholder 175-178 | ( 0 rule:placeholder text 175-178 ) ) ) : ( 0 sep ref:commaSpace 178-180 | ( 0 rule:commaSpace seqnc 178-180 | ( 0 seq:0 text 178-179 ) : ( 0 seq:1 ref:ws 179-180 | ( 0 rule:ws repsep 179-180 | ( 0 rep seqnc 179-180 | ( 0 seq:0 ref:spaces 179-180 | ( 0 rule:spaces repsep 179-180 | ( 0 rep text 179-180 ) : ( 0 sep text 180-180 ) : < Expected ' ', but found 's' :: rep text @180 > ) ) : ( 0 seq:1 choice 180-180 | < Rule `comment` didn't match :: ch:0 ref:comment @180 | < Sequence failed at entry 0 :: rule:comment seqnc @180 | < Expected '#', but found 's' :: seq:0 text @180 > > > : ( 0 ch:1 text 180-180 ) ) ) : < Expected '
', but found 's' :: sep text @180 > ) ) ) ) : ( 0 rep choice 180-187 | ( 0 ch:0 ref:recordKeyValue 180-187 | ( 0 rule:recordKeyValue seqnc 180-187 | ( 0 seq:0 ref:ident 180-184 | ( 0 rule:ident seqnc 180-184 | ( 0 seq:0 ref:alpha 180-181 | ( 0 rule:alpha choice 180-181 | ( 0 ch:0 char-range 180-181 ) ) ) : ( 0 seq:1 repsep 181-184 | ( 0 rep choice 181-182 | ( 0 ch:0 ref:alphaNum 181-182 | ( 0 rule:alphaNum choice 181-182 | ( 0 ch:0 ref:alpha 181-182 | ( 0 rule:alpha choice 181-182 | ( 0 ch:0 char-range 181-182 ) ) ) ) ) ) : ( 0 sep text 182-182 ) : ( 0 rep choice 182-183 | ( 0 ch:0 ref:alphaNum 182-183 | ( 0 rule:alphaNum choice 182-183 | ( 0 ch:0 ref:alpha 182-183 | ( 0 rule:alpha choice 182-183 | ( 0 ch:0 char-range 182-183 ) ) ) ) ) ) : ( 0 sep text 183-183 ) : ( 0 rep choice 183-184 | ( 0 ch:0 ref:alphaNum 183-184 | ( 0 rule:alphaNum choice 183-184 | ( 0 ch:0 ref:alpha 183-184 | ( 0 rule:alpha choice 183-184 | ( 0 ch:0 char-range 183-184 ) ) ) ) ) ) : ( 0 sep text 184-184 ) : < None of choices matched input :: rep choice @184 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @184 | < None of choices matched input :: rule:alphaNum choice @184 | < Rule `alpha` didn't match :: ch:0 ref:alpha @184 | < None of choices matched input :: rule:alpha choice @184 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @184 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @184 > : < Expected '_', but found ':' :: ch:2 text @184 > > > : < Rule `num` didn't match :: ch:1 ref:num @184 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @184 > > > > : < Expected '.', but found ':' :: ch:1 text @184 > > ) ) ) : ( 0 seq:1 text 184-185 ) : ( 0 seq:2 ref:ws 185-186 | ( 0 rule:ws repsep 185-186 | ( 0 rep seqnc 185-186 | ( 0 seq:0 ref:spaces 185-186 | ( 0 rule:spaces repsep 185-186 | ( 0 rep text 185-186 ) : ( 0 sep text 186-186 ) : < Expected ' ', but found 'S' :: rep text @186 > ) ) : ( 0 seq:1 choice 186-186 | < Rule `comment` didn't match :: ch:0 ref:comment @186 | < Sequence failed at entry 0 :: rule:comment seqnc @186 | < Expected '#', but found 'S' :: seq:0 text @186 > > > : ( 0 ch:1 text 186-186 ) ) ) : < Expected '
', but found 'S' :: sep text @186 > ) ) : ( 0 seq:3 ref:term 186-187 | ( 0 rule:term choice 186-187 | < Rule `record` didn't match :: ch:0 ref:record @186 | < Sequence failed at entry 1 :: rule:record seqnc @187 | ( 0 seq:0 ref:ident 186-187 | ( 0 rule:ident seqnc 186-187 | ( 0 seq:0 ref:alpha 186-187 | ( 0 rule:alpha choice 186-187 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @186 > : ( 0 ch:1 char-range 186-187 ) ) ) : ( 0 seq:1 repsep 187-187 | < None of choices matched input :: rep choice @187 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @187 | < None of choices matched input :: rule:alphaNum choice @187 | < Rule `alpha` didn't match :: ch:0 ref:alpha @187 | < None of choices matched input :: rule:alpha choice @187 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @187 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @187 > : < Expected '_', but found ',' :: ch:2 text @187 > > > : < Rule `num` didn't match :: ch:1 ref:num @187 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @187 > > > > : < Expected '.', but found ',' :: ch:1 text @187 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @187 > > > : < Rule `int` didn't match :: ch:1 ref:int @186 | < Sequence failed at entry 1 :: rule:int seqnc @186 | ( 0 seq:0 choice 186-186 | < Expected '-', but found 'S' :: ch:0 text @186 > : ( 0 ch:1 text 186-186 ) ) : < Rule `num` didn't match :: seq:1 ref:first @186 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @186 > > > > : ( 0 ch:2 ref:var 186-187 | ( 0 rule:var seqnc 186-187 | ( 0 seq:0 char-range 186-187 ) : ( 0 seq:1 repsep 187-187 | < None of choices matched input :: rep choice @187 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @187 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @187 | < None of choices matched input :: rule:alphaNum choice @187 | < Rule `alpha` didn't match :: ch:0 ref:alpha @187 | < None of choices matched input :: rule:alpha choice @187 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @187 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @187 > : < Expected '_', but found ',' :: ch:2 text @187 > > > : < Rule `num` didn't match :: ch:1 ref:num @187 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @187 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 187-189 | ( 0 rule:commaSpace seqnc 187-189 | ( 0 seq:0 text 187-188 ) : ( 0 seq:1 ref:ws 188-189 | ( 0 rule:ws repsep 188-189 | ( 0 rep seqnc 188-189 | ( 0 seq:0 ref:spaces 188-189 | ( 0 rule:spaces repsep 188-189 | ( 0 rep text 188-189 ) : ( 0 sep text 189-189 ) : < Expected ' ', but found 'h' :: rep text @189 > ) ) : ( 0 seq:1 choice 189-189 | < Rule `comment` didn't match :: ch:0 ref:comment @189 | < Sequence failed at entry 0 :: rule:comment seqnc @189 | < Expected '#', but found 'h' :: seq:0 text @189 > > > : ( 0 ch:1 text 189-189 ) ) ) : < Expected '
', but found 'h' :: sep text @189 > ) ) ) ) : ( 0 rep choice 189-202 | ( 0 ch:0 ref:recordKeyValue 189-202 | ( 0 rule:recordKeyValue seqnc 189-202 | ( 0 seq:0 ref:ident 189-199 | ( 0 rule:ident seqnc 189-199 | ( 0 seq:0 ref:alpha 189-190 | ( 0 rule:alpha choice 189-190 | ( 0 ch:0 char-range 189-190 ) ) ) : ( 0 seq:1 repsep 190-199 | ( 0 rep choice 190-191 | ( 0 ch:0 ref:alphaNum 190-191 | ( 0 rule:alphaNum choice 190-191 | ( 0 ch:0 ref:alpha 190-191 | ( 0 rule:alpha choice 190-191 | ( 0 ch:0 char-range 190-191 ) ) ) ) ) ) : ( 0 sep text 191-191 ) : ( 0 rep choice 191-192 | ( 0 ch:0 ref:alphaNum 191-192 | ( 0 rule:alphaNum choice 191-192 | ( 0 ch:0 ref:alpha 191-192 | ( 0 rule:alpha choice 191-192 | ( 0 ch:0 char-range 191-192 ) ) ) ) ) ) : ( 0 sep text 192-192 ) : ( 0 rep choice 192-193 | ( 0 ch:0 ref:alphaNum 192-193 | ( 0 rule:alphaNum choice 192-193 | ( 0 ch:0 ref:alpha 192-193 | ( 0 rule:alpha choice 192-193 | ( 0 ch:0 char-range 192-193 ) ) ) ) ) ) : ( 0 sep text 193-193 ) : ( 0 rep choice 193-194 | ( 0 ch:0 ref:alphaNum 193-194 | ( 0 rule:alphaNum choice 193-194 | ( 0 ch:0 ref:alpha 193-194 | ( 0 rule:alpha choice 193-194 | ( 0 ch:0 char-range 193-194 ) ) ) ) ) ) : ( 0 sep text 194-194 ) : ( 0 rep choice 194-195 | ( 0 ch:0 ref:alphaNum 194-195 | ( 0 rule:alphaNum choice 194-195 | ( 0 ch:0 ref:alpha 194-195 | ( 0 rule:alpha choice 194-195 | ( 0 ch:0 char-range 194-195 ) ) ) ) ) ) : ( 0 sep text 195-195 ) : ( 0 rep choice 195-196 | ( 0 ch:0 ref:alphaNum 195-196 | ( 0 rule:alphaNum choice 195-196 | ( 0 ch:0 ref:alpha 195-196 | ( 0 rule:alpha choice 195-196 | ( 0 ch:0 char-range 195-196 ) ) ) ) ) ) : ( 0 sep text 196-196 ) : ( 0 rep choice 196-197 | ( 0 ch:0 ref:alphaNum 196-197 | ( 0 rule:alphaNum choice 196-197 | ( 0 ch:0 ref:alpha 196-197 | ( 0 rule:alpha choice 196-197 | ( 0 ch:0 char-range 196-197 ) ) ) ) ) ) : ( 0 sep text 197-197 ) : ( 0 rep choice 197-198 | ( 0 ch:0 ref:alphaNum 197-198 | ( 0 rule:alphaNum choice 197-198 | ( 0 ch:0 ref:alpha 197-198 | ( 0 rule:alpha choice 197-198 | ( 0 ch:0 char-range 197-198 ) ) ) ) ) ) : ( 0 sep text 198-198 ) : ( 0 rep choice 198-199 | ( 0 ch:0 ref:alphaNum 198-199 | ( 0 rule:alphaNum choice 198-199 | ( 0 ch:0 ref:alpha 198-199 | ( 0 rule:alpha choice 198-199 | ( 0 ch:0 char-range 198-199 ) ) ) ) ) ) : ( 0 sep text 199-199 ) : < None of choices matched input :: rep choice @199 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @199 | < None of choices matched input :: rule:alphaNum choice @199 | < Rule `alpha` didn't match :: ch:0 ref:alpha @199 | < None of choices matched input :: rule:alpha choice @199 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @199 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @199 > : < Expected '_', but found ':' :: ch:2 text @199 > > > : < Rule `num` didn't match :: ch:1 ref:num @199 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @199 > > > > : < Expected '.', but found ':' :: ch:1 text @199 > > ) ) ) : ( 0 seq:1 text 199-200 ) : ( 0 seq:2 ref:ws 200-201 | ( 0 rule:ws repsep 200-201 | ( 0 rep seqnc 200-201 | ( 0 seq:0 ref:spaces 200-201 | ( 0 rule:spaces repsep 200-201 | ( 0 rep text 200-201 ) : ( 0 sep text 201-201 ) : < Expected ' ', but found 'H' :: rep text @201 > ) ) : ( 0 seq:1 choice 201-201 | < Rule `comment` didn't match :: ch:0 ref:comment @201 | < Sequence failed at entry 0 :: rule:comment seqnc @201 | < Expected '#', but found 'H' :: seq:0 text @201 > > > : ( 0 ch:1 text 201-201 ) ) ) : < Expected '
', but found 'H' :: sep text @201 > ) ) : ( 0 seq:3 ref:term 201-202 | ( 0 rule:term choice 201-202 | < Rule `record` didn't match :: ch:0 ref:record @201 | < Sequence failed at entry 1 :: rule:record seqnc @202 | ( 0 seq:0 ref:ident 201-202 | ( 0 rule:ident seqnc 201-202 | ( 0 seq:0 ref:alpha 201-202 | ( 0 rule:alpha choice 201-202 | < Expected character in range from 'a' to 'z', but found 'H' :: ch:0 char-range @201 > : ( 0 ch:1 char-range 201-202 ) ) ) : ( 0 seq:1 repsep 202-202 | < None of choices matched input :: rep choice @202 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @202 | < None of choices matched input :: rule:alphaNum choice @202 | < Rule `alpha` didn't match :: ch:0 ref:alpha @202 | < None of choices matched input :: rule:alpha choice @202 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @202 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @202 > : < Expected '_', but found '}' :: ch:2 text @202 > > > : < Rule `num` didn't match :: ch:1 ref:num @202 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @202 > > > > : < Expected '.', but found '}' :: ch:1 text @202 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @202 > > > : < Rule `int` didn't match :: ch:1 ref:int @201 | < Sequence failed at entry 1 :: rule:int seqnc @201 | ( 0 seq:0 choice 201-201 | < Expected '-', but found 'H' :: ch:0 text @201 > : ( 0 ch:1 text 201-201 ) ) : < Rule `num` didn't match :: seq:1 ref:first @201 | < Expected character in range from '0' to '9', but found 'H' :: rule:num char-range @201 > > > > : ( 0 ch:2 ref:var 201-202 | ( 0 rule:var seqnc 201-202 | ( 0 seq:0 char-range 201-202 ) : ( 0 seq:1 repsep 202-202 | < None of choices matched input :: rep choice @202 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @202 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @202 | < None of choices matched input :: rule:alphaNum choice @202 | < Rule `alpha` didn't match :: ch:0 ref:alpha @202 | < None of choices matched input :: rule:alpha choice @202 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @202 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @202 > : < Expected '_', but found '}' :: ch:2 text @202 > > > : < Rule `num` didn't match :: ch:1 ref:num @202 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @202 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @202 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @202 | < Expected ',', but found '}' :: seq:0 text @202 > > > ) ) : ( 0 seq:4 ref:ws 202-202 | ( 0 rule:ws repsep 202-202 | ( 0 rep seqnc 202-202 | ( 0 seq:0 ref:spaces 202-202 | ( 0 rule:spaces repsep 202-202 | < Expected ' ', but found '}' :: rep text @202 > ) ) : ( 0 seq:1 choice 202-202 | < Rule `comment` didn't match :: ch:0 ref:comment @202 | < Sequence failed at entry 0 :: rule:comment seqnc @202 | < Expected '#', but found '}' :: seq:0 text @202 > > > : ( 0 ch:1 text 202-202 ) ) ) : < Expected '
', but found '}' :: sep text @202 > ) ) : ( 0 seq:5 text 202-203 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @204 | ( 0 seq:0 ref:ws 203-204 | ( 0 rule:ws repsep 203-204 | ( 0 rep seqnc 203-204 | ( 0 seq:0 ref:spaces 203-204 | ( 0 rule:spaces repsep 203-204 | ( 0 rep text 203-204 ) : ( 0 sep text 204-204 ) : < Expected ' ', but found '|' :: rep text @204 > ) ) : ( 0 seq:1 choice 204-204 | < Rule `comment` didn't match :: ch:0 ref:comment @204 | < Sequence failed at entry 0 :: rule:comment seqnc @204 | < Expected '#', but found '|' :: seq:0 text @204 > > > : ( 0 ch:1 text 204-204 ) ) ) : < Expected '
', but found '|' :: sep text @204 > ) ) : < Expected '&', but found '|' :: seq:1 text @204 > > ) ) : ( 0 sep seqnc 204-244 | ( 0 seq:0 ref:ws 204-204 | ( 0 rule:ws repsep 204-204 | ( 0 rep seqnc 204-204 | ( 0 seq:0 ref:spaces 204-204 | ( 0 rule:spaces repsep 204-204 | < Expected ' ', but found '|' :: rep text @204 > ) ) : ( 0 seq:1 choice 204-204 | < Rule `comment` didn't match :: ch:0 ref:comment @204 | < Sequence failed at entry 0 :: rule:comment seqnc @204 | < Expected '#', but found '|' :: seq:0 text @204 > > > : ( 0 ch:1 text 204-204 ) ) ) : < Expected '
', but found '|' :: sep text @204 > ) ) : ( 0 seq:1 text 204-205 ) : ( 0 seq:2 ref:ws 205-244 | ( 0 rule:ws repsep 205-244 | ( 0 rep seqnc 205-205 | ( 0 seq:0 ref:spaces 205-205 | ( 0 rule:spaces repsep 205-205 | < Expected ' ', but found '
' :: rep text @205 > ) ) : ( 0 seq:1 choice 205-205 | < Rule `comment` didn't match :: ch:0 ref:comment @205 | < Sequence failed at entry 0 :: rule:comment seqnc @205 | < Expected '#', but found '
' :: seq:0 text @205 > > > : ( 0 ch:1 text 205-205 ) ) ) : ( 0 sep text 205-206 ) : ( 0 rep seqnc 206-241 | ( 0 seq:0 ref:spaces 206-208 | ( 0 rule:spaces repsep 206-208 | ( 0 rep text 206-207 ) : ( 0 sep text 207-207 ) : ( 0 rep text 207-208 ) : ( 0 sep text 208-208 ) : < Expected ' ', but found '#' :: rep text @208 > ) ) : ( 0 seq:1 choice 208-241 | ( 0 ch:0 ref:comment 208-241 | ( 0 rule:comment seqnc 208-241 | ( 0 seq:0 text 208-209 ) : ( 0 seq:1 repsep 209-241 | ( 0 rep ref:commentChar 209-210 | ( 0 rule:commentChar not-char 209-210 ) ) : ( 0 sep text 210-210 ) : ( 0 rep ref:commentChar 210-211 | ( 0 rule:commentChar not-char 210-211 ) ) : ( 0 sep text 211-211 ) : ( 0 rep ref:commentChar 211-212 | ( 0 rule:commentChar not-char 211-212 ) ) : ( 0 sep text 212-212 ) : ( 0 rep ref:commentChar 212-213 | ( 0 rule:commentChar not-char 212-213 ) ) : ( 0 sep text 213-213 ) : ( 0 rep ref:commentChar 213-214 | ( 0 rule:commentChar not-char 213-214 ) ) : ( 0 sep text 214-214 ) : ( 0 rep ref:commentChar 214-215 | ( 0 rule:commentChar not-char 214-215 ) ) : ( 0 sep text 215-215 ) : ( 0 rep ref:commentChar 215-216 | ( 0 rule:commentChar not-char 215-216 ) ) : ( 0 sep text 216-216 ) : ( 0 rep ref:commentChar 216-217 | ( 0 rule:commentChar not-char 216-217 ) ) : ( 0 sep text 217-217 ) : ( 0 rep ref:commentChar 217-218 | ( 0 rule:commentChar not-char 217-218 ) ) : ( 0 sep text 218-218 ) : ( 0 rep ref:commentChar 218-219 | ( 0 rule:commentChar not-char 218-219 ) ) : ( 0 sep text 219-219 ) : ( 0 rep ref:commentChar 219-220 | ( 0 rule:commentChar not-char 219-220 ) ) : ( 0 sep text 220-220 ) : ( 0 rep ref:commentChar 220-221 | ( 0 rule:commentChar not-char 220-221 ) ) : ( 0 sep text 221-221 ) : ( 0 rep ref:commentChar 221-222 | ( 0 rule:commentChar not-char 221-222 ) ) : ( 0 sep text 222-222 ) : ( 0 rep ref:commentChar 222-223 | ( 0 rule:commentChar not-char 222-223 ) ) : ( 0 sep text 223-223 ) : ( 0 rep ref:commentChar 223-224 | ( 0 rule:commentChar not-char 223-224 ) ) : ( 0 sep text 224-224 ) : ( 0 rep ref:commentChar 224-225 | ( 0 rule:commentChar not-char 224-225 ) ) : ( 0 sep text 225-225 ) : ( 0 rep ref:commentChar 225-226 | ( 0 rule:commentChar not-char 225-226 ) ) : ( 0 sep text 226-226 ) : ( 0 rep ref:commentChar 226-227 | ( 0 rule:commentChar not-char 226-227 ) ) : ( 0 sep text 227-227 ) : ( 0 rep ref:commentChar 227-228 | ( 0 rule:commentChar not-char 227-228 ) ) : ( 0 sep text 228-228 ) : ( 0 rep ref:commentChar 228-229 | ( 0 rule:commentChar not-char 228-229 ) ) : ( 0 sep text 229-229 ) : ( 0 rep ref:commentChar 229-230 | ( 0 rule:commentChar not-char 229-230 ) ) : ( 0 sep text 230-230 ) : ( 0 rep ref:commentChar 230-231 | ( 0 rule:commentChar not-char 230-231 ) ) : ( 0 sep text 231-231 ) : ( 0 rep ref:commentChar 231-232 | ( 0 rule:commentChar not-char 231-232 ) ) : ( 0 sep text 232-232 ) : ( 0 rep ref:commentChar 232-233 | ( 0 rule:commentChar not-char 232-233 ) ) : ( 0 sep text 233-233 ) : ( 0 rep ref:commentChar 233-234 | ( 0 rule:commentChar not-char 233-234 ) ) : ( 0 sep text 234-234 ) : ( 0 rep ref:commentChar 234-235 | ( 0 rule:commentChar not-char 234-235 ) ) : ( 0 sep text 235-235 ) : ( 0 rep ref:commentChar 235-236 | ( 0 rule:commentChar not-char 235-236 ) ) : ( 0 sep text 236-236 ) : ( 0 rep ref:commentChar 236-237 | ( 0 rule:commentChar not-char 236-237 ) ) : ( 0 sep text 237-237 ) : ( 0 rep ref:commentChar 237-238 | ( 0 rule:commentChar not-char 237-238 ) ) : ( 0 sep text 238-238 ) : ( 0 rep ref:commentChar 238-239 | ( 0 rule:commentChar not-char 238-239 ) ) : ( 0 sep text 239-239 ) : ( 0 rep ref:commentChar 239-240 | ( 0 rule:commentChar not-char 239-240 ) ) : ( 0 sep text 240-240 ) : ( 0 rep ref:commentChar 240-241 | ( 0 rule:commentChar not-char 240-241 ) ) : ( 0 sep text 241-241 ) : < Rule `commentChar` didn't match :: rep ref:commentChar @241 | < Expected not to find '\n', but found '
' :: rule:commentChar not-char @241 > > ) ) ) ) ) : ( 0 sep text 241-242 ) : ( 0 rep seqnc 242-244 | ( 0 seq:0 ref:spaces 242-244 | ( 0 rule:spaces repsep 242-244 | ( 0 rep text 242-243 ) : ( 0 sep text 243-243 ) : ( 0 rep text 243-244 ) : ( 0 sep text 244-244 ) : < Expected ' ', but found 'h' :: rep text @244 > ) ) : ( 0 seq:1 choice 244-244 | < Rule `comment` didn't match :: ch:0 ref:comment @244 | < Sequence failed at entry 0 :: rule:comment seqnc @244 | < Expected '#', but found 'h' :: seq:0 text @244 > > > : ( 0 ch:1 text 244-244 ) ) ) : < Expected '
', but found 'h' :: sep text @244 > ) ) ) : ( 0 rep ref:disjunct 244-287 | ( 0 rule:disjunct repsep 244-287 | ( 0 rep ref:conjunct 244-287 | ( 0 rule:conjunct choice 244-287 | ( 0 ch:0 ref:record 244-287 | ( 0 rule:record seqnc 244-287 | ( 0 seq:0 ref:ident 244-253 | ( 0 rule:ident seqnc 244-253 | ( 0 seq:0 ref:alpha 244-245 | ( 0 rule:alpha choice 244-245 | ( 0 ch:0 char-range 244-245 ) ) ) : ( 0 seq:1 repsep 245-253 | ( 0 rep choice 245-246 | ( 0 ch:0 ref:alphaNum 245-246 | ( 0 rule:alphaNum choice 245-246 | ( 0 ch:0 ref:alpha 245-246 | ( 0 rule:alpha choice 245-246 | ( 0 ch:0 char-range 245-246 ) ) ) ) ) ) : ( 0 sep text 246-246 ) : ( 0 rep choice 246-247 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @246 | < None of choices matched input :: rule:alphaNum choice @246 | < Rule `alpha` didn't match :: ch:0 ref:alpha @246 | < None of choices matched input :: rule:alpha choice @246 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @246 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @246 > : < Expected '_', but found '.' :: ch:2 text @246 > > > : < Rule `num` didn't match :: ch:1 ref:num @246 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @246 > > > > : ( 0 ch:1 text 246-247 ) ) : ( 0 sep text 247-247 ) : ( 0 rep choice 247-248 | ( 0 ch:0 ref:alphaNum 247-248 | ( 0 rule:alphaNum choice 247-248 | ( 0 ch:0 ref:alpha 247-248 | ( 0 rule:alpha choice 247-248 | ( 0 ch:0 char-range 247-248 ) ) ) ) ) ) : ( 0 sep text 248-248 ) : ( 0 rep choice 248-249 | ( 0 ch:0 ref:alphaNum 248-249 | ( 0 rule:alphaNum choice 248-249 | ( 0 ch:0 ref:alpha 248-249 | ( 0 rule:alpha choice 248-249 | ( 0 ch:0 char-range 248-249 ) ) ) ) ) ) : ( 0 sep text 249-249 ) : ( 0 rep choice 249-250 | ( 0 ch:0 ref:alphaNum 249-250 | ( 0 rule:alphaNum choice 249-250 | ( 0 ch:0 ref:alpha 249-250 | ( 0 rule:alpha choice 249-250 | ( 0 ch:0 char-range 249-250 ) ) ) ) ) ) : ( 0 sep text 250-250 ) : ( 0 rep choice 250-251 | ( 0 ch:0 ref:alphaNum 250-251 | ( 0 rule:alphaNum choice 250-251 | ( 0 ch:0 ref:alpha 250-251 | ( 0 rule:alpha choice 250-251 | ( 0 ch:0 char-range 250-251 ) ) ) ) ) ) : ( 0 sep text 251-251 ) : ( 0 rep choice 251-252 | ( 0 ch:0 ref:alphaNum 251-252 | ( 0 rule:alphaNum choice 251-252 | ( 0 ch:0 ref:alpha 251-252 | ( 0 rule:alpha choice 251-252 | ( 0 ch:0 char-range 251-252 ) ) ) ) ) ) : ( 0 sep text 252-252 ) : ( 0 rep choice 252-253 | ( 0 ch:0 ref:alphaNum 252-253 | ( 0 rule:alphaNum choice 252-253 | ( 0 ch:0 ref:alpha 252-253 | ( 0 rule:alpha choice 252-253 | ( 0 ch:0 char-range 252-253 ) ) ) ) ) ) : ( 0 sep text 253-253 ) : < None of choices matched input :: rep choice @253 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @253 | < None of choices matched input :: rule:alphaNum choice @253 | < Rule `alpha` didn't match :: ch:0 ref:alpha @253 | < None of choices matched input :: rule:alpha choice @253 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @253 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @253 > : < Expected '_', but found '{' :: ch:2 text @253 > > > : < Rule `num` didn't match :: ch:1 ref:num @253 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @253 > > > > : < Expected '.', but found '{' :: ch:1 text @253 > > ) ) ) : ( 0 seq:1 text 253-254 ) : ( 0 seq:2 ref:ws 254-254 | ( 0 rule:ws repsep 254-254 | ( 0 rep seqnc 254-254 | ( 0 seq:0 ref:spaces 254-254 | ( 0 rule:spaces repsep 254-254 | < Expected ' ', but found 't' :: rep text @254 > ) ) : ( 0 seq:1 choice 254-254 | < Rule `comment` didn't match :: ch:0 ref:comment @254 | < Sequence failed at entry 0 :: rule:comment seqnc @254 | < Expected '#', but found 't' :: seq:0 text @254 > > > : ( 0 ch:1 text 254-254 ) ) ) : < Expected '
', but found 't' :: sep text @254 > ) ) : ( 0 seq:3 ref:recordAttrs 254-286 | ( 0 rule:recordAttrs repsep 254-286 | ( 0 rep choice 254-261 | ( 0 ch:0 ref:recordKeyValue 254-261 | ( 0 rule:recordKeyValue seqnc 254-261 | ( 0 seq:0 ref:ident 254-258 | ( 0 rule:ident seqnc 254-258 | ( 0 seq:0 ref:alpha 254-255 | ( 0 rule:alpha choice 254-255 | ( 0 ch:0 char-range 254-255 ) ) ) : ( 0 seq:1 repsep 255-258 | ( 0 rep choice 255-256 | ( 0 ch:0 ref:alphaNum 255-256 | ( 0 rule:alphaNum choice 255-256 | ( 0 ch:0 ref:alpha 255-256 | ( 0 rule:alpha choice 255-256 | ( 0 ch:0 char-range 255-256 ) ) ) ) ) ) : ( 0 sep text 256-256 ) : ( 0 rep choice 256-257 | ( 0 ch:0 ref:alphaNum 256-257 | ( 0 rule:alphaNum choice 256-257 | ( 0 ch:0 ref:alpha 256-257 | ( 0 rule:alpha choice 256-257 | ( 0 ch:0 char-range 256-257 ) ) ) ) ) ) : ( 0 sep text 257-257 ) : ( 0 rep choice 257-258 | ( 0 ch:0 ref:alphaNum 257-258 | ( 0 rule:alphaNum choice 257-258 | ( 0 ch:0 ref:alpha 257-258 | ( 0 rule:alpha choice 257-258 | ( 0 ch:0 char-range 257-258 ) ) ) ) ) ) : ( 0 sep text 258-258 ) : < None of choices matched input :: rep choice @258 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @258 | < None of choices matched input :: rule:alphaNum choice @258 | < Rule `alpha` didn't match :: ch:0 ref:alpha @258 | < None of choices matched input :: rule:alpha choice @258 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @258 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @258 > : < Expected '_', but found ':' :: ch:2 text @258 > > > : < Rule `num` didn't match :: ch:1 ref:num @258 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @258 > > > > : < Expected '.', but found ':' :: ch:1 text @258 > > ) ) ) : ( 0 seq:1 text 258-259 ) : ( 0 seq:2 ref:ws 259-260 | ( 0 rule:ws repsep 259-260 | ( 0 rep seqnc 259-260 | ( 0 seq:0 ref:spaces 259-260 | ( 0 rule:spaces repsep 259-260 | ( 0 rep text 259-260 ) : ( 0 sep text 260-260 ) : < Expected ' ', but found 'T' :: rep text @260 > ) ) : ( 0 seq:1 choice 260-260 | < Rule `comment` didn't match :: ch:0 ref:comment @260 | < Sequence failed at entry 0 :: rule:comment seqnc @260 | < Expected '#', but found 'T' :: seq:0 text @260 > > > : ( 0 ch:1 text 260-260 ) ) ) : < Expected '
', but found 'T' :: sep text @260 > ) ) : ( 0 seq:3 ref:term 260-261 | ( 0 rule:term choice 260-261 | < Rule `record` didn't match :: ch:0 ref:record @260 | < Sequence failed at entry 1 :: rule:record seqnc @261 | ( 0 seq:0 ref:ident 260-261 | ( 0 rule:ident seqnc 260-261 | ( 0 seq:0 ref:alpha 260-261 | ( 0 rule:alpha choice 260-261 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @260 > : ( 0 ch:1 char-range 260-261 ) ) ) : ( 0 seq:1 repsep 261-261 | < None of choices matched input :: rep choice @261 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @261 | < None of choices matched input :: rule:alphaNum choice @261 | < Rule `alpha` didn't match :: ch:0 ref:alpha @261 | < None of choices matched input :: rule:alpha choice @261 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @261 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @261 > : < Expected '_', but found ',' :: ch:2 text @261 > > > : < Rule `num` didn't match :: ch:1 ref:num @261 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @261 > > > > : < Expected '.', but found ',' :: ch:1 text @261 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @261 > > > : < Rule `int` didn't match :: ch:1 ref:int @260 | < Sequence failed at entry 1 :: rule:int seqnc @260 | ( 0 seq:0 choice 260-260 | < Expected '-', but found 'T' :: ch:0 text @260 > : ( 0 ch:1 text 260-260 ) ) : < Rule `num` didn't match :: seq:1 ref:first @260 | < Expected character in range from '0' to '9', but found 'T' :: rule:num char-range @260 > > > > : ( 0 ch:2 ref:var 260-261 | ( 0 rule:var seqnc 260-261 | ( 0 seq:0 char-range 260-261 ) : ( 0 seq:1 repsep 261-261 | < None of choices matched input :: rep choice @261 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @261 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @261 | < None of choices matched input :: rule:alphaNum choice @261 | < Rule `alpha` didn't match :: ch:0 ref:alpha @261 | < None of choices matched input :: rule:alpha choice @261 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @261 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @261 > : < Expected '_', but found ',' :: ch:2 text @261 > > > : < Rule `num` didn't match :: ch:1 ref:num @261 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @261 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 261-263 | ( 0 rule:commaSpace seqnc 261-263 | ( 0 seq:0 text 261-262 ) : ( 0 seq:1 ref:ws 262-263 | ( 0 rule:ws repsep 262-263 | ( 0 rep seqnc 262-263 | ( 0 seq:0 ref:spaces 262-263 | ( 0 rule:spaces repsep 262-263 | ( 0 rep text 262-263 ) : ( 0 sep text 263-263 ) : < Expected ' ', but found 's' :: rep text @263 > ) ) : ( 0 seq:1 choice 263-263 | < Rule `comment` didn't match :: ch:0 ref:comment @263 | < Sequence failed at entry 0 :: rule:comment seqnc @263 | < Expected '#', but found 's' :: seq:0 text @263 > > > : ( 0 ch:1 text 263-263 ) ) ) : < Expected '
', but found 's' :: sep text @263 > ) ) ) ) : ( 0 rep choice 263-270 | ( 0 ch:0 ref:recordKeyValue 263-270 | ( 0 rule:recordKeyValue seqnc 263-270 | ( 0 seq:0 ref:ident 263-267 | ( 0 rule:ident seqnc 263-267 | ( 0 seq:0 ref:alpha 263-264 | ( 0 rule:alpha choice 263-264 | ( 0 ch:0 char-range 263-264 ) ) ) : ( 0 seq:1 repsep 264-267 | ( 0 rep choice 264-265 | ( 0 ch:0 ref:alphaNum 264-265 | ( 0 rule:alphaNum choice 264-265 | ( 0 ch:0 ref:alpha 264-265 | ( 0 rule:alpha choice 264-265 | ( 0 ch:0 char-range 264-265 ) ) ) ) ) ) : ( 0 sep text 265-265 ) : ( 0 rep choice 265-266 | ( 0 ch:0 ref:alphaNum 265-266 | ( 0 rule:alphaNum choice 265-266 | ( 0 ch:0 ref:alpha 265-266 | ( 0 rule:alpha choice 265-266 | ( 0 ch:0 char-range 265-266 ) ) ) ) ) ) : ( 0 sep text 266-266 ) : ( 0 rep choice 266-267 | ( 0 ch:0 ref:alphaNum 266-267 | ( 0 rule:alphaNum choice 266-267 | ( 0 ch:0 ref:alpha 266-267 | ( 0 rule:alpha choice 266-267 | ( 0 ch:0 char-range 266-267 ) ) ) ) ) ) : ( 0 sep text 267-267 ) : < None of choices matched input :: rep choice @267 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @267 | < None of choices matched input :: rule:alphaNum choice @267 | < Rule `alpha` didn't match :: ch:0 ref:alpha @267 | < None of choices matched input :: rule:alpha choice @267 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @267 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @267 > : < Expected '_', but found ':' :: ch:2 text @267 > > > : < Rule `num` didn't match :: ch:1 ref:num @267 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @267 > > > > : < Expected '.', but found ':' :: ch:1 text @267 > > ) ) ) : ( 0 seq:1 text 267-268 ) : ( 0 seq:2 ref:ws 268-269 | ( 0 rule:ws repsep 268-269 | ( 0 rep seqnc 268-269 | ( 0 seq:0 ref:spaces 268-269 | ( 0 rule:spaces repsep 268-269 | ( 0 rep text 268-269 ) : ( 0 sep text 269-269 ) : < Expected ' ', but found 'S' :: rep text @269 > ) ) : ( 0 seq:1 choice 269-269 | < Rule `comment` didn't match :: ch:0 ref:comment @269 | < Sequence failed at entry 0 :: rule:comment seqnc @269 | < Expected '#', but found 'S' :: seq:0 text @269 > > > : ( 0 ch:1 text 269-269 ) ) ) : < Expected '
', but found 'S' :: sep text @269 > ) ) : ( 0 seq:3 ref:term 269-270 | ( 0 rule:term choice 269-270 | < Rule `record` didn't match :: ch:0 ref:record @269 | < Sequence failed at entry 1 :: rule:record seqnc @270 | ( 0 seq:0 ref:ident 269-270 | ( 0 rule:ident seqnc 269-270 | ( 0 seq:0 ref:alpha 269-270 | ( 0 rule:alpha choice 269-270 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @269 > : ( 0 ch:1 char-range 269-270 ) ) ) : ( 0 seq:1 repsep 270-270 | < None of choices matched input :: rep choice @270 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @270 | < None of choices matched input :: rule:alphaNum choice @270 | < Rule `alpha` didn't match :: ch:0 ref:alpha @270 | < None of choices matched input :: rule:alpha choice @270 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @270 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @270 > : < Expected '_', but found ',' :: ch:2 text @270 > > > : < Rule `num` didn't match :: ch:1 ref:num @270 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @270 > > > > : < Expected '.', but found ',' :: ch:1 text @270 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @270 > > > : < Rule `int` didn't match :: ch:1 ref:int @269 | < Sequence failed at entry 1 :: rule:int seqnc @269 | ( 0 seq:0 choice 269-269 | < Expected '-', but found 'S' :: ch:0 text @269 > : ( 0 ch:1 text 269-269 ) ) : < Rule `num` didn't match :: seq:1 ref:first @269 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @269 > > > > : ( 0 ch:2 ref:var 269-270 | ( 0 rule:var seqnc 269-270 | ( 0 seq:0 char-range 269-270 ) : ( 0 seq:1 repsep 270-270 | < None of choices matched input :: rep choice @270 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @270 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @270 | < None of choices matched input :: rule:alphaNum choice @270 | < Rule `alpha` didn't match :: ch:0 ref:alpha @270 | < None of choices matched input :: rule:alpha choice @270 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @270 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @270 > : < Expected '_', but found ',' :: ch:2 text @270 > > > : < Rule `num` didn't match :: ch:1 ref:num @270 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @270 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 270-272 | ( 0 rule:commaSpace seqnc 270-272 | ( 0 seq:0 text 270-271 ) : ( 0 seq:1 ref:ws 271-272 | ( 0 rule:ws repsep 271-272 | ( 0 rep seqnc 271-272 | ( 0 seq:0 ref:spaces 271-272 | ( 0 rule:spaces repsep 271-272 | ( 0 rep text 271-272 ) : ( 0 sep text 272-272 ) : < Expected ' ', but found 'h' :: rep text @272 > ) ) : ( 0 seq:1 choice 272-272 | < Rule `comment` didn't match :: ch:0 ref:comment @272 | < Sequence failed at entry 0 :: rule:comment seqnc @272 | < Expected '#', but found 'h' :: seq:0 text @272 > > > : ( 0 ch:1 text 272-272 ) ) ) : < Expected '
', but found 'h' :: sep text @272 > ) ) ) ) : ( 0 rep choice 272-286 | ( 0 ch:0 ref:recordKeyValue 272-286 | ( 0 rule:recordKeyValue seqnc 272-286 | ( 0 seq:0 ref:ident 272-281 | ( 0 rule:ident seqnc 272-281 | ( 0 seq:0 ref:alpha 272-273 | ( 0 rule:alpha choice 272-273 | ( 0 ch:0 char-range 272-273 ) ) ) : ( 0 seq:1 repsep 273-281 | ( 0 rep choice 273-274 | ( 0 ch:0 ref:alphaNum 273-274 | ( 0 rule:alphaNum choice 273-274 | ( 0 ch:0 ref:alpha 273-274 | ( 0 rule:alpha choice 273-274 | ( 0 ch:0 char-range 273-274 ) ) ) ) ) ) : ( 0 sep text 274-274 ) : ( 0 rep choice 274-275 | ( 0 ch:0 ref:alphaNum 274-275 | ( 0 rule:alphaNum choice 274-275 | ( 0 ch:0 ref:alpha 274-275 | ( 0 rule:alpha choice 274-275 | ( 0 ch:0 char-range 274-275 ) ) ) ) ) ) : ( 0 sep text 275-275 ) : ( 0 rep choice 275-276 | ( 0 ch:0 ref:alphaNum 275-276 | ( 0 rule:alphaNum choice 275-276 | ( 0 ch:0 ref:alpha 275-276 | ( 0 rule:alpha choice 275-276 | ( 0 ch:0 char-range 275-276 ) ) ) ) ) ) : ( 0 sep text 276-276 ) : ( 0 rep choice 276-277 | ( 0 ch:0 ref:alphaNum 276-277 | ( 0 rule:alphaNum choice 276-277 | ( 0 ch:0 ref:alpha 276-277 | ( 0 rule:alpha choice 276-277 | ( 0 ch:0 char-range 276-277 ) ) ) ) ) ) : ( 0 sep text 277-277 ) : ( 0 rep choice 277-278 | ( 0 ch:0 ref:alphaNum 277-278 | ( 0 rule:alphaNum choice 277-278 | ( 0 ch:0 ref:alpha 277-278 | ( 0 rule:alpha choice 277-278 | ( 0 ch:0 char-range 277-278 ) ) ) ) ) ) : ( 0 sep text 278-278 ) : ( 0 rep choice 278-279 | ( 0 ch:0 ref:alphaNum 278-279 | ( 0 rule:alphaNum choice 278-279 | ( 0 ch:0 ref:alpha 278-279 | ( 0 rule:alpha choice 278-279 | ( 0 ch:0 char-range 278-279 ) ) ) ) ) ) : ( 0 sep text 279-279 ) : ( 0 rep choice 279-280 | ( 0 ch:0 ref:alphaNum 279-280 | ( 0 rule:alphaNum choice 279-280 | ( 0 ch:0 ref:alpha 279-280 | ( 0 rule:alpha choice 279-280 | ( 0 ch:0 char-range 279-280 ) ) ) ) ) ) : ( 0 sep text 280-280 ) : ( 0 rep choice 280-281 | ( 0 ch:0 ref:alphaNum 280-281 | ( 0 rule:alphaNum choice 280-281 | ( 0 ch:0 ref:alpha 280-281 | ( 0 rule:alpha choice 280-281 | ( 0 ch:0 char-range 280-281 ) ) ) ) ) ) : ( 0 sep text 281-281 ) : < None of choices matched input :: rep choice @281 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @281 | < None of choices matched input :: rule:alphaNum choice @281 | < Rule `alpha` didn't match :: ch:0 ref:alpha @281 | < None of choices matched input :: rule:alpha choice @281 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @281 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @281 > : < Expected '_', but found ':' :: ch:2 text @281 > > > : < Rule `num` didn't match :: ch:1 ref:num @281 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @281 > > > > : < Expected '.', but found ':' :: ch:1 text @281 > > ) ) ) : ( 0 seq:1 text 281-282 ) : ( 0 seq:2 ref:ws 282-283 | ( 0 rule:ws repsep 282-283 | ( 0 rep seqnc 282-283 | ( 0 seq:0 ref:spaces 282-283 | ( 0 rule:spaces repsep 282-283 | ( 0 rep text 282-283 ) : ( 0 sep text 283-283 ) : < Expected ' ', but found '?' :: rep text @283 > ) ) : ( 0 seq:1 choice 283-283 | < Rule `comment` didn't match :: ch:0 ref:comment @283 | < Sequence failed at entry 0 :: rule:comment seqnc @283 | < Expected '#', but found '?' :: seq:0 text @283 > > > : ( 0 ch:1 text 283-283 ) ) ) : < Expected '
', but found '?' :: sep text @283 > ) ) : ( 0 seq:3 ref:term 283-286 | ( 0 rule:term choice 283-286 | < Rule `record` didn't match :: ch:0 ref:record @283 | < Sequence failed at entry 0 :: rule:record seqnc @283 | < Rule `ident` didn't match :: seq:0 ref:ident @283 | < Sequence failed at entry 0 :: rule:ident seqnc @283 | < Rule `alpha` didn't match :: seq:0 ref:alpha @283 | < None of choices matched input :: rule:alpha choice @283 | < Expected character in range from 'a' to 'z', but found '?' :: ch:0 char-range @283 > : < Expected character in range from 'A' to 'Z', but found '?' :: ch:1 char-range @283 > : < Expected '_', but found '?' :: ch:2 text @283 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @283 | < Sequence failed at entry 1 :: rule:int seqnc @283 | ( 0 seq:0 choice 283-283 | < Expected '-', but found '?' :: ch:0 text @283 > : ( 0 ch:1 text 283-283 ) ) : < Rule `num` didn't match :: seq:1 ref:first @283 | < Expected character in range from '0' to '9', but found '?' :: rule:num char-range @283 > > > > : < Rule `var` didn't match :: ch:2 ref:var @283 | < Sequence failed at entry 0 :: rule:var seqnc @283 | < Expected character in range from 'A' to 'Z', but found '?' :: seq:0 char-range @283 > > > : < Rule `string` didn't match :: ch:3 ref:string @283 | < Sequence failed at entry 0 :: rule:string seqnc @283 | < Expected '"', but found '?' :: seq:0 text @283 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @283 | < None of choices matched input :: rule:bool choice @283 | < Expected 'true', but found '???}' :: ch:0 text @283 > : < Expected 'false', but found '???}.' :: ch:1 text @283 > > > : < Rule `array` didn't match :: ch:5 ref:array @283 | < Sequence failed at entry 0 :: rule:array seqnc @283 | < Expected '[', but found '?' :: seq:0 text @283 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @283 | < Sequence failed at entry 0 :: rule:dict seqnc @283 | < Expected '{', but found '?' :: seq:0 text @283 > > > : ( 0 ch:7 ref:placeholder 283-286 | ( 0 rule:placeholder text 283-286 ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @286 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @286 | < Expected ',', but found '}' :: seq:0 text @286 > > > ) ) : ( 0 seq:4 ref:ws 286-286 | ( 0 rule:ws repsep 286-286 | ( 0 rep seqnc 286-286 | ( 0 seq:0 ref:spaces 286-286 | ( 0 rule:spaces repsep 286-286 | < Expected ' ', but found '}' :: rep text @286 > ) ) : ( 0 seq:1 choice 286-286 | < Rule `comment` didn't match :: ch:0 ref:comment @286 | < Sequence failed at entry 0 :: rule:comment seqnc @286 | < Expected '#', but found '}' :: seq:0 text @286 > > > : ( 0 ch:1 text 286-286 ) ) ) : < Expected '
', but found '}' :: sep text @286 > ) ) : ( 0 seq:5 text 286-287 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @287 | ( 0 seq:0 ref:ws 287-287 | ( 0 rule:ws repsep 287-287 | ( 0 rep seqnc 287-287 | ( 0 seq:0 ref:spaces 287-287 | ( 0 rule:spaces repsep 287-287 | < Expected ' ', but found '.' :: rep text @287 > ) ) : ( 0 seq:1 choice 287-287 | < Rule `comment` didn't match :: ch:0 ref:comment @287 | < Sequence failed at entry 0 :: rule:comment seqnc @287 | < Expected '#', but found '.' :: seq:0 text @287 > > > : ( 0 ch:1 text 287-287 ) ) ) : < Expected '
', but found '.' :: sep text @287 > ) ) : < Expected '&', but found '.' :: seq:1 text @287 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @287 | ( 0 seq:0 ref:ws 287-287 | ( 0 rule:ws repsep 287-287 | ( 0 rep seqnc 287-287 | ( 0 seq:0 ref:spaces 287-287 | ( 0 rule:spaces repsep 287-287 | < Expected ' ', but found '.' :: rep text @287 > ) ) : ( 0 seq:1 choice 287-287 | < Rule `comment` didn't match :: ch:0 ref:comment @287 | < Sequence failed at entry 0 :: rule:comment seqnc @287 | < Expected '#', but found '.' :: seq:0 text @287 > > > : ( 0 ch:1 text 287-287 ) ) ) : < Expected '
', but found '.' :: sep text @287 > ) ) : < Expected '|', but found '.' :: seq:1 text @287 > > ) : ( 0 seq:5 text 287-288 ) ) ) ) ) : ( 0 sep ref:ws 288-290 | ( 0 rule:ws repsep 288-290 | ( 0 rep seqnc 288-288 | ( 0 seq:0 ref:spaces 288-288 | ( 0 rule:spaces repsep 288-288 | < Expected ' ', but found '
' :: rep text @288 > ) ) : ( 0 seq:1 choice 288-288 | < Rule `comment` didn't match :: ch:0 ref:comment @288 | < Sequence failed at entry 0 :: rule:comment seqnc @288 | < Expected '#', but found '
' :: seq:0 text @288 > > > : ( 0 ch:1 text 288-288 ) ) ) : ( 0 sep text 288-289 ) : ( 0 rep seqnc 289-289 | ( 0 seq:0 ref:spaces 289-289 | ( 0 rule:spaces repsep 289-289 | < Expected ' ', but found '
' :: rep text @289 > ) ) : ( 0 seq:1 choice 289-289 | < Rule `comment` didn't match :: ch:0 ref:comment @289 | < Sequence failed at entry 0 :: rule:comment seqnc @289 | < Expected '#', but found '
' :: seq:0 text @289 > > > : ( 0 ch:1 text 289-289 ) ) ) : ( 0 sep text 289-290 ) : ( 0 rep seqnc 290-290 | ( 0 seq:0 ref:spaces 290-290 | ( 0 rule:spaces repsep 290-290 | < Expected ' ', but found 'h' :: rep text @290 > ) ) : ( 0 seq:1 choice 290-290 | < Rule `comment` didn't match :: ch:0 ref:comment @290 | < Sequence failed at entry 0 :: rule:comment seqnc @290 | < Expected '#', but found 'h' :: seq:0 text @290 > > > : ( 0 ch:1 text 290-290 ) ) ) : < Expected '
', but found 'h' :: sep text @290 > ) ) : ( 0 rep ref:statement 290-365 | ( 0 rule:statement choice 290-365 | ( 0 ch:0 ref:rule 290-365 | ( 0 rule:rule seqnc 290-365 | ( 0 seq:0 ref:record 290-340 | ( 0 rule:record seqnc 290-340 | ( 0 seq:0 ref:ident 290-298 | ( 0 rule:ident seqnc 290-298 | ( 0 seq:0 ref:alpha 290-291 | ( 0 rule:alpha choice 290-291 | ( 0 ch:0 char-range 290-291 ) ) ) : ( 0 seq:1 repsep 291-298 | ( 0 rep choice 291-292 | ( 0 ch:0 ref:alphaNum 291-292 | ( 0 rule:alphaNum choice 291-292 | ( 0 ch:0 ref:alpha 291-292 | ( 0 rule:alpha choice 291-292 | ( 0 ch:0 char-range 291-292 ) ) ) ) ) ) : ( 0 sep text 292-292 ) : ( 0 rep choice 292-293 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @292 | < None of choices matched input :: rule:alphaNum choice @292 | < Rule `alpha` didn't match :: ch:0 ref:alpha @292 | < None of choices matched input :: rule:alpha choice @292 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @292 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @292 > : < Expected '_', but found '.' :: ch:2 text @292 > > > : < Rule `num` didn't match :: ch:1 ref:num @292 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @292 > > > > : ( 0 ch:1 text 292-293 ) ) : ( 0 sep text 293-293 ) : ( 0 rep choice 293-294 | ( 0 ch:0 ref:alphaNum 293-294 | ( 0 rule:alphaNum choice 293-294 | ( 0 ch:0 ref:alpha 293-294 | ( 0 rule:alpha choice 293-294 | ( 0 ch:0 char-range 293-294 ) ) ) ) ) ) : ( 0 sep text 294-294 ) : ( 0 rep choice 294-295 | ( 0 ch:0 ref:alphaNum 294-295 | ( 0 rule:alphaNum choice 294-295 | ( 0 ch:0 ref:alpha 294-295 | ( 0 rule:alpha choice 294-295 | ( 0 ch:0 char-range 294-295 ) ) ) ) ) ) : ( 0 sep text 295-295 ) : ( 0 rep choice 295-296 | ( 0 ch:0 ref:alphaNum 295-296 | ( 0 rule:alphaNum choice 295-296 | ( 0 ch:0 ref:alpha 295-296 | ( 0 rule:alpha choice 295-296 | ( 0 ch:0 char-range 295-296 ) ) ) ) ) ) : ( 0 sep text 296-296 ) : ( 0 rep choice 296-297 | ( 0 ch:0 ref:alphaNum 296-297 | ( 0 rule:alphaNum choice 296-297 | ( 0 ch:0 ref:alpha 296-297 | ( 0 rule:alpha choice 296-297 | ( 0 ch:0 char-range 296-297 ) ) ) ) ) ) : ( 0 sep text 297-297 ) : ( 0 rep choice 297-298 | ( 0 ch:0 ref:alphaNum 297-298 | ( 0 rule:alphaNum choice 297-298 | ( 0 ch:0 ref:alpha 297-298 | ( 0 rule:alpha choice 297-298 | ( 0 ch:0 char-range 297-298 ) ) ) ) ) ) : ( 0 sep text 298-298 ) : < None of choices matched input :: rep choice @298 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @298 | < None of choices matched input :: rule:alphaNum choice @298 | < Rule `alpha` didn't match :: ch:0 ref:alpha @298 | < None of choices matched input :: rule:alpha choice @298 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @298 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @298 > : < Expected '_', but found '{' :: ch:2 text @298 > > > : < Rule `num` didn't match :: ch:1 ref:num @298 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @298 > > > > : < Expected '.', but found '{' :: ch:1 text @298 > > ) ) ) : ( 0 seq:1 text 298-299 ) : ( 0 seq:2 ref:ws 299-299 | ( 0 rule:ws repsep 299-299 | ( 0 rep seqnc 299-299 | ( 0 seq:0 ref:spaces 299-299 | ( 0 rule:spaces repsep 299-299 | < Expected ' ', but found 't' :: rep text @299 > ) ) : ( 0 seq:1 choice 299-299 | < Rule `comment` didn't match :: ch:0 ref:comment @299 | < Sequence failed at entry 0 :: rule:comment seqnc @299 | < Expected '#', but found 't' :: seq:0 text @299 > > > : ( 0 ch:1 text 299-299 ) ) ) : < Expected '
', but found 't' :: sep text @299 > ) ) : ( 0 seq:3 ref:recordAttrs 299-339 | ( 0 rule:recordAttrs repsep 299-339 | ( 0 rep choice 299-312 | ( 0 ch:0 ref:recordKeyValue 299-312 | ( 0 rule:recordKeyValue seqnc 299-312 | ( 0 seq:0 ref:ident 299-303 | ( 0 rule:ident seqnc 299-303 | ( 0 seq:0 ref:alpha 299-300 | ( 0 rule:alpha choice 299-300 | ( 0 ch:0 char-range 299-300 ) ) ) : ( 0 seq:1 repsep 300-303 | ( 0 rep choice 300-301 | ( 0 ch:0 ref:alphaNum 300-301 | ( 0 rule:alphaNum choice 300-301 | ( 0 ch:0 ref:alpha 300-301 | ( 0 rule:alpha choice 300-301 | ( 0 ch:0 char-range 300-301 ) ) ) ) ) ) : ( 0 sep text 301-301 ) : ( 0 rep choice 301-302 | ( 0 ch:0 ref:alphaNum 301-302 | ( 0 rule:alphaNum choice 301-302 | ( 0 ch:0 ref:alpha 301-302 | ( 0 rule:alpha choice 301-302 | ( 0 ch:0 char-range 301-302 ) ) ) ) ) ) : ( 0 sep text 302-302 ) : ( 0 rep choice 302-303 | ( 0 ch:0 ref:alphaNum 302-303 | ( 0 rule:alphaNum choice 302-303 | ( 0 ch:0 ref:alpha 302-303 | ( 0 rule:alpha choice 302-303 | ( 0 ch:0 char-range 302-303 ) ) ) ) ) ) : ( 0 sep text 303-303 ) : < None of choices matched input :: rep choice @303 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @303 | < None of choices matched input :: rule:alphaNum choice @303 | < Rule `alpha` didn't match :: ch:0 ref:alpha @303 | < None of choices matched input :: rule:alpha choice @303 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @303 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @303 > : < Expected '_', but found ':' :: ch:2 text @303 > > > : < Rule `num` didn't match :: ch:1 ref:num @303 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @303 > > > > : < Expected '.', but found ':' :: ch:1 text @303 > > ) ) ) : ( 0 seq:1 text 303-304 ) : ( 0 seq:2 ref:ws 304-305 | ( 0 rule:ws repsep 304-305 | ( 0 rep seqnc 304-305 | ( 0 seq:0 ref:spaces 304-305 | ( 0 rule:spaces repsep 304-305 | ( 0 rep text 304-305 ) : ( 0 sep text 305-305 ) : < Expected ' ', but found '"' :: rep text @305 > ) ) : ( 0 seq:1 choice 305-305 | < Rule `comment` didn't match :: ch:0 ref:comment @305 | < Sequence failed at entry 0 :: rule:comment seqnc @305 | < Expected '#', but found '"' :: seq:0 text @305 > > > : ( 0 ch:1 text 305-305 ) ) ) : < Expected '
', but found '"' :: sep text @305 > ) ) : ( 0 seq:3 ref:term 305-312 | ( 0 rule:term choice 305-312 | < Rule `record` didn't match :: ch:0 ref:record @305 | < Sequence failed at entry 0 :: rule:record seqnc @305 | < Rule `ident` didn't match :: seq:0 ref:ident @305 | < Sequence failed at entry 0 :: rule:ident seqnc @305 | < Rule `alpha` didn't match :: seq:0 ref:alpha @305 | < None of choices matched input :: rule:alpha choice @305 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @305 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @305 > : < Expected '_', but found '"' :: ch:2 text @305 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @305 | < Sequence failed at entry 1 :: rule:int seqnc @305 | ( 0 seq:0 choice 305-305 | < Expected '-', but found '"' :: ch:0 text @305 > : ( 0 ch:1 text 305-305 ) ) : < Rule `num` didn't match :: seq:1 ref:first @305 | < Expected character in range from '0' to '9', but found '"' :: rule:num char-range @305 > > > > : < Rule `var` didn't match :: ch:2 ref:var @305 | < Sequence failed at entry 0 :: rule:var seqnc @305 | < Expected character in range from 'A' to 'Z', but found '"' :: seq:0 char-range @305 > > > : ( 0 ch:3 ref:string 305-312 | ( 0 rule:string seqnc 305-312 | ( 0 seq:0 text 305-306 ) : ( 0 seq:1 repsep 306-311 | ( 0 rep ref:stringChar 306-307 | ( 0 rule:stringChar choice 306-307 | ( 0 ch:0 not-char 306-307 ) ) ) : ( 0 sep text 307-307 ) : ( 0 rep ref:stringChar 307-308 | ( 0 rule:stringChar choice 307-308 | ( 0 ch:0 not-char 307-308 ) ) ) : ( 0 sep text 308-308 ) : ( 0 rep ref:stringChar 308-309 | ( 0 rule:stringChar choice 308-309 | ( 0 ch:0 not-char 308-309 ) ) ) : ( 0 sep text 309-309 ) : ( 0 rep ref:stringChar 309-310 | ( 0 rule:stringChar choice 309-310 | ( 0 ch:0 not-char 309-310 ) ) ) : ( 0 sep text 310-310 ) : ( 0 rep ref:stringChar 310-311 | ( 0 rule:stringChar choice 310-311 | ( 0 ch:0 not-char 310-311 ) ) ) : ( 0 sep text 311-311 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @311 | < None of choices matched input :: rule:stringChar choice @311 | < Expected not to find '"', but found '"' :: ch:0 not-char @311 > : < Sequence failed at entry 0 :: ch:1 seqnc @311 | < Expected '\\', but found '"' :: seq:0 char @311 > > > > ) : ( 0 seq:2 text 311-312 ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 312-314 | ( 0 rule:commaSpace seqnc 312-314 | ( 0 seq:0 text 312-313 ) : ( 0 seq:1 ref:ws 313-314 | ( 0 rule:ws repsep 313-314 | ( 0 rep seqnc 313-314 | ( 0 seq:0 ref:spaces 313-314 | ( 0 rule:spaces repsep 313-314 | ( 0 rep text 313-314 ) : ( 0 sep text 314-314 ) : < Expected ' ', but found 's' :: rep text @314 > ) ) : ( 0 seq:1 choice 314-314 | < Rule `comment` didn't match :: ch:0 ref:comment @314 | < Sequence failed at entry 0 :: rule:comment seqnc @314 | < Expected '#', but found 's' :: seq:0 text @314 > > > : ( 0 ch:1 text 314-314 ) ) ) : < Expected '
', but found 's' :: sep text @314 > ) ) ) ) : ( 0 rep choice 314-321 | ( 0 ch:0 ref:recordKeyValue 314-321 | ( 0 rule:recordKeyValue seqnc 314-321 | ( 0 seq:0 ref:ident 314-318 | ( 0 rule:ident seqnc 314-318 | ( 0 seq:0 ref:alpha 314-315 | ( 0 rule:alpha choice 314-315 | ( 0 ch:0 char-range 314-315 ) ) ) : ( 0 seq:1 repsep 315-318 | ( 0 rep choice 315-316 | ( 0 ch:0 ref:alphaNum 315-316 | ( 0 rule:alphaNum choice 315-316 | ( 0 ch:0 ref:alpha 315-316 | ( 0 rule:alpha choice 315-316 | ( 0 ch:0 char-range 315-316 ) ) ) ) ) ) : ( 0 sep text 316-316 ) : ( 0 rep choice 316-317 | ( 0 ch:0 ref:alphaNum 316-317 | ( 0 rule:alphaNum choice 316-317 | ( 0 ch:0 ref:alpha 316-317 | ( 0 rule:alpha choice 316-317 | ( 0 ch:0 char-range 316-317 ) ) ) ) ) ) : ( 0 sep text 317-317 ) : ( 0 rep choice 317-318 | ( 0 ch:0 ref:alphaNum 317-318 | ( 0 rule:alphaNum choice 317-318 | ( 0 ch:0 ref:alpha 317-318 | ( 0 rule:alpha choice 317-318 | ( 0 ch:0 char-range 317-318 ) ) ) ) ) ) : ( 0 sep text 318-318 ) : < None of choices matched input :: rep choice @318 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @318 | < None of choices matched input :: rule:alphaNum choice @318 | < Rule `alpha` didn't match :: ch:0 ref:alpha @318 | < None of choices matched input :: rule:alpha choice @318 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @318 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @318 > : < Expected '_', but found ':' :: ch:2 text @318 > > > : < Rule `num` didn't match :: ch:1 ref:num @318 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @318 > > > > : < Expected '.', but found ':' :: ch:1 text @318 > > ) ) ) : ( 0 seq:1 text 318-319 ) : ( 0 seq:2 ref:ws 319-320 | ( 0 rule:ws repsep 319-320 | ( 0 rep seqnc 319-320 | ( 0 seq:0 ref:spaces 319-320 | ( 0 rule:spaces repsep 319-320 | ( 0 rep text 319-320 ) : ( 0 sep text 320-320 ) : < Expected ' ', but found 'S' :: rep text @320 > ) ) : ( 0 seq:1 choice 320-320 | < Rule `comment` didn't match :: ch:0 ref:comment @320 | < Sequence failed at entry 0 :: rule:comment seqnc @320 | < Expected '#', but found 'S' :: seq:0 text @320 > > > : ( 0 ch:1 text 320-320 ) ) ) : < Expected '
', but found 'S' :: sep text @320 > ) ) : ( 0 seq:3 ref:term 320-321 | ( 0 rule:term choice 320-321 | < Rule `record` didn't match :: ch:0 ref:record @320 | < Sequence failed at entry 1 :: rule:record seqnc @321 | ( 0 seq:0 ref:ident 320-321 | ( 0 rule:ident seqnc 320-321 | ( 0 seq:0 ref:alpha 320-321 | ( 0 rule:alpha choice 320-321 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @320 > : ( 0 ch:1 char-range 320-321 ) ) ) : ( 0 seq:1 repsep 321-321 | < None of choices matched input :: rep choice @321 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @321 | < None of choices matched input :: rule:alphaNum choice @321 | < Rule `alpha` didn't match :: ch:0 ref:alpha @321 | < None of choices matched input :: rule:alpha choice @321 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @321 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @321 > : < Expected '_', but found ',' :: ch:2 text @321 > > > : < Rule `num` didn't match :: ch:1 ref:num @321 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @321 > > > > : < Expected '.', but found ',' :: ch:1 text @321 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @321 > > > : < Rule `int` didn't match :: ch:1 ref:int @320 | < Sequence failed at entry 1 :: rule:int seqnc @320 | ( 0 seq:0 choice 320-320 | < Expected '-', but found 'S' :: ch:0 text @320 > : ( 0 ch:1 text 320-320 ) ) : < Rule `num` didn't match :: seq:1 ref:first @320 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @320 > > > > : ( 0 ch:2 ref:var 320-321 | ( 0 rule:var seqnc 320-321 | ( 0 seq:0 char-range 320-321 ) : ( 0 seq:1 repsep 321-321 | < None of choices matched input :: rep choice @321 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @321 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @321 | < None of choices matched input :: rule:alphaNum choice @321 | < Rule `alpha` didn't match :: ch:0 ref:alpha @321 | < None of choices matched input :: rule:alpha choice @321 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @321 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @321 > : < Expected '_', but found ',' :: ch:2 text @321 > > > : < Rule `num` didn't match :: ch:1 ref:num @321 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @321 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 321-323 | ( 0 rule:commaSpace seqnc 321-323 | ( 0 seq:0 text 321-322 ) : ( 0 seq:1 ref:ws 322-323 | ( 0 rule:ws repsep 322-323 | ( 0 rep seqnc 322-323 | ( 0 seq:0 ref:spaces 322-323 | ( 0 rule:spaces repsep 322-323 | ( 0 rep text 322-323 ) : ( 0 sep text 323-323 ) : < Expected ' ', but found 'h' :: rep text @323 > ) ) : ( 0 seq:1 choice 323-323 | < Rule `comment` didn't match :: ch:0 ref:comment @323 | < Sequence failed at entry 0 :: rule:comment seqnc @323 | < Expected '#', but found 'h' :: seq:0 text @323 > > > : ( 0 ch:1 text 323-323 ) ) ) : < Expected '
', but found 'h' :: sep text @323 > ) ) ) ) : ( 0 rep choice 323-339 | ( 0 ch:0 ref:recordKeyValue 323-339 | ( 0 rule:recordKeyValue seqnc 323-339 | ( 0 seq:0 ref:ident 323-332 | ( 0 rule:ident seqnc 323-332 | ( 0 seq:0 ref:alpha 323-324 | ( 0 rule:alpha choice 323-324 | ( 0 ch:0 char-range 323-324 ) ) ) : ( 0 seq:1 repsep 324-332 | ( 0 rep choice 324-325 | ( 0 ch:0 ref:alphaNum 324-325 | ( 0 rule:alphaNum choice 324-325 | ( 0 ch:0 ref:alpha 324-325 | ( 0 rule:alpha choice 324-325 | ( 0 ch:0 char-range 324-325 ) ) ) ) ) ) : ( 0 sep text 325-325 ) : ( 0 rep choice 325-326 | ( 0 ch:0 ref:alphaNum 325-326 | ( 0 rule:alphaNum choice 325-326 | ( 0 ch:0 ref:alpha 325-326 | ( 0 rule:alpha choice 325-326 | ( 0 ch:0 char-range 325-326 ) ) ) ) ) ) : ( 0 sep text 326-326 ) : ( 0 rep choice 326-327 | ( 0 ch:0 ref:alphaNum 326-327 | ( 0 rule:alphaNum choice 326-327 | ( 0 ch:0 ref:alpha 326-327 | ( 0 rule:alpha choice 326-327 | ( 0 ch:0 char-range 326-327 ) ) ) ) ) ) : ( 0 sep text 327-327 ) : ( 0 rep choice 327-328 | ( 0 ch:0 ref:alphaNum 327-328 | ( 0 rule:alphaNum choice 327-328 | ( 0 ch:0 ref:alpha 327-328 | ( 0 rule:alpha choice 327-328 | ( 0 ch:0 char-range 327-328 ) ) ) ) ) ) : ( 0 sep text 328-328 ) : ( 0 rep choice 328-329 | ( 0 ch:0 ref:alphaNum 328-329 | ( 0 rule:alphaNum choice 328-329 | ( 0 ch:0 ref:alpha 328-329 | ( 0 rule:alpha choice 328-329 | ( 0 ch:0 char-range 328-329 ) ) ) ) ) ) : ( 0 sep text 329-329 ) : ( 0 rep choice 329-330 | ( 0 ch:0 ref:alphaNum 329-330 | ( 0 rule:alphaNum choice 329-330 | ( 0 ch:0 ref:alpha 329-330 | ( 0 rule:alpha choice 329-330 | ( 0 ch:0 char-range 329-330 ) ) ) ) ) ) : ( 0 sep text 330-330 ) : ( 0 rep choice 330-331 | ( 0 ch:0 ref:alphaNum 330-331 | ( 0 rule:alphaNum choice 330-331 | ( 0 ch:0 ref:alpha 330-331 | ( 0 rule:alpha choice 330-331 | ( 0 ch:0 char-range 330-331 ) ) ) ) ) ) : ( 0 sep text 331-331 ) : ( 0 rep choice 331-332 | ( 0 ch:0 ref:alphaNum 331-332 | ( 0 rule:alphaNum choice 331-332 | ( 0 ch:0 ref:alpha 331-332 | ( 0 rule:alpha choice 331-332 | ( 0 ch:0 char-range 331-332 ) ) ) ) ) ) : ( 0 sep text 332-332 ) : < None of choices matched input :: rep choice @332 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @332 | < None of choices matched input :: rule:alphaNum choice @332 | < Rule `alpha` didn't match :: ch:0 ref:alpha @332 | < None of choices matched input :: rule:alpha choice @332 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @332 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @332 > : < Expected '_', but found ':' :: ch:2 text @332 > > > : < Rule `num` didn't match :: ch:1 ref:num @332 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @332 > > > > : < Expected '.', but found ':' :: ch:1 text @332 > > ) ) ) : ( 0 seq:1 text 332-333 ) : ( 0 seq:2 ref:ws 333-334 | ( 0 rule:ws repsep 333-334 | ( 0 rep seqnc 333-334 | ( 0 seq:0 ref:spaces 333-334 | ( 0 rule:spaces repsep 333-334 | ( 0 rep text 333-334 ) : ( 0 sep text 334-334 ) : < Expected ' ', but found 'f' :: rep text @334 > ) ) : ( 0 seq:1 choice 334-334 | < Rule `comment` didn't match :: ch:0 ref:comment @334 | < Sequence failed at entry 0 :: rule:comment seqnc @334 | < Expected '#', but found 'f' :: seq:0 text @334 > > > : ( 0 ch:1 text 334-334 ) ) ) : < Expected '
', but found 'f' :: sep text @334 > ) ) : ( 0 seq:3 ref:term 334-339 | ( 0 rule:term choice 334-339 | < Rule `record` didn't match :: ch:0 ref:record @334 | < Sequence failed at entry 1 :: rule:record seqnc @339 | ( 0 seq:0 ref:ident 334-339 | ( 0 rule:ident seqnc 334-339 | ( 0 seq:0 ref:alpha 334-335 | ( 0 rule:alpha choice 334-335 | ( 0 ch:0 char-range 334-335 ) ) ) : ( 0 seq:1 repsep 335-339 | ( 0 rep choice 335-336 | ( 0 ch:0 ref:alphaNum 335-336 | ( 0 rule:alphaNum choice 335-336 | ( 0 ch:0 ref:alpha 335-336 | ( 0 rule:alpha choice 335-336 | ( 0 ch:0 char-range 335-336 ) ) ) ) ) ) : ( 0 sep text 336-336 ) : ( 0 rep choice 336-337 | ( 0 ch:0 ref:alphaNum 336-337 | ( 0 rule:alphaNum choice 336-337 | ( 0 ch:0 ref:alpha 336-337 | ( 0 rule:alpha choice 336-337 | ( 0 ch:0 char-range 336-337 ) ) ) ) ) ) : ( 0 sep text 337-337 ) : ( 0 rep choice 337-338 | ( 0 ch:0 ref:alphaNum 337-338 | ( 0 rule:alphaNum choice 337-338 | ( 0 ch:0 ref:alpha 337-338 | ( 0 rule:alpha choice 337-338 | ( 0 ch:0 char-range 337-338 ) ) ) ) ) ) : ( 0 sep text 338-338 ) : ( 0 rep choice 338-339 | ( 0 ch:0 ref:alphaNum 338-339 | ( 0 rule:alphaNum choice 338-339 | ( 0 ch:0 ref:alpha 338-339 | ( 0 rule:alpha choice 338-339 | ( 0 ch:0 char-range 338-339 ) ) ) ) ) ) : ( 0 sep text 339-339 ) : < None of choices matched input :: rep choice @339 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @339 | < None of choices matched input :: rule:alphaNum choice @339 | < Rule `alpha` didn't match :: ch:0 ref:alpha @339 | < None of choices matched input :: rule:alpha choice @339 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @339 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @339 > : < Expected '_', but found '}' :: ch:2 text @339 > > > : < Rule `num` didn't match :: ch:1 ref:num @339 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @339 > > > > : < Expected '.', but found '}' :: ch:1 text @339 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @339 > > > : < Rule `int` didn't match :: ch:1 ref:int @334 | < Sequence failed at entry 1 :: rule:int seqnc @334 | ( 0 seq:0 choice 334-334 | < Expected '-', but found 'f' :: ch:0 text @334 > : ( 0 ch:1 text 334-334 ) ) : < Rule `num` didn't match :: seq:1 ref:first @334 | < Expected character in range from '0' to '9', but found 'f' :: rule:num char-range @334 > > > > : < Rule `var` didn't match :: ch:2 ref:var @334 | < Sequence failed at entry 0 :: rule:var seqnc @334 | < Expected character in range from 'A' to 'Z', but found 'f' :: seq:0 char-range @334 > > > : < Rule `string` didn't match :: ch:3 ref:string @334 | < Sequence failed at entry 0 :: rule:string seqnc @334 | < Expected '"', but found 'f' :: seq:0 text @334 > > > : ( 0 ch:4 ref:bool 334-339 | ( 0 rule:bool choice 334-339 | < Expected 'true', but found 'fals' :: ch:0 text @334 > : ( 0 ch:1 text 334-339 ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @339 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @339 | < Expected ',', but found '}' :: seq:0 text @339 > > > ) ) : ( 0 seq:4 ref:ws 339-339 | ( 0 rule:ws repsep 339-339 | ( 0 rep seqnc 339-339 | ( 0 seq:0 ref:spaces 339-339 | ( 0 rule:spaces repsep 339-339 | < Expected ' ', but found '}' :: rep text @339 > ) ) : ( 0 seq:1 choice 339-339 | < Rule `comment` didn't match :: ch:0 ref:comment @339 | < Sequence failed at entry 0 :: rule:comment seqnc @339 | < Expected '#', but found '}' :: seq:0 text @339 > > > : ( 0 ch:1 text 339-339 ) ) ) : < Expected '
', but found '}' :: sep text @339 > ) ) : ( 0 seq:5 text 339-340 ) ) ) : ( 0 seq:1 ref:ws 340-341 | ( 0 rule:ws repsep 340-341 | ( 0 rep seqnc 340-341 | ( 0 seq:0 ref:spaces 340-341 | ( 0 rule:spaces repsep 340-341 | ( 0 rep text 340-341 ) : ( 0 sep text 341-341 ) : < Expected ' ', but found ':' :: rep text @341 > ) ) : ( 0 seq:1 choice 341-341 | < Rule `comment` didn't match :: ch:0 ref:comment @341 | < Sequence failed at entry 0 :: rule:comment seqnc @341 | < Expected '#', but found ':' :: seq:0 text @341 > > > : ( 0 ch:1 text 341-341 ) ) ) : < Expected '
', but found ':' :: sep text @341 > ) ) : ( 0 seq:2 text 341-343 ) : ( 0 seq:3 ref:ws 343-346 | ( 0 rule:ws repsep 343-346 | ( 0 rep seqnc 343-343 | ( 0 seq:0 ref:spaces 343-343 | ( 0 rule:spaces repsep 343-343 | < Expected ' ', but found '
' :: rep text @343 > ) ) : ( 0 seq:1 choice 343-343 | < Rule `comment` didn't match :: ch:0 ref:comment @343 | < Sequence failed at entry 0 :: rule:comment seqnc @343 | < Expected '#', but found '
' :: seq:0 text @343 > > > : ( 0 ch:1 text 343-343 ) ) ) : ( 0 sep text 343-344 ) : ( 0 rep seqnc 344-346 | ( 0 seq:0 ref:spaces 344-346 | ( 0 rule:spaces repsep 344-346 | ( 0 rep text 344-345 ) : ( 0 sep text 345-345 ) : ( 0 rep text 345-346 ) : ( 0 sep text 346-346 ) : < Expected ' ', but found 'a' :: rep text @346 > ) ) : ( 0 seq:1 choice 346-346 | < Rule `comment` didn't match :: ch:0 ref:comment @346 | < Sequence failed at entry 0 :: rule:comment seqnc @346 | < Expected '#', but found 'a' :: seq:0 text @346 > > > : ( 0 ch:1 text 346-346 ) ) ) : < Expected '
', but found 'a' :: sep text @346 > ) ) : ( 0 seq:4 repsep 346-364 | ( 0 rep ref:disjunct 346-364 | ( 0 rule:disjunct repsep 346-364 | ( 0 rep ref:conjunct 346-364 | ( 0 rule:conjunct choice 346-364 | ( 0 ch:0 ref:record 346-364 | ( 0 rule:record seqnc 346-364 | ( 0 seq:0 ref:ident 346-355 | ( 0 rule:ident seqnc 346-355 | ( 0 seq:0 ref:alpha 346-347 | ( 0 rule:alpha choice 346-347 | ( 0 ch:0 char-range 346-347 ) ) ) : ( 0 seq:1 repsep 347-355 | ( 0 rep choice 347-348 | ( 0 ch:0 ref:alphaNum 347-348 | ( 0 rule:alphaNum choice 347-348 | ( 0 ch:0 ref:alpha 347-348 | ( 0 rule:alpha choice 347-348 | ( 0 ch:0 char-range 347-348 ) ) ) ) ) ) : ( 0 sep text 348-348 ) : ( 0 rep choice 348-349 | ( 0 ch:0 ref:alphaNum 348-349 | ( 0 rule:alphaNum choice 348-349 | ( 0 ch:0 ref:alpha 348-349 | ( 0 rule:alpha choice 348-349 | ( 0 ch:0 char-range 348-349 ) ) ) ) ) ) : ( 0 sep text 349-349 ) : ( 0 rep choice 349-350 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @349 | < None of choices matched input :: rule:alphaNum choice @349 | < Rule `alpha` didn't match :: ch:0 ref:alpha @349 | < None of choices matched input :: rule:alpha choice @349 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @349 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @349 > : < Expected '_', but found '.' :: ch:2 text @349 > > > : < Rule `num` didn't match :: ch:1 ref:num @349 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @349 > > > > : ( 0 ch:1 text 349-350 ) ) : ( 0 sep text 350-350 ) : ( 0 rep choice 350-351 | ( 0 ch:0 ref:alphaNum 350-351 | ( 0 rule:alphaNum choice 350-351 | ( 0 ch:0 ref:alpha 350-351 | ( 0 rule:alpha choice 350-351 | ( 0 ch:0 char-range 350-351 ) ) ) ) ) ) : ( 0 sep text 351-351 ) : ( 0 rep choice 351-352 | ( 0 ch:0 ref:alphaNum 351-352 | ( 0 rule:alphaNum choice 351-352 | ( 0 ch:0 ref:alpha 351-352 | ( 0 rule:alpha choice 351-352 | ( 0 ch:0 char-range 351-352 ) ) ) ) ) ) : ( 0 sep text 352-352 ) : ( 0 rep choice 352-353 | ( 0 ch:0 ref:alphaNum 352-353 | ( 0 rule:alphaNum choice 352-353 | ( 0 ch:0 ref:alpha 352-353 | ( 0 rule:alpha choice 352-353 | ( 0 ch:0 char-range 352-353 ) ) ) ) ) ) : ( 0 sep text 353-353 ) : ( 0 rep choice 353-354 | ( 0 ch:0 ref:alphaNum 353-354 | ( 0 rule:alphaNum choice 353-354 | ( 0 ch:0 ref:alpha 353-354 | ( 0 rule:alpha choice 353-354 | ( 0 ch:0 char-range 353-354 ) ) ) ) ) ) : ( 0 sep text 354-354 ) : ( 0 rep choice 354-355 | ( 0 ch:0 ref:alphaNum 354-355 | ( 0 rule:alphaNum choice 354-355 | ( 0 ch:0 ref:alpha 354-355 | ( 0 rule:alpha choice 354-355 | ( 0 ch:0 char-range 354-355 ) ) ) ) ) ) : ( 0 sep text 355-355 ) : < None of choices matched input :: rep choice @355 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @355 | < None of choices matched input :: rule:alphaNum choice @355 | < Rule `alpha` didn't match :: ch:0 ref:alpha @355 | < None of choices matched input :: rule:alpha choice @355 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @355 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @355 > : < Expected '_', but found '{' :: ch:2 text @355 > > > : < Rule `num` didn't match :: ch:1 ref:num @355 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @355 > > > > : < Expected '.', but found '{' :: ch:1 text @355 > > ) ) ) : ( 0 seq:1 text 355-356 ) : ( 0 seq:2 ref:ws 356-356 | ( 0 rule:ws repsep 356-356 | ( 0 rep seqnc 356-356 | ( 0 seq:0 ref:spaces 356-356 | ( 0 rule:spaces repsep 356-356 | < Expected ' ', but found 's' :: rep text @356 > ) ) : ( 0 seq:1 choice 356-356 | < Rule `comment` didn't match :: ch:0 ref:comment @356 | < Sequence failed at entry 0 :: rule:comment seqnc @356 | < Expected '#', but found 's' :: seq:0 text @356 > > > : ( 0 ch:1 text 356-356 ) ) ) : < Expected '
', but found 's' :: sep text @356 > ) ) : ( 0 seq:3 ref:recordAttrs 356-363 | ( 0 rule:recordAttrs repsep 356-363 | ( 0 rep choice 356-363 | ( 0 ch:0 ref:recordKeyValue 356-363 | ( 0 rule:recordKeyValue seqnc 356-363 | ( 0 seq:0 ref:ident 356-360 | ( 0 rule:ident seqnc 356-360 | ( 0 seq:0 ref:alpha 356-357 | ( 0 rule:alpha choice 356-357 | ( 0 ch:0 char-range 356-357 ) ) ) : ( 0 seq:1 repsep 357-360 | ( 0 rep choice 357-358 | ( 0 ch:0 ref:alphaNum 357-358 | ( 0 rule:alphaNum choice 357-358 | ( 0 ch:0 ref:alpha 357-358 | ( 0 rule:alpha choice 357-358 | ( 0 ch:0 char-range 357-358 ) ) ) ) ) ) : ( 0 sep text 358-358 ) : ( 0 rep choice 358-359 | ( 0 ch:0 ref:alphaNum 358-359 | ( 0 rule:alphaNum choice 358-359 | ( 0 ch:0 ref:alpha 358-359 | ( 0 rule:alpha choice 358-359 | ( 0 ch:0 char-range 358-359 ) ) ) ) ) ) : ( 0 sep text 359-359 ) : ( 0 rep choice 359-360 | ( 0 ch:0 ref:alphaNum 359-360 | ( 0 rule:alphaNum choice 359-360 | ( 0 ch:0 ref:alpha 359-360 | ( 0 rule:alpha choice 359-360 | ( 0 ch:0 char-range 359-360 ) ) ) ) ) ) : ( 0 sep text 360-360 ) : < None of choices matched input :: rep choice @360 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @360 | < None of choices matched input :: rule:alphaNum choice @360 | < Rule `alpha` didn't match :: ch:0 ref:alpha @360 | < None of choices matched input :: rule:alpha choice @360 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @360 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @360 > : < Expected '_', but found ':' :: ch:2 text @360 > > > : < Rule `num` didn't match :: ch:1 ref:num @360 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @360 > > > > : < Expected '.', but found ':' :: ch:1 text @360 > > ) ) ) : ( 0 seq:1 text 360-361 ) : ( 0 seq:2 ref:ws 361-362 | ( 0 rule:ws repsep 361-362 | ( 0 rep seqnc 361-362 | ( 0 seq:0 ref:spaces 361-362 | ( 0 rule:spaces repsep 361-362 | ( 0 rep text 361-362 ) : ( 0 sep text 362-362 ) : < Expected ' ', but found 'S' :: rep text @362 > ) ) : ( 0 seq:1 choice 362-362 | < Rule `comment` didn't match :: ch:0 ref:comment @362 | < Sequence failed at entry 0 :: rule:comment seqnc @362 | < Expected '#', but found 'S' :: seq:0 text @362 > > > : ( 0 ch:1 text 362-362 ) ) ) : < Expected '
', but found 'S' :: sep text @362 > ) ) : ( 0 seq:3 ref:term 362-363 | ( 0 rule:term choice 362-363 | < Rule `record` didn't match :: ch:0 ref:record @362 | < Sequence failed at entry 1 :: rule:record seqnc @363 | ( 0 seq:0 ref:ident 362-363 | ( 0 rule:ident seqnc 362-363 | ( 0 seq:0 ref:alpha 362-363 | ( 0 rule:alpha choice 362-363 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @362 > : ( 0 ch:1 char-range 362-363 ) ) ) : ( 0 seq:1 repsep 363-363 | < None of choices matched input :: rep choice @363 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @363 | < None of choices matched input :: rule:alphaNum choice @363 | < Rule `alpha` didn't match :: ch:0 ref:alpha @363 | < None of choices matched input :: rule:alpha choice @363 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @363 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @363 > : < Expected '_', but found '}' :: ch:2 text @363 > > > : < Rule `num` didn't match :: ch:1 ref:num @363 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @363 > > > > : < Expected '.', but found '}' :: ch:1 text @363 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @363 > > > : < Rule `int` didn't match :: ch:1 ref:int @362 | < Sequence failed at entry 1 :: rule:int seqnc @362 | ( 0 seq:0 choice 362-362 | < Expected '-', but found 'S' :: ch:0 text @362 > : ( 0 ch:1 text 362-362 ) ) : < Rule `num` didn't match :: seq:1 ref:first @362 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @362 > > > > : ( 0 ch:2 ref:var 362-363 | ( 0 rule:var seqnc 362-363 | ( 0 seq:0 char-range 362-363 ) : ( 0 seq:1 repsep 363-363 | < None of choices matched input :: rep choice @363 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @363 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @363 | < None of choices matched input :: rule:alphaNum choice @363 | < Rule `alpha` didn't match :: ch:0 ref:alpha @363 | < None of choices matched input :: rule:alpha choice @363 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @363 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @363 > : < Expected '_', but found '}' :: ch:2 text @363 > > > : < Rule `num` didn't match :: ch:1 ref:num @363 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @363 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @363 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @363 | < Expected ',', but found '}' :: seq:0 text @363 > > > ) ) : ( 0 seq:4 ref:ws 363-363 | ( 0 rule:ws repsep 363-363 | ( 0 rep seqnc 363-363 | ( 0 seq:0 ref:spaces 363-363 | ( 0 rule:spaces repsep 363-363 | < Expected ' ', but found '}' :: rep text @363 > ) ) : ( 0 seq:1 choice 363-363 | < Rule `comment` didn't match :: ch:0 ref:comment @363 | < Sequence failed at entry 0 :: rule:comment seqnc @363 | < Expected '#', but found '}' :: seq:0 text @363 > > > : ( 0 ch:1 text 363-363 ) ) ) : < Expected '
', but found '}' :: sep text @363 > ) ) : ( 0 seq:5 text 363-364 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @364 | ( 0 seq:0 ref:ws 364-364 | ( 0 rule:ws repsep 364-364 | ( 0 rep seqnc 364-364 | ( 0 seq:0 ref:spaces 364-364 | ( 0 rule:spaces repsep 364-364 | < Expected ' ', but found '.' :: rep text @364 > ) ) : ( 0 seq:1 choice 364-364 | < Rule `comment` didn't match :: ch:0 ref:comment @364 | < Sequence failed at entry 0 :: rule:comment seqnc @364 | < Expected '#', but found '.' :: seq:0 text @364 > > > : ( 0 ch:1 text 364-364 ) ) ) : < Expected '
', but found '.' :: sep text @364 > ) ) : < Expected '&', but found '.' :: seq:1 text @364 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @364 | ( 0 seq:0 ref:ws 364-364 | ( 0 rule:ws repsep 364-364 | ( 0 rep seqnc 364-364 | ( 0 seq:0 ref:spaces 364-364 | ( 0 rule:spaces repsep 364-364 | < Expected ' ', but found '.' :: rep text @364 > ) ) : ( 0 seq:1 choice 364-364 | < Rule `comment` didn't match :: ch:0 ref:comment @364 | < Sequence failed at entry 0 :: rule:comment seqnc @364 | < Expected '#', but found '.' :: seq:0 text @364 > > > : ( 0 ch:1 text 364-364 ) ) ) : < Expected '
', but found '.' :: sep text @364 > ) ) : < Expected '|', but found '.' :: seq:1 text @364 > > ) : ( 0 seq:5 text 364-365 ) ) ) ) ) : ( 0 sep ref:ws 365-392 | ( 0 rule:ws repsep 365-392 | ( 0 rep seqnc 365-365 | ( 0 seq:0 ref:spaces 365-365 | ( 0 rule:spaces repsep 365-365 | < Expected ' ', but found '
' :: rep text @365 > ) ) : ( 0 seq:1 choice 365-365 | < Rule `comment` didn't match :: ch:0 ref:comment @365 | < Sequence failed at entry 0 :: rule:comment seqnc @365 | < Expected '#', but found '
' :: seq:0 text @365 > > > : ( 0 ch:1 text 365-365 ) ) ) : ( 0 sep text 365-366 ) : ( 0 rep seqnc 366-391 | ( 0 seq:0 ref:spaces 366-366 | ( 0 rule:spaces repsep 366-366 | < Expected ' ', but found '#' :: rep text @366 > ) ) : ( 0 seq:1 choice 366-391 | ( 0 ch:0 ref:comment 366-391 | ( 0 rule:comment seqnc 366-391 | ( 0 seq:0 text 366-367 ) : ( 0 seq:1 repsep 367-391 | ( 0 rep ref:commentChar 367-368 | ( 0 rule:commentChar not-char 367-368 ) ) : ( 0 sep text 368-368 ) : ( 0 rep ref:commentChar 368-369 | ( 0 rule:commentChar not-char 368-369 ) ) : ( 0 sep text 369-369 ) : ( 0 rep ref:commentChar 369-370 | ( 0 rule:commentChar not-char 369-370 ) ) : ( 0 sep text 370-370 ) : ( 0 rep ref:commentChar 370-371 | ( 0 rule:commentChar not-char 370-371 ) ) : ( 0 sep text 371-371 ) : ( 0 rep ref:commentChar 371-372 | ( 0 rule:commentChar not-char 371-372 ) ) : ( 0 sep text 372-372 ) : ( 0 rep ref:commentChar 372-373 | ( 0 rule:commentChar not-char 372-373 ) ) : ( 0 sep text 373-373 ) : ( 0 rep ref:commentChar 373-374 | ( 0 rule:commentChar not-char 373-374 ) ) : ( 0 sep text 374-374 ) : ( 0 rep ref:commentChar 374-375 | ( 0 rule:commentChar not-char 374-375 ) ) : ( 0 sep text 375-375 ) : ( 0 rep ref:commentChar 375-376 | ( 0 rule:commentChar not-char 375-376 ) ) : ( 0 sep text 376-376 ) : ( 0 rep ref:commentChar 376-377 | ( 0 rule:commentChar not-char 376-377 ) ) : ( 0 sep text 377-377 ) : ( 0 rep ref:commentChar 377-378 | ( 0 rule:commentChar not-char 377-378 ) ) : ( 0 sep text 378-378 ) : ( 0 rep ref:commentChar 378-379 | ( 0 rule:commentChar not-char 378-379 ) ) : ( 0 sep text 379-379 ) : ( 0 rep ref:commentChar 379-380 | ( 0 rule:commentChar not-char 379-380 ) ) : ( 0 sep text 380-380 ) : ( 0 rep ref:commentChar 380-381 | ( 0 rule:commentChar not-char 380-381 ) ) : ( 0 sep text 381-381 ) : ( 0 rep ref:commentChar 381-382 | ( 0 rule:commentChar not-char 381-382 ) ) : ( 0 sep text 382-382 ) : ( 0 rep ref:commentChar 382-383 | ( 0 rule:commentChar not-char 382-383 ) ) : ( 0 sep text 383-383 ) : ( 0 rep ref:commentChar 383-384 | ( 0 rule:commentChar not-char 383-384 ) ) : ( 0 sep text 384-384 ) : ( 0 rep ref:commentChar 384-385 | ( 0 rule:commentChar not-char 384-385 ) ) : ( 0 sep text 385-385 ) : ( 0 rep ref:commentChar 385-386 | ( 0 rule:commentChar not-char 385-386 ) ) : ( 0 sep text 386-386 ) : ( 0 rep ref:commentChar 386-387 | ( 0 rule:commentChar not-char 386-387 ) ) : ( 0 sep text 387-387 ) : ( 0 rep ref:commentChar 387-388 | ( 0 rule:commentChar not-char 387-388 ) ) : ( 0 sep text 388-388 ) : ( 0 rep ref:commentChar 388-389 | ( 0 rule:commentChar not-char 388-389 ) ) : ( 0 sep text 389-389 ) : ( 0 rep ref:commentChar 389-390 | ( 0 rule:commentChar not-char 389-390 ) ) : ( 0 sep text 390-390 ) : ( 0 rep ref:commentChar 390-391 | ( 0 rule:commentChar not-char 390-391 ) ) : ( 0 sep text 391-391 ) : < Rule `commentChar` didn't match :: rep ref:commentChar @391 | < Expected not to find '\n', but found '
' :: rule:commentChar not-char @391 > > ) ) ) ) ) : ( 0 sep text 391-392 ) : ( 0 rep seqnc 392-392 | ( 0 seq:0 ref:spaces 392-392 | ( 0 rule:spaces repsep 392-392 | < Expected ' ', but found 'h' :: rep text @392 > ) ) : ( 0 seq:1 choice 392-392 | < Rule `comment` didn't match :: ch:0 ref:comment @392 | < Sequence failed at entry 0 :: rule:comment seqnc @392 | < Expected '#', but found 'h' :: seq:0 text @392 > > > : ( 0 ch:1 text 392-392 ) ) ) : < Expected '
', but found 'h' :: sep text @392 > ) ) : ( 0 rep ref:statement 392-461 | ( 0 rule:statement choice 392-461 | ( 0 ch:0 ref:rule 392-461 | ( 0 rule:rule seqnc 392-461 | ( 0 seq:0 ref:record 392-438 | ( 0 rule:record seqnc 392-438 | ( 0 seq:0 ref:ident 392-398 | ( 0 rule:ident seqnc 392-398 | ( 0 seq:0 ref:alpha 392-393 | ( 0 rule:alpha choice 392-393 | ( 0 ch:0 char-range 392-393 ) ) ) : ( 0 seq:1 repsep 393-398 | ( 0 rep choice 393-394 | ( 0 ch:0 ref:alphaNum 393-394 | ( 0 rule:alphaNum choice 393-394 | ( 0 ch:0 ref:alpha 393-394 | ( 0 rule:alpha choice 393-394 | ( 0 ch:0 char-range 393-394 ) ) ) ) ) ) : ( 0 sep text 394-394 ) : ( 0 rep choice 394-395 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @394 | < None of choices matched input :: rule:alphaNum choice @394 | < Rule `alpha` didn't match :: ch:0 ref:alpha @394 | < None of choices matched input :: rule:alpha choice @394 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @394 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @394 > : < Expected '_', but found '.' :: ch:2 text @394 > > > : < Rule `num` didn't match :: ch:1 ref:num @394 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @394 > > > > : ( 0 ch:1 text 394-395 ) ) : ( 0 sep text 395-395 ) : ( 0 rep choice 395-396 | ( 0 ch:0 ref:alphaNum 395-396 | ( 0 rule:alphaNum choice 395-396 | ( 0 ch:0 ref:alpha 395-396 | ( 0 rule:alpha choice 395-396 | ( 0 ch:0 char-range 395-396 ) ) ) ) ) ) : ( 0 sep text 396-396 ) : ( 0 rep choice 396-397 | ( 0 ch:0 ref:alphaNum 396-397 | ( 0 rule:alphaNum choice 396-397 | ( 0 ch:0 ref:alpha 396-397 | ( 0 rule:alpha choice 396-397 | ( 0 ch:0 char-range 396-397 ) ) ) ) ) ) : ( 0 sep text 397-397 ) : ( 0 rep choice 397-398 | ( 0 ch:0 ref:alphaNum 397-398 | ( 0 rule:alphaNum choice 397-398 | ( 0 ch:0 ref:alpha 397-398 | ( 0 rule:alpha choice 397-398 | ( 0 ch:0 char-range 397-398 ) ) ) ) ) ) : ( 0 sep text 398-398 ) : < None of choices matched input :: rep choice @398 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @398 | < None of choices matched input :: rule:alphaNum choice @398 | < Rule `alpha` didn't match :: ch:0 ref:alpha @398 | < None of choices matched input :: rule:alpha choice @398 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @398 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @398 > : < Expected '_', but found '{' :: ch:2 text @398 > > > : < Rule `num` didn't match :: ch:1 ref:num @398 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @398 > > > > : < Expected '.', but found '{' :: ch:1 text @398 > > ) ) ) : ( 0 seq:1 text 398-399 ) : ( 0 seq:2 ref:ws 399-399 | ( 0 rule:ws repsep 399-399 | ( 0 rep seqnc 399-399 | ( 0 seq:0 ref:spaces 399-399 | ( 0 rule:spaces repsep 399-399 | < Expected ' ', but found 't' :: rep text @399 > ) ) : ( 0 seq:1 choice 399-399 | < Rule `comment` didn't match :: ch:0 ref:comment @399 | < Sequence failed at entry 0 :: rule:comment seqnc @399 | < Expected '#', but found 't' :: seq:0 text @399 > > > : ( 0 ch:1 text 399-399 ) ) ) : < Expected '
', but found 't' :: sep text @399 > ) ) : ( 0 seq:3 ref:recordAttrs 399-437 | ( 0 rule:recordAttrs repsep 399-437 | ( 0 rep choice 399-410 | ( 0 ch:0 ref:recordKeyValue 399-410 | ( 0 rule:recordKeyValue seqnc 399-410 | ( 0 seq:0 ref:ident 399-403 | ( 0 rule:ident seqnc 399-403 | ( 0 seq:0 ref:alpha 399-400 | ( 0 rule:alpha choice 399-400 | ( 0 ch:0 char-range 399-400 ) ) ) : ( 0 seq:1 repsep 400-403 | ( 0 rep choice 400-401 | ( 0 ch:0 ref:alphaNum 400-401 | ( 0 rule:alphaNum choice 400-401 | ( 0 ch:0 ref:alpha 400-401 | ( 0 rule:alpha choice 400-401 | ( 0 ch:0 char-range 400-401 ) ) ) ) ) ) : ( 0 sep text 401-401 ) : ( 0 rep choice 401-402 | ( 0 ch:0 ref:alphaNum 401-402 | ( 0 rule:alphaNum choice 401-402 | ( 0 ch:0 ref:alpha 401-402 | ( 0 rule:alpha choice 401-402 | ( 0 ch:0 char-range 401-402 ) ) ) ) ) ) : ( 0 sep text 402-402 ) : ( 0 rep choice 402-403 | ( 0 ch:0 ref:alphaNum 402-403 | ( 0 rule:alphaNum choice 402-403 | ( 0 ch:0 ref:alpha 402-403 | ( 0 rule:alpha choice 402-403 | ( 0 ch:0 char-range 402-403 ) ) ) ) ) ) : ( 0 sep text 403-403 ) : < None of choices matched input :: rep choice @403 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @403 | < None of choices matched input :: rule:alphaNum choice @403 | < Rule `alpha` didn't match :: ch:0 ref:alpha @403 | < None of choices matched input :: rule:alpha choice @403 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @403 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @403 > : < Expected '_', but found ':' :: ch:2 text @403 > > > : < Rule `num` didn't match :: ch:1 ref:num @403 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @403 > > > > : < Expected '.', but found ':' :: ch:1 text @403 > > ) ) ) : ( 0 seq:1 text 403-404 ) : ( 0 seq:2 ref:ws 404-405 | ( 0 rule:ws repsep 404-405 | ( 0 rep seqnc 404-405 | ( 0 seq:0 ref:spaces 404-405 | ( 0 rule:spaces repsep 404-405 | ( 0 rep text 404-405 ) : ( 0 sep text 405-405 ) : < Expected ' ', but found '"' :: rep text @405 > ) ) : ( 0 seq:1 choice 405-405 | < Rule `comment` didn't match :: ch:0 ref:comment @405 | < Sequence failed at entry 0 :: rule:comment seqnc @405 | < Expected '#', but found '"' :: seq:0 text @405 > > > : ( 0 ch:1 text 405-405 ) ) ) : < Expected '
', but found '"' :: sep text @405 > ) ) : ( 0 seq:3 ref:term 405-410 | ( 0 rule:term choice 405-410 | < Rule `record` didn't match :: ch:0 ref:record @405 | < Sequence failed at entry 0 :: rule:record seqnc @405 | < Rule `ident` didn't match :: seq:0 ref:ident @405 | < Sequence failed at entry 0 :: rule:ident seqnc @405 | < Rule `alpha` didn't match :: seq:0 ref:alpha @405 | < None of choices matched input :: rule:alpha choice @405 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @405 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @405 > : < Expected '_', but found '"' :: ch:2 text @405 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @405 | < Sequence failed at entry 1 :: rule:int seqnc @405 | ( 0 seq:0 choice 405-405 | < Expected '-', but found '"' :: ch:0 text @405 > : ( 0 ch:1 text 405-405 ) ) : < Rule `num` didn't match :: seq:1 ref:first @405 | < Expected character in range from '0' to '9', but found '"' :: rule:num char-range @405 > > > > : < Rule `var` didn't match :: ch:2 ref:var @405 | < Sequence failed at entry 0 :: rule:var seqnc @405 | < Expected character in range from 'A' to 'Z', but found '"' :: seq:0 char-range @405 > > > : ( 0 ch:3 ref:string 405-410 | ( 0 rule:string seqnc 405-410 | ( 0 seq:0 text 405-406 ) : ( 0 seq:1 repsep 406-409 | ( 0 rep ref:stringChar 406-407 | ( 0 rule:stringChar choice 406-407 | ( 0 ch:0 not-char 406-407 ) ) ) : ( 0 sep text 407-407 ) : ( 0 rep ref:stringChar 407-408 | ( 0 rule:stringChar choice 407-408 | ( 0 ch:0 not-char 407-408 ) ) ) : ( 0 sep text 408-408 ) : ( 0 rep ref:stringChar 408-409 | ( 0 rule:stringChar choice 408-409 | ( 0 ch:0 not-char 408-409 ) ) ) : ( 0 sep text 409-409 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @409 | < None of choices matched input :: rule:stringChar choice @409 | < Expected not to find '"', but found '"' :: ch:0 not-char @409 > : < Sequence failed at entry 0 :: ch:1 seqnc @409 | < Expected '\\', but found '"' :: seq:0 char @409 > > > > ) : ( 0 seq:2 text 409-410 ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 410-412 | ( 0 rule:commaSpace seqnc 410-412 | ( 0 seq:0 text 410-411 ) : ( 0 seq:1 ref:ws 411-412 | ( 0 rule:ws repsep 411-412 | ( 0 rep seqnc 411-412 | ( 0 seq:0 ref:spaces 411-412 | ( 0 rule:spaces repsep 411-412 | ( 0 rep text 411-412 ) : ( 0 sep text 412-412 ) : < Expected ' ', but found 's' :: rep text @412 > ) ) : ( 0 seq:1 choice 412-412 | < Rule `comment` didn't match :: ch:0 ref:comment @412 | < Sequence failed at entry 0 :: rule:comment seqnc @412 | < Expected '#', but found 's' :: seq:0 text @412 > > > : ( 0 ch:1 text 412-412 ) ) ) : < Expected '
', but found 's' :: sep text @412 > ) ) ) ) : ( 0 rep choice 412-419 | ( 0 ch:0 ref:recordKeyValue 412-419 | ( 0 rule:recordKeyValue seqnc 412-419 | ( 0 seq:0 ref:ident 412-416 | ( 0 rule:ident seqnc 412-416 | ( 0 seq:0 ref:alpha 412-413 | ( 0 rule:alpha choice 412-413 | ( 0 ch:0 char-range 412-413 ) ) ) : ( 0 seq:1 repsep 413-416 | ( 0 rep choice 413-414 | ( 0 ch:0 ref:alphaNum 413-414 | ( 0 rule:alphaNum choice 413-414 | ( 0 ch:0 ref:alpha 413-414 | ( 0 rule:alpha choice 413-414 | ( 0 ch:0 char-range 413-414 ) ) ) ) ) ) : ( 0 sep text 414-414 ) : ( 0 rep choice 414-415 | ( 0 ch:0 ref:alphaNum 414-415 | ( 0 rule:alphaNum choice 414-415 | ( 0 ch:0 ref:alpha 414-415 | ( 0 rule:alpha choice 414-415 | ( 0 ch:0 char-range 414-415 ) ) ) ) ) ) : ( 0 sep text 415-415 ) : ( 0 rep choice 415-416 | ( 0 ch:0 ref:alphaNum 415-416 | ( 0 rule:alphaNum choice 415-416 | ( 0 ch:0 ref:alpha 415-416 | ( 0 rule:alpha choice 415-416 | ( 0 ch:0 char-range 415-416 ) ) ) ) ) ) : ( 0 sep text 416-416 ) : < None of choices matched input :: rep choice @416 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @416 | < None of choices matched input :: rule:alphaNum choice @416 | < Rule `alpha` didn't match :: ch:0 ref:alpha @416 | < None of choices matched input :: rule:alpha choice @416 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @416 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @416 > : < Expected '_', but found ':' :: ch:2 text @416 > > > : < Rule `num` didn't match :: ch:1 ref:num @416 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @416 > > > > : < Expected '.', but found ':' :: ch:1 text @416 > > ) ) ) : ( 0 seq:1 text 416-417 ) : ( 0 seq:2 ref:ws 417-418 | ( 0 rule:ws repsep 417-418 | ( 0 rep seqnc 417-418 | ( 0 seq:0 ref:spaces 417-418 | ( 0 rule:spaces repsep 417-418 | ( 0 rep text 417-418 ) : ( 0 sep text 418-418 ) : < Expected ' ', but found 'S' :: rep text @418 > ) ) : ( 0 seq:1 choice 418-418 | < Rule `comment` didn't match :: ch:0 ref:comment @418 | < Sequence failed at entry 0 :: rule:comment seqnc @418 | < Expected '#', but found 'S' :: seq:0 text @418 > > > : ( 0 ch:1 text 418-418 ) ) ) : < Expected '
', but found 'S' :: sep text @418 > ) ) : ( 0 seq:3 ref:term 418-419 | ( 0 rule:term choice 418-419 | < Rule `record` didn't match :: ch:0 ref:record @418 | < Sequence failed at entry 1 :: rule:record seqnc @419 | ( 0 seq:0 ref:ident 418-419 | ( 0 rule:ident seqnc 418-419 | ( 0 seq:0 ref:alpha 418-419 | ( 0 rule:alpha choice 418-419 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @418 > : ( 0 ch:1 char-range 418-419 ) ) ) : ( 0 seq:1 repsep 419-419 | < None of choices matched input :: rep choice @419 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @419 | < None of choices matched input :: rule:alphaNum choice @419 | < Rule `alpha` didn't match :: ch:0 ref:alpha @419 | < None of choices matched input :: rule:alpha choice @419 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @419 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @419 > : < Expected '_', but found ',' :: ch:2 text @419 > > > : < Rule `num` didn't match :: ch:1 ref:num @419 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @419 > > > > : < Expected '.', but found ',' :: ch:1 text @419 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @419 > > > : < Rule `int` didn't match :: ch:1 ref:int @418 | < Sequence failed at entry 1 :: rule:int seqnc @418 | ( 0 seq:0 choice 418-418 | < Expected '-', but found 'S' :: ch:0 text @418 > : ( 0 ch:1 text 418-418 ) ) : < Rule `num` didn't match :: seq:1 ref:first @418 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @418 > > > > : ( 0 ch:2 ref:var 418-419 | ( 0 rule:var seqnc 418-419 | ( 0 seq:0 char-range 418-419 ) : ( 0 seq:1 repsep 419-419 | < None of choices matched input :: rep choice @419 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @419 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @419 | < None of choices matched input :: rule:alphaNum choice @419 | < Rule `alpha` didn't match :: ch:0 ref:alpha @419 | < None of choices matched input :: rule:alpha choice @419 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @419 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @419 > : < Expected '_', but found ',' :: ch:2 text @419 > > > : < Rule `num` didn't match :: ch:1 ref:num @419 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @419 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 419-421 | ( 0 rule:commaSpace seqnc 419-421 | ( 0 seq:0 text 419-420 ) : ( 0 seq:1 ref:ws 420-421 | ( 0 rule:ws repsep 420-421 | ( 0 rep seqnc 420-421 | ( 0 seq:0 ref:spaces 420-421 | ( 0 rule:spaces repsep 420-421 | ( 0 rep text 420-421 ) : ( 0 sep text 421-421 ) : < Expected ' ', but found 'h' :: rep text @421 > ) ) : ( 0 seq:1 choice 421-421 | < Rule `comment` didn't match :: ch:0 ref:comment @421 | < Sequence failed at entry 0 :: rule:comment seqnc @421 | < Expected '#', but found 'h' :: seq:0 text @421 > > > : ( 0 ch:1 text 421-421 ) ) ) : < Expected '
', but found 'h' :: sep text @421 > ) ) ) ) : ( 0 rep choice 421-437 | ( 0 ch:0 ref:recordKeyValue 421-437 | ( 0 rule:recordKeyValue seqnc 421-437 | ( 0 seq:0 ref:ident 421-430 | ( 0 rule:ident seqnc 421-430 | ( 0 seq:0 ref:alpha 421-422 | ( 0 rule:alpha choice 421-422 | ( 0 ch:0 char-range 421-422 ) ) ) : ( 0 seq:1 repsep 422-430 | ( 0 rep choice 422-423 | ( 0 ch:0 ref:alphaNum 422-423 | ( 0 rule:alphaNum choice 422-423 | ( 0 ch:0 ref:alpha 422-423 | ( 0 rule:alpha choice 422-423 | ( 0 ch:0 char-range 422-423 ) ) ) ) ) ) : ( 0 sep text 423-423 ) : ( 0 rep choice 423-424 | ( 0 ch:0 ref:alphaNum 423-424 | ( 0 rule:alphaNum choice 423-424 | ( 0 ch:0 ref:alpha 423-424 | ( 0 rule:alpha choice 423-424 | ( 0 ch:0 char-range 423-424 ) ) ) ) ) ) : ( 0 sep text 424-424 ) : ( 0 rep choice 424-425 | ( 0 ch:0 ref:alphaNum 424-425 | ( 0 rule:alphaNum choice 424-425 | ( 0 ch:0 ref:alpha 424-425 | ( 0 rule:alpha choice 424-425 | ( 0 ch:0 char-range 424-425 ) ) ) ) ) ) : ( 0 sep text 425-425 ) : ( 0 rep choice 425-426 | ( 0 ch:0 ref:alphaNum 425-426 | ( 0 rule:alphaNum choice 425-426 | ( 0 ch:0 ref:alpha 425-426 | ( 0 rule:alpha choice 425-426 | ( 0 ch:0 char-range 425-426 ) ) ) ) ) ) : ( 0 sep text 426-426 ) : ( 0 rep choice 426-427 | ( 0 ch:0 ref:alphaNum 426-427 | ( 0 rule:alphaNum choice 426-427 | ( 0 ch:0 ref:alpha 426-427 | ( 0 rule:alpha choice 426-427 | ( 0 ch:0 char-range 426-427 ) ) ) ) ) ) : ( 0 sep text 427-427 ) : ( 0 rep choice 427-428 | ( 0 ch:0 ref:alphaNum 427-428 | ( 0 rule:alphaNum choice 427-428 | ( 0 ch:0 ref:alpha 427-428 | ( 0 rule:alpha choice 427-428 | ( 0 ch:0 char-range 427-428 ) ) ) ) ) ) : ( 0 sep text 428-428 ) : ( 0 rep choice 428-429 | ( 0 ch:0 ref:alphaNum 428-429 | ( 0 rule:alphaNum choice 428-429 | ( 0 ch:0 ref:alpha 428-429 | ( 0 rule:alpha choice 428-429 | ( 0 ch:0 char-range 428-429 ) ) ) ) ) ) : ( 0 sep text 429-429 ) : ( 0 rep choice 429-430 | ( 0 ch:0 ref:alphaNum 429-430 | ( 0 rule:alphaNum choice 429-430 | ( 0 ch:0 ref:alpha 429-430 | ( 0 rule:alpha choice 429-430 | ( 0 ch:0 char-range 429-430 ) ) ) ) ) ) : ( 0 sep text 430-430 ) : < None of choices matched input :: rep choice @430 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @430 | < None of choices matched input :: rule:alphaNum choice @430 | < Rule `alpha` didn't match :: ch:0 ref:alpha @430 | < None of choices matched input :: rule:alpha choice @430 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @430 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @430 > : < Expected '_', but found ':' :: ch:2 text @430 > > > : < Rule `num` didn't match :: ch:1 ref:num @430 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @430 > > > > : < Expected '.', but found ':' :: ch:1 text @430 > > ) ) ) : ( 0 seq:1 text 430-431 ) : ( 0 seq:2 ref:ws 431-432 | ( 0 rule:ws repsep 431-432 | ( 0 rep seqnc 431-432 | ( 0 seq:0 ref:spaces 431-432 | ( 0 rule:spaces repsep 431-432 | ( 0 rep text 431-432 ) : ( 0 sep text 432-432 ) : < Expected ' ', but found 'f' :: rep text @432 > ) ) : ( 0 seq:1 choice 432-432 | < Rule `comment` didn't match :: ch:0 ref:comment @432 | < Sequence failed at entry 0 :: rule:comment seqnc @432 | < Expected '#', but found 'f' :: seq:0 text @432 > > > : ( 0 ch:1 text 432-432 ) ) ) : < Expected '
', but found 'f' :: sep text @432 > ) ) : ( 0 seq:3 ref:term 432-437 | ( 0 rule:term choice 432-437 | < Rule `record` didn't match :: ch:0 ref:record @432 | < Sequence failed at entry 1 :: rule:record seqnc @437 | ( 0 seq:0 ref:ident 432-437 | ( 0 rule:ident seqnc 432-437 | ( 0 seq:0 ref:alpha 432-433 | ( 0 rule:alpha choice 432-433 | ( 0 ch:0 char-range 432-433 ) ) ) : ( 0 seq:1 repsep 433-437 | ( 0 rep choice 433-434 | ( 0 ch:0 ref:alphaNum 433-434 | ( 0 rule:alphaNum choice 433-434 | ( 0 ch:0 ref:alpha 433-434 | ( 0 rule:alpha choice 433-434 | ( 0 ch:0 char-range 433-434 ) ) ) ) ) ) : ( 0 sep text 434-434 ) : ( 0 rep choice 434-435 | ( 0 ch:0 ref:alphaNum 434-435 | ( 0 rule:alphaNum choice 434-435 | ( 0 ch:0 ref:alpha 434-435 | ( 0 rule:alpha choice 434-435 | ( 0 ch:0 char-range 434-435 ) ) ) ) ) ) : ( 0 sep text 435-435 ) : ( 0 rep choice 435-436 | ( 0 ch:0 ref:alphaNum 435-436 | ( 0 rule:alphaNum choice 435-436 | ( 0 ch:0 ref:alpha 435-436 | ( 0 rule:alpha choice 435-436 | ( 0 ch:0 char-range 435-436 ) ) ) ) ) ) : ( 0 sep text 436-436 ) : ( 0 rep choice 436-437 | ( 0 ch:0 ref:alphaNum 436-437 | ( 0 rule:alphaNum choice 436-437 | ( 0 ch:0 ref:alpha 436-437 | ( 0 rule:alpha choice 436-437 | ( 0 ch:0 char-range 436-437 ) ) ) ) ) ) : ( 0 sep text 437-437 ) : < None of choices matched input :: rep choice @437 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @437 | < None of choices matched input :: rule:alphaNum choice @437 | < Rule `alpha` didn't match :: ch:0 ref:alpha @437 | < None of choices matched input :: rule:alpha choice @437 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @437 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @437 > : < Expected '_', but found '}' :: ch:2 text @437 > > > : < Rule `num` didn't match :: ch:1 ref:num @437 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @437 > > > > : < Expected '.', but found '}' :: ch:1 text @437 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @437 > > > : < Rule `int` didn't match :: ch:1 ref:int @432 | < Sequence failed at entry 1 :: rule:int seqnc @432 | ( 0 seq:0 choice 432-432 | < Expected '-', but found 'f' :: ch:0 text @432 > : ( 0 ch:1 text 432-432 ) ) : < Rule `num` didn't match :: seq:1 ref:first @432 | < Expected character in range from '0' to '9', but found 'f' :: rule:num char-range @432 > > > > : < Rule `var` didn't match :: ch:2 ref:var @432 | < Sequence failed at entry 0 :: rule:var seqnc @432 | < Expected character in range from 'A' to 'Z', but found 'f' :: seq:0 char-range @432 > > > : < Rule `string` didn't match :: ch:3 ref:string @432 | < Sequence failed at entry 0 :: rule:string seqnc @432 | < Expected '"', but found 'f' :: seq:0 text @432 > > > : ( 0 ch:4 ref:bool 432-437 | ( 0 rule:bool choice 432-437 | < Expected 'true', but found 'fals' :: ch:0 text @432 > : ( 0 ch:1 text 432-437 ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @437 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @437 | < Expected ',', but found '}' :: seq:0 text @437 > > > ) ) : ( 0 seq:4 ref:ws 437-437 | ( 0 rule:ws repsep 437-437 | ( 0 rep seqnc 437-437 | ( 0 seq:0 ref:spaces 437-437 | ( 0 rule:spaces repsep 437-437 | < Expected ' ', but found '}' :: rep text @437 > ) ) : ( 0 seq:1 choice 437-437 | < Rule `comment` didn't match :: ch:0 ref:comment @437 | < Sequence failed at entry 0 :: rule:comment seqnc @437 | < Expected '#', but found '}' :: seq:0 text @437 > > > : ( 0 ch:1 text 437-437 ) ) ) : < Expected '
', but found '}' :: sep text @437 > ) ) : ( 0 seq:5 text 437-438 ) ) ) : ( 0 seq:1 ref:ws 438-439 | ( 0 rule:ws repsep 438-439 | ( 0 rep seqnc 438-439 | ( 0 seq:0 ref:spaces 438-439 | ( 0 rule:spaces repsep 438-439 | ( 0 rep text 438-439 ) : ( 0 sep text 439-439 ) : < Expected ' ', but found ':' :: rep text @439 > ) ) : ( 0 seq:1 choice 439-439 | < Rule `comment` didn't match :: ch:0 ref:comment @439 | < Sequence failed at entry 0 :: rule:comment seqnc @439 | < Expected '#', but found ':' :: seq:0 text @439 > > > : ( 0 ch:1 text 439-439 ) ) ) : < Expected '
', but found ':' :: sep text @439 > ) ) : ( 0 seq:2 text 439-441 ) : ( 0 seq:3 ref:ws 441-444 | ( 0 rule:ws repsep 441-444 | ( 0 rep seqnc 441-441 | ( 0 seq:0 ref:spaces 441-441 | ( 0 rule:spaces repsep 441-441 | < Expected ' ', but found '
' :: rep text @441 > ) ) : ( 0 seq:1 choice 441-441 | < Rule `comment` didn't match :: ch:0 ref:comment @441 | < Sequence failed at entry 0 :: rule:comment seqnc @441 | < Expected '#', but found '
' :: seq:0 text @441 > > > : ( 0 ch:1 text 441-441 ) ) ) : ( 0 sep text 441-442 ) : ( 0 rep seqnc 442-444 | ( 0 seq:0 ref:spaces 442-444 | ( 0 rule:spaces repsep 442-444 | ( 0 rep text 442-443 ) : ( 0 sep text 443-443 ) : ( 0 rep text 443-444 ) : ( 0 sep text 444-444 ) : < Expected ' ', but found 'a' :: rep text @444 > ) ) : ( 0 seq:1 choice 444-444 | < Rule `comment` didn't match :: ch:0 ref:comment @444 | < Sequence failed at entry 0 :: rule:comment seqnc @444 | < Expected '#', but found 'a' :: seq:0 text @444 > > > : ( 0 ch:1 text 444-444 ) ) ) : < Expected '
', but found 'a' :: sep text @444 > ) ) : ( 0 seq:4 repsep 444-460 | ( 0 rep ref:disjunct 444-460 | ( 0 rule:disjunct repsep 444-460 | ( 0 rep ref:conjunct 444-460 | ( 0 rule:conjunct choice 444-460 | ( 0 ch:0 ref:record 444-460 | ( 0 rule:record seqnc 444-460 | ( 0 seq:0 ref:ident 444-451 | ( 0 rule:ident seqnc 444-451 | ( 0 seq:0 ref:alpha 444-445 | ( 0 rule:alpha choice 444-445 | ( 0 ch:0 char-range 444-445 ) ) ) : ( 0 seq:1 repsep 445-451 | ( 0 rep choice 445-446 | ( 0 ch:0 ref:alphaNum 445-446 | ( 0 rule:alphaNum choice 445-446 | ( 0 ch:0 ref:alpha 445-446 | ( 0 rule:alpha choice 445-446 | ( 0 ch:0 char-range 445-446 ) ) ) ) ) ) : ( 0 sep text 446-446 ) : ( 0 rep choice 446-447 | ( 0 ch:0 ref:alphaNum 446-447 | ( 0 rule:alphaNum choice 446-447 | ( 0 ch:0 ref:alpha 446-447 | ( 0 rule:alpha choice 446-447 | ( 0 ch:0 char-range 446-447 ) ) ) ) ) ) : ( 0 sep text 447-447 ) : ( 0 rep choice 447-448 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @447 | < None of choices matched input :: rule:alphaNum choice @447 | < Rule `alpha` didn't match :: ch:0 ref:alpha @447 | < None of choices matched input :: rule:alpha choice @447 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @447 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @447 > : < Expected '_', but found '.' :: ch:2 text @447 > > > : < Rule `num` didn't match :: ch:1 ref:num @447 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @447 > > > > : ( 0 ch:1 text 447-448 ) ) : ( 0 sep text 448-448 ) : ( 0 rep choice 448-449 | ( 0 ch:0 ref:alphaNum 448-449 | ( 0 rule:alphaNum choice 448-449 | ( 0 ch:0 ref:alpha 448-449 | ( 0 rule:alpha choice 448-449 | ( 0 ch:0 char-range 448-449 ) ) ) ) ) ) : ( 0 sep text 449-449 ) : ( 0 rep choice 449-450 | ( 0 ch:0 ref:alphaNum 449-450 | ( 0 rule:alphaNum choice 449-450 | ( 0 ch:0 ref:alpha 449-450 | ( 0 rule:alpha choice 449-450 | ( 0 ch:0 char-range 449-450 ) ) ) ) ) ) : ( 0 sep text 450-450 ) : ( 0 rep choice 450-451 | ( 0 ch:0 ref:alphaNum 450-451 | ( 0 rule:alphaNum choice 450-451 | ( 0 ch:0 ref:alpha 450-451 | ( 0 rule:alpha choice 450-451 | ( 0 ch:0 char-range 450-451 ) ) ) ) ) ) : ( 0 sep text 451-451 ) : < None of choices matched input :: rep choice @451 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @451 | < None of choices matched input :: rule:alphaNum choice @451 | < Rule `alpha` didn't match :: ch:0 ref:alpha @451 | < None of choices matched input :: rule:alpha choice @451 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @451 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @451 > : < Expected '_', but found '{' :: ch:2 text @451 > > > : < Rule `num` didn't match :: ch:1 ref:num @451 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @451 > > > > : < Expected '.', but found '{' :: ch:1 text @451 > > ) ) ) : ( 0 seq:1 text 451-452 ) : ( 0 seq:2 ref:ws 452-452 | ( 0 rule:ws repsep 452-452 | ( 0 rep seqnc 452-452 | ( 0 seq:0 ref:spaces 452-452 | ( 0 rule:spaces repsep 452-452 | < Expected ' ', but found 's' :: rep text @452 > ) ) : ( 0 seq:1 choice 452-452 | < Rule `comment` didn't match :: ch:0 ref:comment @452 | < Sequence failed at entry 0 :: rule:comment seqnc @452 | < Expected '#', but found 's' :: seq:0 text @452 > > > : ( 0 ch:1 text 452-452 ) ) ) : < Expected '
', but found 's' :: sep text @452 > ) ) : ( 0 seq:3 ref:recordAttrs 452-459 | ( 0 rule:recordAttrs repsep 452-459 | ( 0 rep choice 452-459 | ( 0 ch:0 ref:recordKeyValue 452-459 | ( 0 rule:recordKeyValue seqnc 452-459 | ( 0 seq:0 ref:ident 452-456 | ( 0 rule:ident seqnc 452-456 | ( 0 seq:0 ref:alpha 452-453 | ( 0 rule:alpha choice 452-453 | ( 0 ch:0 char-range 452-453 ) ) ) : ( 0 seq:1 repsep 453-456 | ( 0 rep choice 453-454 | ( 0 ch:0 ref:alphaNum 453-454 | ( 0 rule:alphaNum choice 453-454 | ( 0 ch:0 ref:alpha 453-454 | ( 0 rule:alpha choice 453-454 | ( 0 ch:0 char-range 453-454 ) ) ) ) ) ) : ( 0 sep text 454-454 ) : ( 0 rep choice 454-455 | ( 0 ch:0 ref:alphaNum 454-455 | ( 0 rule:alphaNum choice 454-455 | ( 0 ch:0 ref:alpha 454-455 | ( 0 rule:alpha choice 454-455 | ( 0 ch:0 char-range 454-455 ) ) ) ) ) ) : ( 0 sep text 455-455 ) : ( 0 rep choice 455-456 | ( 0 ch:0 ref:alphaNum 455-456 | ( 0 rule:alphaNum choice 455-456 | ( 0 ch:0 ref:alpha 455-456 | ( 0 rule:alpha choice 455-456 | ( 0 ch:0 char-range 455-456 ) ) ) ) ) ) : ( 0 sep text 456-456 ) : < None of choices matched input :: rep choice @456 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @456 | < None of choices matched input :: rule:alphaNum choice @456 | < Rule `alpha` didn't match :: ch:0 ref:alpha @456 | < None of choices matched input :: rule:alpha choice @456 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @456 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @456 > : < Expected '_', but found ':' :: ch:2 text @456 > > > : < Rule `num` didn't match :: ch:1 ref:num @456 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @456 > > > > : < Expected '.', but found ':' :: ch:1 text @456 > > ) ) ) : ( 0 seq:1 text 456-457 ) : ( 0 seq:2 ref:ws 457-458 | ( 0 rule:ws repsep 457-458 | ( 0 rep seqnc 457-458 | ( 0 seq:0 ref:spaces 457-458 | ( 0 rule:spaces repsep 457-458 | ( 0 rep text 457-458 ) : ( 0 sep text 458-458 ) : < Expected ' ', but found 'S' :: rep text @458 > ) ) : ( 0 seq:1 choice 458-458 | < Rule `comment` didn't match :: ch:0 ref:comment @458 | < Sequence failed at entry 0 :: rule:comment seqnc @458 | < Expected '#', but found 'S' :: seq:0 text @458 > > > : ( 0 ch:1 text 458-458 ) ) ) : < Expected '
', but found 'S' :: sep text @458 > ) ) : ( 0 seq:3 ref:term 458-459 | ( 0 rule:term choice 458-459 | < Rule `record` didn't match :: ch:0 ref:record @458 | < Sequence failed at entry 1 :: rule:record seqnc @459 | ( 0 seq:0 ref:ident 458-459 | ( 0 rule:ident seqnc 458-459 | ( 0 seq:0 ref:alpha 458-459 | ( 0 rule:alpha choice 458-459 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @458 > : ( 0 ch:1 char-range 458-459 ) ) ) : ( 0 seq:1 repsep 459-459 | < None of choices matched input :: rep choice @459 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @459 | < None of choices matched input :: rule:alphaNum choice @459 | < Rule `alpha` didn't match :: ch:0 ref:alpha @459 | < None of choices matched input :: rule:alpha choice @459 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @459 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @459 > : < Expected '_', but found '}' :: ch:2 text @459 > > > : < Rule `num` didn't match :: ch:1 ref:num @459 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @459 > > > > : < Expected '.', but found '}' :: ch:1 text @459 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @459 > > > : < Rule `int` didn't match :: ch:1 ref:int @458 | < Sequence failed at entry 1 :: rule:int seqnc @458 | ( 0 seq:0 choice 458-458 | < Expected '-', but found 'S' :: ch:0 text @458 > : ( 0 ch:1 text 458-458 ) ) : < Rule `num` didn't match :: seq:1 ref:first @458 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @458 > > > > : ( 0 ch:2 ref:var 458-459 | ( 0 rule:var seqnc 458-459 | ( 0 seq:0 char-range 458-459 ) : ( 0 seq:1 repsep 459-459 | < None of choices matched input :: rep choice @459 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @459 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @459 | < None of choices matched input :: rule:alphaNum choice @459 | < Rule `alpha` didn't match :: ch:0 ref:alpha @459 | < None of choices matched input :: rule:alpha choice @459 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @459 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @459 > : < Expected '_', but found '}' :: ch:2 text @459 > > > : < Rule `num` didn't match :: ch:1 ref:num @459 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @459 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @459 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @459 | < Expected ',', but found '}' :: seq:0 text @459 > > > ) ) : ( 0 seq:4 ref:ws 459-459 | ( 0 rule:ws repsep 459-459 | ( 0 rep seqnc 459-459 | ( 0 seq:0 ref:spaces 459-459 | ( 0 rule:spaces repsep 459-459 | < Expected ' ', but found '}' :: rep text @459 > ) ) : ( 0 seq:1 choice 459-459 | < Rule `comment` didn't match :: ch:0 ref:comment @459 | < Sequence failed at entry 0 :: rule:comment seqnc @459 | < Expected '#', but found '}' :: seq:0 text @459 > > > : ( 0 ch:1 text 459-459 ) ) ) : < Expected '
', but found '}' :: sep text @459 > ) ) : ( 0 seq:5 text 459-460 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @460 | ( 0 seq:0 ref:ws 460-460 | ( 0 rule:ws repsep 460-460 | ( 0 rep seqnc 460-460 | ( 0 seq:0 ref:spaces 460-460 | ( 0 rule:spaces repsep 460-460 | < Expected ' ', but found '.' :: rep text @460 > ) ) : ( 0 seq:1 choice 460-460 | < Rule `comment` didn't match :: ch:0 ref:comment @460 | < Sequence failed at entry 0 :: rule:comment seqnc @460 | < Expected '#', but found '.' :: seq:0 text @460 > > > : ( 0 ch:1 text 460-460 ) ) ) : < Expected '
', but found '.' :: sep text @460 > ) ) : < Expected '&', but found '.' :: seq:1 text @460 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @460 | ( 0 seq:0 ref:ws 460-460 | ( 0 rule:ws repsep 460-460 | ( 0 rep seqnc 460-460 | ( 0 seq:0 ref:spaces 460-460 | ( 0 rule:spaces repsep 460-460 | < Expected ' ', but found '.' :: rep text @460 > ) ) : ( 0 seq:1 choice 460-460 | < Rule `comment` didn't match :: ch:0 ref:comment @460 | < Sequence failed at entry 0 :: rule:comment seqnc @460 | < Expected '#', but found '.' :: seq:0 text @460 > > > : ( 0 ch:1 text 460-460 ) ) ) : < Expected '
', but found '.' :: sep text @460 > ) ) : < Expected '|', but found '.' :: seq:1 text @460 > > ) : ( 0 seq:5 text 460-461 ) ) ) ) ) : ( 0 sep ref:ws 461-462 | ( 0 rule:ws repsep 461-462 | ( 0 rep seqnc 461-461 | ( 0 seq:0 ref:spaces 461-461 | ( 0 rule:spaces repsep 461-461 | < Expected ' ', but found '
' :: rep text @461 > ) ) : ( 0 seq:1 choice 461-461 | < Rule `comment` didn't match :: ch:0 ref:comment @461 | < Sequence failed at entry 0 :: rule:comment seqnc @461 | < Expected '#', but found '
' :: seq:0 text @461 > > > : ( 0 ch:1 text 461-461 ) ) ) : ( 0 sep text 461-462 ) : ( 0 rep seqnc 462-462 | ( 0 seq:0 ref:spaces 462-462 | ( 0 rule:spaces repsep 462-462 | < Expected ' ', but found 'h' :: rep text @462 > ) ) : ( 0 seq:1 choice 462-462 | < Rule `comment` didn't match :: ch:0 ref:comment @462 | < Sequence failed at entry 0 :: rule:comment seqnc @462 | < Expected '#', but found 'h' :: seq:0 text @462 > > > : ( 0 ch:1 text 462-462 ) ) ) : < Expected '
', but found 'h' :: sep text @462 > ) ) : ( 0 rep ref:statement 462-531 | ( 0 rule:statement choice 462-531 | ( 0 ch:0 ref:rule 462-531 | ( 0 rule:rule seqnc 462-531 | ( 0 seq:0 ref:record 462-508 | ( 0 rule:record seqnc 462-508 | ( 0 seq:0 ref:ident 462-468 | ( 0 rule:ident seqnc 462-468 | ( 0 seq:0 ref:alpha 462-463 | ( 0 rule:alpha choice 462-463 | ( 0 ch:0 char-range 462-463 ) ) ) : ( 0 seq:1 repsep 463-468 | ( 0 rep choice 463-464 | ( 0 ch:0 ref:alphaNum 463-464 | ( 0 rule:alphaNum choice 463-464 | ( 0 ch:0 ref:alpha 463-464 | ( 0 rule:alpha choice 463-464 | ( 0 ch:0 char-range 463-464 ) ) ) ) ) ) : ( 0 sep text 464-464 ) : ( 0 rep choice 464-465 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @464 | < None of choices matched input :: rule:alphaNum choice @464 | < Rule `alpha` didn't match :: ch:0 ref:alpha @464 | < None of choices matched input :: rule:alpha choice @464 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @464 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @464 > : < Expected '_', but found '.' :: ch:2 text @464 > > > : < Rule `num` didn't match :: ch:1 ref:num @464 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @464 > > > > : ( 0 ch:1 text 464-465 ) ) : ( 0 sep text 465-465 ) : ( 0 rep choice 465-466 | ( 0 ch:0 ref:alphaNum 465-466 | ( 0 rule:alphaNum choice 465-466 | ( 0 ch:0 ref:alpha 465-466 | ( 0 rule:alpha choice 465-466 | ( 0 ch:0 char-range 465-466 ) ) ) ) ) ) : ( 0 sep text 466-466 ) : ( 0 rep choice 466-467 | ( 0 ch:0 ref:alphaNum 466-467 | ( 0 rule:alphaNum choice 466-467 | ( 0 ch:0 ref:alpha 466-467 | ( 0 rule:alpha choice 466-467 | ( 0 ch:0 char-range 466-467 ) ) ) ) ) ) : ( 0 sep text 467-467 ) : ( 0 rep choice 467-468 | ( 0 ch:0 ref:alphaNum 467-468 | ( 0 rule:alphaNum choice 467-468 | ( 0 ch:0 ref:alpha 467-468 | ( 0 rule:alpha choice 467-468 | ( 0 ch:0 char-range 467-468 ) ) ) ) ) ) : ( 0 sep text 468-468 ) : < None of choices matched input :: rep choice @468 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @468 | < None of choices matched input :: rule:alphaNum choice @468 | < Rule `alpha` didn't match :: ch:0 ref:alpha @468 | < None of choices matched input :: rule:alpha choice @468 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @468 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @468 > : < Expected '_', but found '{' :: ch:2 text @468 > > > : < Rule `num` didn't match :: ch:1 ref:num @468 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @468 > > > > : < Expected '.', but found '{' :: ch:1 text @468 > > ) ) ) : ( 0 seq:1 text 468-469 ) : ( 0 seq:2 ref:ws 469-469 | ( 0 rule:ws repsep 469-469 | ( 0 rep seqnc 469-469 | ( 0 seq:0 ref:spaces 469-469 | ( 0 rule:spaces repsep 469-469 | < Expected ' ', but found 't' :: rep text @469 > ) ) : ( 0 seq:1 choice 469-469 | < Rule `comment` didn't match :: ch:0 ref:comment @469 | < Sequence failed at entry 0 :: rule:comment seqnc @469 | < Expected '#', but found 't' :: seq:0 text @469 > > > : ( 0 ch:1 text 469-469 ) ) ) : < Expected '
', but found 't' :: sep text @469 > ) ) : ( 0 seq:3 ref:recordAttrs 469-507 | ( 0 rule:recordAttrs repsep 469-507 | ( 0 rep choice 469-480 | ( 0 ch:0 ref:recordKeyValue 469-480 | ( 0 rule:recordKeyValue seqnc 469-480 | ( 0 seq:0 ref:ident 469-473 | ( 0 rule:ident seqnc 469-473 | ( 0 seq:0 ref:alpha 469-470 | ( 0 rule:alpha choice 469-470 | ( 0 ch:0 char-range 469-470 ) ) ) : ( 0 seq:1 repsep 470-473 | ( 0 rep choice 470-471 | ( 0 ch:0 ref:alphaNum 470-471 | ( 0 rule:alphaNum choice 470-471 | ( 0 ch:0 ref:alpha 470-471 | ( 0 rule:alpha choice 470-471 | ( 0 ch:0 char-range 470-471 ) ) ) ) ) ) : ( 0 sep text 471-471 ) : ( 0 rep choice 471-472 | ( 0 ch:0 ref:alphaNum 471-472 | ( 0 rule:alphaNum choice 471-472 | ( 0 ch:0 ref:alpha 471-472 | ( 0 rule:alpha choice 471-472 | ( 0 ch:0 char-range 471-472 ) ) ) ) ) ) : ( 0 sep text 472-472 ) : ( 0 rep choice 472-473 | ( 0 ch:0 ref:alphaNum 472-473 | ( 0 rule:alphaNum choice 472-473 | ( 0 ch:0 ref:alpha 472-473 | ( 0 rule:alpha choice 472-473 | ( 0 ch:0 char-range 472-473 ) ) ) ) ) ) : ( 0 sep text 473-473 ) : < None of choices matched input :: rep choice @473 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @473 | < None of choices matched input :: rule:alphaNum choice @473 | < Rule `alpha` didn't match :: ch:0 ref:alpha @473 | < None of choices matched input :: rule:alpha choice @473 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @473 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @473 > : < Expected '_', but found ':' :: ch:2 text @473 > > > : < Rule `num` didn't match :: ch:1 ref:num @473 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @473 > > > > : < Expected '.', but found ':' :: ch:1 text @473 > > ) ) ) : ( 0 seq:1 text 473-474 ) : ( 0 seq:2 ref:ws 474-475 | ( 0 rule:ws repsep 474-475 | ( 0 rep seqnc 474-475 | ( 0 seq:0 ref:spaces 474-475 | ( 0 rule:spaces repsep 474-475 | ( 0 rep text 474-475 ) : ( 0 sep text 475-475 ) : < Expected ' ', but found '"' :: rep text @475 > ) ) : ( 0 seq:1 choice 475-475 | < Rule `comment` didn't match :: ch:0 ref:comment @475 | < Sequence failed at entry 0 :: rule:comment seqnc @475 | < Expected '#', but found '"' :: seq:0 text @475 > > > : ( 0 ch:1 text 475-475 ) ) ) : < Expected '
', but found '"' :: sep text @475 > ) ) : ( 0 seq:3 ref:term 475-480 | ( 0 rule:term choice 475-480 | < Rule `record` didn't match :: ch:0 ref:record @475 | < Sequence failed at entry 0 :: rule:record seqnc @475 | < Rule `ident` didn't match :: seq:0 ref:ident @475 | < Sequence failed at entry 0 :: rule:ident seqnc @475 | < Rule `alpha` didn't match :: seq:0 ref:alpha @475 | < None of choices matched input :: rule:alpha choice @475 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @475 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @475 > : < Expected '_', but found '"' :: ch:2 text @475 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @475 | < Sequence failed at entry 1 :: rule:int seqnc @475 | ( 0 seq:0 choice 475-475 | < Expected '-', but found '"' :: ch:0 text @475 > : ( 0 ch:1 text 475-475 ) ) : < Rule `num` didn't match :: seq:1 ref:first @475 | < Expected character in range from '0' to '9', but found '"' :: rule:num char-range @475 > > > > : < Rule `var` didn't match :: ch:2 ref:var @475 | < Sequence failed at entry 0 :: rule:var seqnc @475 | < Expected character in range from 'A' to 'Z', but found '"' :: seq:0 char-range @475 > > > : ( 0 ch:3 ref:string 475-480 | ( 0 rule:string seqnc 475-480 | ( 0 seq:0 text 475-476 ) : ( 0 seq:1 repsep 476-479 | ( 0 rep ref:stringChar 476-477 | ( 0 rule:stringChar choice 476-477 | ( 0 ch:0 not-char 476-477 ) ) ) : ( 0 sep text 477-477 ) : ( 0 rep ref:stringChar 477-478 | ( 0 rule:stringChar choice 477-478 | ( 0 ch:0 not-char 477-478 ) ) ) : ( 0 sep text 478-478 ) : ( 0 rep ref:stringChar 478-479 | ( 0 rule:stringChar choice 478-479 | ( 0 ch:0 not-char 478-479 ) ) ) : ( 0 sep text 479-479 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @479 | < None of choices matched input :: rule:stringChar choice @479 | < Expected not to find '"', but found '"' :: ch:0 not-char @479 > : < Sequence failed at entry 0 :: ch:1 seqnc @479 | < Expected '\\', but found '"' :: seq:0 char @479 > > > > ) : ( 0 seq:2 text 479-480 ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 480-482 | ( 0 rule:commaSpace seqnc 480-482 | ( 0 seq:0 text 480-481 ) : ( 0 seq:1 ref:ws 481-482 | ( 0 rule:ws repsep 481-482 | ( 0 rep seqnc 481-482 | ( 0 seq:0 ref:spaces 481-482 | ( 0 rule:spaces repsep 481-482 | ( 0 rep text 481-482 ) : ( 0 sep text 482-482 ) : < Expected ' ', but found 's' :: rep text @482 > ) ) : ( 0 seq:1 choice 482-482 | < Rule `comment` didn't match :: ch:0 ref:comment @482 | < Sequence failed at entry 0 :: rule:comment seqnc @482 | < Expected '#', but found 's' :: seq:0 text @482 > > > : ( 0 ch:1 text 482-482 ) ) ) : < Expected '
', but found 's' :: sep text @482 > ) ) ) ) : ( 0 rep choice 482-489 | ( 0 ch:0 ref:recordKeyValue 482-489 | ( 0 rule:recordKeyValue seqnc 482-489 | ( 0 seq:0 ref:ident 482-486 | ( 0 rule:ident seqnc 482-486 | ( 0 seq:0 ref:alpha 482-483 | ( 0 rule:alpha choice 482-483 | ( 0 ch:0 char-range 482-483 ) ) ) : ( 0 seq:1 repsep 483-486 | ( 0 rep choice 483-484 | ( 0 ch:0 ref:alphaNum 483-484 | ( 0 rule:alphaNum choice 483-484 | ( 0 ch:0 ref:alpha 483-484 | ( 0 rule:alpha choice 483-484 | ( 0 ch:0 char-range 483-484 ) ) ) ) ) ) : ( 0 sep text 484-484 ) : ( 0 rep choice 484-485 | ( 0 ch:0 ref:alphaNum 484-485 | ( 0 rule:alphaNum choice 484-485 | ( 0 ch:0 ref:alpha 484-485 | ( 0 rule:alpha choice 484-485 | ( 0 ch:0 char-range 484-485 ) ) ) ) ) ) : ( 0 sep text 485-485 ) : ( 0 rep choice 485-486 | ( 0 ch:0 ref:alphaNum 485-486 | ( 0 rule:alphaNum choice 485-486 | ( 0 ch:0 ref:alpha 485-486 | ( 0 rule:alpha choice 485-486 | ( 0 ch:0 char-range 485-486 ) ) ) ) ) ) : ( 0 sep text 486-486 ) : < None of choices matched input :: rep choice @486 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @486 | < None of choices matched input :: rule:alphaNum choice @486 | < Rule `alpha` didn't match :: ch:0 ref:alpha @486 | < None of choices matched input :: rule:alpha choice @486 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @486 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @486 > : < Expected '_', but found ':' :: ch:2 text @486 > > > : < Rule `num` didn't match :: ch:1 ref:num @486 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @486 > > > > : < Expected '.', but found ':' :: ch:1 text @486 > > ) ) ) : ( 0 seq:1 text 486-487 ) : ( 0 seq:2 ref:ws 487-488 | ( 0 rule:ws repsep 487-488 | ( 0 rep seqnc 487-488 | ( 0 seq:0 ref:spaces 487-488 | ( 0 rule:spaces repsep 487-488 | ( 0 rep text 487-488 ) : ( 0 sep text 488-488 ) : < Expected ' ', but found 'S' :: rep text @488 > ) ) : ( 0 seq:1 choice 488-488 | < Rule `comment` didn't match :: ch:0 ref:comment @488 | < Sequence failed at entry 0 :: rule:comment seqnc @488 | < Expected '#', but found 'S' :: seq:0 text @488 > > > : ( 0 ch:1 text 488-488 ) ) ) : < Expected '
', but found 'S' :: sep text @488 > ) ) : ( 0 seq:3 ref:term 488-489 | ( 0 rule:term choice 488-489 | < Rule `record` didn't match :: ch:0 ref:record @488 | < Sequence failed at entry 1 :: rule:record seqnc @489 | ( 0 seq:0 ref:ident 488-489 | ( 0 rule:ident seqnc 488-489 | ( 0 seq:0 ref:alpha 488-489 | ( 0 rule:alpha choice 488-489 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @488 > : ( 0 ch:1 char-range 488-489 ) ) ) : ( 0 seq:1 repsep 489-489 | < None of choices matched input :: rep choice @489 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @489 | < None of choices matched input :: rule:alphaNum choice @489 | < Rule `alpha` didn't match :: ch:0 ref:alpha @489 | < None of choices matched input :: rule:alpha choice @489 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @489 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @489 > : < Expected '_', but found ',' :: ch:2 text @489 > > > : < Rule `num` didn't match :: ch:1 ref:num @489 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @489 > > > > : < Expected '.', but found ',' :: ch:1 text @489 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @489 > > > : < Rule `int` didn't match :: ch:1 ref:int @488 | < Sequence failed at entry 1 :: rule:int seqnc @488 | ( 0 seq:0 choice 488-488 | < Expected '-', but found 'S' :: ch:0 text @488 > : ( 0 ch:1 text 488-488 ) ) : < Rule `num` didn't match :: seq:1 ref:first @488 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @488 > > > > : ( 0 ch:2 ref:var 488-489 | ( 0 rule:var seqnc 488-489 | ( 0 seq:0 char-range 488-489 ) : ( 0 seq:1 repsep 489-489 | < None of choices matched input :: rep choice @489 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @489 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @489 | < None of choices matched input :: rule:alphaNum choice @489 | < Rule `alpha` didn't match :: ch:0 ref:alpha @489 | < None of choices matched input :: rule:alpha choice @489 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @489 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @489 > : < Expected '_', but found ',' :: ch:2 text @489 > > > : < Rule `num` didn't match :: ch:1 ref:num @489 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @489 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 489-491 | ( 0 rule:commaSpace seqnc 489-491 | ( 0 seq:0 text 489-490 ) : ( 0 seq:1 ref:ws 490-491 | ( 0 rule:ws repsep 490-491 | ( 0 rep seqnc 490-491 | ( 0 seq:0 ref:spaces 490-491 | ( 0 rule:spaces repsep 490-491 | ( 0 rep text 490-491 ) : ( 0 sep text 491-491 ) : < Expected ' ', but found 'h' :: rep text @491 > ) ) : ( 0 seq:1 choice 491-491 | < Rule `comment` didn't match :: ch:0 ref:comment @491 | < Sequence failed at entry 0 :: rule:comment seqnc @491 | < Expected '#', but found 'h' :: seq:0 text @491 > > > : ( 0 ch:1 text 491-491 ) ) ) : < Expected '
', but found 'h' :: sep text @491 > ) ) ) ) : ( 0 rep choice 491-507 | ( 0 ch:0 ref:recordKeyValue 491-507 | ( 0 rule:recordKeyValue seqnc 491-507 | ( 0 seq:0 ref:ident 491-500 | ( 0 rule:ident seqnc 491-500 | ( 0 seq:0 ref:alpha 491-492 | ( 0 rule:alpha choice 491-492 | ( 0 ch:0 char-range 491-492 ) ) ) : ( 0 seq:1 repsep 492-500 | ( 0 rep choice 492-493 | ( 0 ch:0 ref:alphaNum 492-493 | ( 0 rule:alphaNum choice 492-493 | ( 0 ch:0 ref:alpha 492-493 | ( 0 rule:alpha choice 492-493 | ( 0 ch:0 char-range 492-493 ) ) ) ) ) ) : ( 0 sep text 493-493 ) : ( 0 rep choice 493-494 | ( 0 ch:0 ref:alphaNum 493-494 | ( 0 rule:alphaNum choice 493-494 | ( 0 ch:0 ref:alpha 493-494 | ( 0 rule:alpha choice 493-494 | ( 0 ch:0 char-range 493-494 ) ) ) ) ) ) : ( 0 sep text 494-494 ) : ( 0 rep choice 494-495 | ( 0 ch:0 ref:alphaNum 494-495 | ( 0 rule:alphaNum choice 494-495 | ( 0 ch:0 ref:alpha 494-495 | ( 0 rule:alpha choice 494-495 | ( 0 ch:0 char-range 494-495 ) ) ) ) ) ) : ( 0 sep text 495-495 ) : ( 0 rep choice 495-496 | ( 0 ch:0 ref:alphaNum 495-496 | ( 0 rule:alphaNum choice 495-496 | ( 0 ch:0 ref:alpha 495-496 | ( 0 rule:alpha choice 495-496 | ( 0 ch:0 char-range 495-496 ) ) ) ) ) ) : ( 0 sep text 496-496 ) : ( 0 rep choice 496-497 | ( 0 ch:0 ref:alphaNum 496-497 | ( 0 rule:alphaNum choice 496-497 | ( 0 ch:0 ref:alpha 496-497 | ( 0 rule:alpha choice 496-497 | ( 0 ch:0 char-range 496-497 ) ) ) ) ) ) : ( 0 sep text 497-497 ) : ( 0 rep choice 497-498 | ( 0 ch:0 ref:alphaNum 497-498 | ( 0 rule:alphaNum choice 497-498 | ( 0 ch:0 ref:alpha 497-498 | ( 0 rule:alpha choice 497-498 | ( 0 ch:0 char-range 497-498 ) ) ) ) ) ) : ( 0 sep text 498-498 ) : ( 0 rep choice 498-499 | ( 0 ch:0 ref:alphaNum 498-499 | ( 0 rule:alphaNum choice 498-499 | ( 0 ch:0 ref:alpha 498-499 | ( 0 rule:alpha choice 498-499 | ( 0 ch:0 char-range 498-499 ) ) ) ) ) ) : ( 0 sep text 499-499 ) : ( 0 rep choice 499-500 | ( 0 ch:0 ref:alphaNum 499-500 | ( 0 rule:alphaNum choice 499-500 | ( 0 ch:0 ref:alpha 499-500 | ( 0 rule:alpha choice 499-500 | ( 0 ch:0 char-range 499-500 ) ) ) ) ) ) : ( 0 sep text 500-500 ) : < None of choices matched input :: rep choice @500 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @500 | < None of choices matched input :: rule:alphaNum choice @500 | < Rule `alpha` didn't match :: ch:0 ref:alpha @500 | < None of choices matched input :: rule:alpha choice @500 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @500 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @500 > : < Expected '_', but found ':' :: ch:2 text @500 > > > : < Rule `num` didn't match :: ch:1 ref:num @500 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @500 > > > > : < Expected '.', but found ':' :: ch:1 text @500 > > ) ) ) : ( 0 seq:1 text 500-501 ) : ( 0 seq:2 ref:ws 501-502 | ( 0 rule:ws repsep 501-502 | ( 0 rep seqnc 501-502 | ( 0 seq:0 ref:spaces 501-502 | ( 0 rule:spaces repsep 501-502 | ( 0 rep text 501-502 ) : ( 0 sep text 502-502 ) : < Expected ' ', but found 'f' :: rep text @502 > ) ) : ( 0 seq:1 choice 502-502 | < Rule `comment` didn't match :: ch:0 ref:comment @502 | < Sequence failed at entry 0 :: rule:comment seqnc @502 | < Expected '#', but found 'f' :: seq:0 text @502 > > > : ( 0 ch:1 text 502-502 ) ) ) : < Expected '
', but found 'f' :: sep text @502 > ) ) : ( 0 seq:3 ref:term 502-507 | ( 0 rule:term choice 502-507 | < Rule `record` didn't match :: ch:0 ref:record @502 | < Sequence failed at entry 1 :: rule:record seqnc @507 | ( 0 seq:0 ref:ident 502-507 | ( 0 rule:ident seqnc 502-507 | ( 0 seq:0 ref:alpha 502-503 | ( 0 rule:alpha choice 502-503 | ( 0 ch:0 char-range 502-503 ) ) ) : ( 0 seq:1 repsep 503-507 | ( 0 rep choice 503-504 | ( 0 ch:0 ref:alphaNum 503-504 | ( 0 rule:alphaNum choice 503-504 | ( 0 ch:0 ref:alpha 503-504 | ( 0 rule:alpha choice 503-504 | ( 0 ch:0 char-range 503-504 ) ) ) ) ) ) : ( 0 sep text 504-504 ) : ( 0 rep choice 504-505 | ( 0 ch:0 ref:alphaNum 504-505 | ( 0 rule:alphaNum choice 504-505 | ( 0 ch:0 ref:alpha 504-505 | ( 0 rule:alpha choice 504-505 | ( 0 ch:0 char-range 504-505 ) ) ) ) ) ) : ( 0 sep text 505-505 ) : ( 0 rep choice 505-506 | ( 0 ch:0 ref:alphaNum 505-506 | ( 0 rule:alphaNum choice 505-506 | ( 0 ch:0 ref:alpha 505-506 | ( 0 rule:alpha choice 505-506 | ( 0 ch:0 char-range 505-506 ) ) ) ) ) ) : ( 0 sep text 506-506 ) : ( 0 rep choice 506-507 | ( 0 ch:0 ref:alphaNum 506-507 | ( 0 rule:alphaNum choice 506-507 | ( 0 ch:0 ref:alpha 506-507 | ( 0 rule:alpha choice 506-507 | ( 0 ch:0 char-range 506-507 ) ) ) ) ) ) : ( 0 sep text 507-507 ) : < None of choices matched input :: rep choice @507 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @507 | < None of choices matched input :: rule:alphaNum choice @507 | < Rule `alpha` didn't match :: ch:0 ref:alpha @507 | < None of choices matched input :: rule:alpha choice @507 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @507 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @507 > : < Expected '_', but found '}' :: ch:2 text @507 > > > : < Rule `num` didn't match :: ch:1 ref:num @507 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @507 > > > > : < Expected '.', but found '}' :: ch:1 text @507 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @507 > > > : < Rule `int` didn't match :: ch:1 ref:int @502 | < Sequence failed at entry 1 :: rule:int seqnc @502 | ( 0 seq:0 choice 502-502 | < Expected '-', but found 'f' :: ch:0 text @502 > : ( 0 ch:1 text 502-502 ) ) : < Rule `num` didn't match :: seq:1 ref:first @502 | < Expected character in range from '0' to '9', but found 'f' :: rule:num char-range @502 > > > > : < Rule `var` didn't match :: ch:2 ref:var @502 | < Sequence failed at entry 0 :: rule:var seqnc @502 | < Expected character in range from 'A' to 'Z', but found 'f' :: seq:0 char-range @502 > > > : < Rule `string` didn't match :: ch:3 ref:string @502 | < Sequence failed at entry 0 :: rule:string seqnc @502 | < Expected '"', but found 'f' :: seq:0 text @502 > > > : ( 0 ch:4 ref:bool 502-507 | ( 0 rule:bool choice 502-507 | < Expected 'true', but found 'fals' :: ch:0 text @502 > : ( 0 ch:1 text 502-507 ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @507 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @507 | < Expected ',', but found '}' :: seq:0 text @507 > > > ) ) : ( 0 seq:4 ref:ws 507-507 | ( 0 rule:ws repsep 507-507 | ( 0 rep seqnc 507-507 | ( 0 seq:0 ref:spaces 507-507 | ( 0 rule:spaces repsep 507-507 | < Expected ' ', but found '}' :: rep text @507 > ) ) : ( 0 seq:1 choice 507-507 | < Rule `comment` didn't match :: ch:0 ref:comment @507 | < Sequence failed at entry 0 :: rule:comment seqnc @507 | < Expected '#', but found '}' :: seq:0 text @507 > > > : ( 0 ch:1 text 507-507 ) ) ) : < Expected '
', but found '}' :: sep text @507 > ) ) : ( 0 seq:5 text 507-508 ) ) ) : ( 0 seq:1 ref:ws 508-509 | ( 0 rule:ws repsep 508-509 | ( 0 rep seqnc 508-509 | ( 0 seq:0 ref:spaces 508-509 | ( 0 rule:spaces repsep 508-509 | ( 0 rep text 508-509 ) : ( 0 sep text 509-509 ) : < Expected ' ', but found ':' :: rep text @509 > ) ) : ( 0 seq:1 choice 509-509 | < Rule `comment` didn't match :: ch:0 ref:comment @509 | < Sequence failed at entry 0 :: rule:comment seqnc @509 | < Expected '#', but found ':' :: seq:0 text @509 > > > : ( 0 ch:1 text 509-509 ) ) ) : < Expected '
', but found ':' :: sep text @509 > ) ) : ( 0 seq:2 text 509-511 ) : ( 0 seq:3 ref:ws 511-514 | ( 0 rule:ws repsep 511-514 | ( 0 rep seqnc 511-511 | ( 0 seq:0 ref:spaces 511-511 | ( 0 rule:spaces repsep 511-511 | < Expected ' ', but found '
' :: rep text @511 > ) ) : ( 0 seq:1 choice 511-511 | < Rule `comment` didn't match :: ch:0 ref:comment @511 | < Sequence failed at entry 0 :: rule:comment seqnc @511 | < Expected '#', but found '
' :: seq:0 text @511 > > > : ( 0 ch:1 text 511-511 ) ) ) : ( 0 sep text 511-512 ) : ( 0 rep seqnc 512-514 | ( 0 seq:0 ref:spaces 512-514 | ( 0 rule:spaces repsep 512-514 | ( 0 rep text 512-513 ) : ( 0 sep text 513-513 ) : ( 0 rep text 513-514 ) : ( 0 sep text 514-514 ) : < Expected ' ', but found 'a' :: rep text @514 > ) ) : ( 0 seq:1 choice 514-514 | < Rule `comment` didn't match :: ch:0 ref:comment @514 | < Sequence failed at entry 0 :: rule:comment seqnc @514 | < Expected '#', but found 'a' :: seq:0 text @514 > > > : ( 0 ch:1 text 514-514 ) ) ) : < Expected '
', but found 'a' :: sep text @514 > ) ) : ( 0 seq:4 repsep 514-530 | ( 0 rep ref:disjunct 514-530 | ( 0 rule:disjunct repsep 514-530 | ( 0 rep ref:conjunct 514-530 | ( 0 rule:conjunct choice 514-530 | ( 0 ch:0 ref:record 514-530 | ( 0 rule:record seqnc 514-530 | ( 0 seq:0 ref:ident 514-521 | ( 0 rule:ident seqnc 514-521 | ( 0 seq:0 ref:alpha 514-515 | ( 0 rule:alpha choice 514-515 | ( 0 ch:0 char-range 514-515 ) ) ) : ( 0 seq:1 repsep 515-521 | ( 0 rep choice 515-516 | ( 0 ch:0 ref:alphaNum 515-516 | ( 0 rule:alphaNum choice 515-516 | ( 0 ch:0 ref:alpha 515-516 | ( 0 rule:alpha choice 515-516 | ( 0 ch:0 char-range 515-516 ) ) ) ) ) ) : ( 0 sep text 516-516 ) : ( 0 rep choice 516-517 | ( 0 ch:0 ref:alphaNum 516-517 | ( 0 rule:alphaNum choice 516-517 | ( 0 ch:0 ref:alpha 516-517 | ( 0 rule:alpha choice 516-517 | ( 0 ch:0 char-range 516-517 ) ) ) ) ) ) : ( 0 sep text 517-517 ) : ( 0 rep choice 517-518 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @517 | < None of choices matched input :: rule:alphaNum choice @517 | < Rule `alpha` didn't match :: ch:0 ref:alpha @517 | < None of choices matched input :: rule:alpha choice @517 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @517 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @517 > : < Expected '_', but found '.' :: ch:2 text @517 > > > : < Rule `num` didn't match :: ch:1 ref:num @517 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @517 > > > > : ( 0 ch:1 text 517-518 ) ) : ( 0 sep text 518-518 ) : ( 0 rep choice 518-519 | ( 0 ch:0 ref:alphaNum 518-519 | ( 0 rule:alphaNum choice 518-519 | ( 0 ch:0 ref:alpha 518-519 | ( 0 rule:alpha choice 518-519 | ( 0 ch:0 char-range 518-519 ) ) ) ) ) ) : ( 0 sep text 519-519 ) : ( 0 rep choice 519-520 | ( 0 ch:0 ref:alphaNum 519-520 | ( 0 rule:alphaNum choice 519-520 | ( 0 ch:0 ref:alpha 519-520 | ( 0 rule:alpha choice 519-520 | ( 0 ch:0 char-range 519-520 ) ) ) ) ) ) : ( 0 sep text 520-520 ) : ( 0 rep choice 520-521 | ( 0 ch:0 ref:alphaNum 520-521 | ( 0 rule:alphaNum choice 520-521 | ( 0 ch:0 ref:alpha 520-521 | ( 0 rule:alpha choice 520-521 | ( 0 ch:0 char-range 520-521 ) ) ) ) ) ) : ( 0 sep text 521-521 ) : < None of choices matched input :: rep choice @521 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @521 | < None of choices matched input :: rule:alphaNum choice @521 | < Rule `alpha` didn't match :: ch:0 ref:alpha @521 | < None of choices matched input :: rule:alpha choice @521 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @521 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @521 > : < Expected '_', but found '{' :: ch:2 text @521 > > > : < Rule `num` didn't match :: ch:1 ref:num @521 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @521 > > > > : < Expected '.', but found '{' :: ch:1 text @521 > > ) ) ) : ( 0 seq:1 text 521-522 ) : ( 0 seq:2 ref:ws 522-522 | ( 0 rule:ws repsep 522-522 | ( 0 rep seqnc 522-522 | ( 0 seq:0 ref:spaces 522-522 | ( 0 rule:spaces repsep 522-522 | < Expected ' ', but found 's' :: rep text @522 > ) ) : ( 0 seq:1 choice 522-522 | < Rule `comment` didn't match :: ch:0 ref:comment @522 | < Sequence failed at entry 0 :: rule:comment seqnc @522 | < Expected '#', but found 's' :: seq:0 text @522 > > > : ( 0 ch:1 text 522-522 ) ) ) : < Expected '
', but found 's' :: sep text @522 > ) ) : ( 0 seq:3 ref:recordAttrs 522-529 | ( 0 rule:recordAttrs repsep 522-529 | ( 0 rep choice 522-529 | ( 0 ch:0 ref:recordKeyValue 522-529 | ( 0 rule:recordKeyValue seqnc 522-529 | ( 0 seq:0 ref:ident 522-526 | ( 0 rule:ident seqnc 522-526 | ( 0 seq:0 ref:alpha 522-523 | ( 0 rule:alpha choice 522-523 | ( 0 ch:0 char-range 522-523 ) ) ) : ( 0 seq:1 repsep 523-526 | ( 0 rep choice 523-524 | ( 0 ch:0 ref:alphaNum 523-524 | ( 0 rule:alphaNum choice 523-524 | ( 0 ch:0 ref:alpha 523-524 | ( 0 rule:alpha choice 523-524 | ( 0 ch:0 char-range 523-524 ) ) ) ) ) ) : ( 0 sep text 524-524 ) : ( 0 rep choice 524-525 | ( 0 ch:0 ref:alphaNum 524-525 | ( 0 rule:alphaNum choice 524-525 | ( 0 ch:0 ref:alpha 524-525 | ( 0 rule:alpha choice 524-525 | ( 0 ch:0 char-range 524-525 ) ) ) ) ) ) : ( 0 sep text 525-525 ) : ( 0 rep choice 525-526 | ( 0 ch:0 ref:alphaNum 525-526 | ( 0 rule:alphaNum choice 525-526 | ( 0 ch:0 ref:alpha 525-526 | ( 0 rule:alpha choice 525-526 | ( 0 ch:0 char-range 525-526 ) ) ) ) ) ) : ( 0 sep text 526-526 ) : < None of choices matched input :: rep choice @526 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @526 | < None of choices matched input :: rule:alphaNum choice @526 | < Rule `alpha` didn't match :: ch:0 ref:alpha @526 | < None of choices matched input :: rule:alpha choice @526 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @526 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @526 > : < Expected '_', but found ':' :: ch:2 text @526 > > > : < Rule `num` didn't match :: ch:1 ref:num @526 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @526 > > > > : < Expected '.', but found ':' :: ch:1 text @526 > > ) ) ) : ( 0 seq:1 text 526-527 ) : ( 0 seq:2 ref:ws 527-528 | ( 0 rule:ws repsep 527-528 | ( 0 rep seqnc 527-528 | ( 0 seq:0 ref:spaces 527-528 | ( 0 rule:spaces repsep 527-528 | ( 0 rep text 527-528 ) : ( 0 sep text 528-528 ) : < Expected ' ', but found 'S' :: rep text @528 > ) ) : ( 0 seq:1 choice 528-528 | < Rule `comment` didn't match :: ch:0 ref:comment @528 | < Sequence failed at entry 0 :: rule:comment seqnc @528 | < Expected '#', but found 'S' :: seq:0 text @528 > > > : ( 0 ch:1 text 528-528 ) ) ) : < Expected '
', but found 'S' :: sep text @528 > ) ) : ( 0 seq:3 ref:term 528-529 | ( 0 rule:term choice 528-529 | < Rule `record` didn't match :: ch:0 ref:record @528 | < Sequence failed at entry 1 :: rule:record seqnc @529 | ( 0 seq:0 ref:ident 528-529 | ( 0 rule:ident seqnc 528-529 | ( 0 seq:0 ref:alpha 528-529 | ( 0 rule:alpha choice 528-529 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @528 > : ( 0 ch:1 char-range 528-529 ) ) ) : ( 0 seq:1 repsep 529-529 | < None of choices matched input :: rep choice @529 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @529 | < None of choices matched input :: rule:alphaNum choice @529 | < Rule `alpha` didn't match :: ch:0 ref:alpha @529 | < None of choices matched input :: rule:alpha choice @529 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @529 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @529 > : < Expected '_', but found '}' :: ch:2 text @529 > > > : < Rule `num` didn't match :: ch:1 ref:num @529 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @529 > > > > : < Expected '.', but found '}' :: ch:1 text @529 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @529 > > > : < Rule `int` didn't match :: ch:1 ref:int @528 | < Sequence failed at entry 1 :: rule:int seqnc @528 | ( 0 seq:0 choice 528-528 | < Expected '-', but found 'S' :: ch:0 text @528 > : ( 0 ch:1 text 528-528 ) ) : < Rule `num` didn't match :: seq:1 ref:first @528 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @528 > > > > : ( 0 ch:2 ref:var 528-529 | ( 0 rule:var seqnc 528-529 | ( 0 seq:0 char-range 528-529 ) : ( 0 seq:1 repsep 529-529 | < None of choices matched input :: rep choice @529 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @529 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @529 | < None of choices matched input :: rule:alphaNum choice @529 | < Rule `alpha` didn't match :: ch:0 ref:alpha @529 | < None of choices matched input :: rule:alpha choice @529 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @529 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @529 > : < Expected '_', but found '}' :: ch:2 text @529 > > > : < Rule `num` didn't match :: ch:1 ref:num @529 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @529 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @529 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @529 | < Expected ',', but found '}' :: seq:0 text @529 > > > ) ) : ( 0 seq:4 ref:ws 529-529 | ( 0 rule:ws repsep 529-529 | ( 0 rep seqnc 529-529 | ( 0 seq:0 ref:spaces 529-529 | ( 0 rule:spaces repsep 529-529 | < Expected ' ', but found '}' :: rep text @529 > ) ) : ( 0 seq:1 choice 529-529 | < Rule `comment` didn't match :: ch:0 ref:comment @529 | < Sequence failed at entry 0 :: rule:comment seqnc @529 | < Expected '#', but found '}' :: seq:0 text @529 > > > : ( 0 ch:1 text 529-529 ) ) ) : < Expected '
', but found '}' :: sep text @529 > ) ) : ( 0 seq:5 text 529-530 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @530 | ( 0 seq:0 ref:ws 530-530 | ( 0 rule:ws repsep 530-530 | ( 0 rep seqnc 530-530 | ( 0 seq:0 ref:spaces 530-530 | ( 0 rule:spaces repsep 530-530 | < Expected ' ', but found '.' :: rep text @530 > ) ) : ( 0 seq:1 choice 530-530 | < Rule `comment` didn't match :: ch:0 ref:comment @530 | < Sequence failed at entry 0 :: rule:comment seqnc @530 | < Expected '#', but found '.' :: seq:0 text @530 > > > : ( 0 ch:1 text 530-530 ) ) ) : < Expected '
', but found '.' :: sep text @530 > ) ) : < Expected '&', but found '.' :: seq:1 text @530 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @530 | ( 0 seq:0 ref:ws 530-530 | ( 0 rule:ws repsep 530-530 | ( 0 rep seqnc 530-530 | ( 0 seq:0 ref:spaces 530-530 | ( 0 rule:spaces repsep 530-530 | < Expected ' ', but found '.' :: rep text @530 > ) ) : ( 0 seq:1 choice 530-530 | < Rule `comment` didn't match :: ch:0 ref:comment @530 | < Sequence failed at entry 0 :: rule:comment seqnc @530 | < Expected '#', but found '.' :: seq:0 text @530 > > > : ( 0 ch:1 text 530-530 ) ) ) : < Expected '
', but found '.' :: sep text @530 > ) ) : < Expected '|', but found '.' :: seq:1 text @530 > > ) : ( 0 seq:5 text 530-531 ) ) ) ) ) : ( 0 sep ref:ws 531-532 | ( 0 rule:ws repsep 531-532 | ( 0 rep seqnc 531-531 | ( 0 seq:0 ref:spaces 531-531 | ( 0 rule:spaces repsep 531-531 | < Expected ' ', but found '
' :: rep text @531 > ) ) : ( 0 seq:1 choice 531-531 | < Rule `comment` didn't match :: ch:0 ref:comment @531 | < Sequence failed at entry 0 :: rule:comment seqnc @531 | < Expected '#', but found '
' :: seq:0 text @531 > > > : ( 0 ch:1 text 531-531 ) ) ) : ( 0 sep text 531-532 ) : ( 0 rep seqnc 532-532 | ( 0 seq:0 ref:spaces 532-532 | ( 0 rule:spaces repsep 532-532 | < Expected ' ', but found 'h' :: rep text @532 > ) ) : ( 0 seq:1 choice 532-532 | < Rule `comment` didn't match :: ch:0 ref:comment @532 | < Sequence failed at entry 0 :: rule:comment seqnc @532 | < Expected '#', but found 'h' :: seq:0 text @532 > > > : ( 0 ch:1 text 532-532 ) ) ) : < Expected '
', but found 'h' :: sep text @532 > ) ) : ( 0 rep ref:statement 532-610 | ( 0 rule:statement choice 532-610 | ( 0 ch:0 ref:rule 532-610 | ( 0 rule:rule seqnc 532-610 | ( 0 seq:0 ref:record 532-584 | ( 0 rule:record seqnc 532-584 | ( 0 seq:0 ref:ident 532-541 | ( 0 rule:ident seqnc 532-541 | ( 0 seq:0 ref:alpha 532-533 | ( 0 rule:alpha choice 532-533 | ( 0 ch:0 char-range 532-533 ) ) ) : ( 0 seq:1 repsep 533-541 | ( 0 rep choice 533-534 | ( 0 ch:0 ref:alphaNum 533-534 | ( 0 rule:alphaNum choice 533-534 | ( 0 ch:0 ref:alpha 533-534 | ( 0 rule:alpha choice 533-534 | ( 0 ch:0 char-range 533-534 ) ) ) ) ) ) : ( 0 sep text 534-534 ) : ( 0 rep choice 534-535 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @534 | < None of choices matched input :: rule:alphaNum choice @534 | < Rule `alpha` didn't match :: ch:0 ref:alpha @534 | < None of choices matched input :: rule:alpha choice @534 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @534 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @534 > : < Expected '_', but found '.' :: ch:2 text @534 > > > : < Rule `num` didn't match :: ch:1 ref:num @534 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @534 > > > > : ( 0 ch:1 text 534-535 ) ) : ( 0 sep text 535-535 ) : ( 0 rep choice 535-536 | ( 0 ch:0 ref:alphaNum 535-536 | ( 0 rule:alphaNum choice 535-536 | ( 0 ch:0 ref:alpha 535-536 | ( 0 rule:alpha choice 535-536 | ( 0 ch:0 char-range 535-536 ) ) ) ) ) ) : ( 0 sep text 536-536 ) : ( 0 rep choice 536-537 | ( 0 ch:0 ref:alphaNum 536-537 | ( 0 rule:alphaNum choice 536-537 | ( 0 ch:0 ref:alpha 536-537 | ( 0 rule:alpha choice 536-537 | ( 0 ch:0 char-range 536-537 ) ) ) ) ) ) : ( 0 sep text 537-537 ) : ( 0 rep choice 537-538 | ( 0 ch:0 ref:alphaNum 537-538 | ( 0 rule:alphaNum choice 537-538 | ( 0 ch:0 ref:alpha 537-538 | ( 0 rule:alpha choice 537-538 | ( 0 ch:0 char-range 537-538 ) ) ) ) ) ) : ( 0 sep text 538-538 ) : ( 0 rep choice 538-539 | ( 0 ch:0 ref:alphaNum 538-539 | ( 0 rule:alphaNum choice 538-539 | ( 0 ch:0 ref:alpha 538-539 | ( 0 rule:alpha choice 538-539 | ( 0 ch:0 char-range 538-539 ) ) ) ) ) ) : ( 0 sep text 539-539 ) : ( 0 rep choice 539-540 | ( 0 ch:0 ref:alphaNum 539-540 | ( 0 rule:alphaNum choice 539-540 | ( 0 ch:0 ref:alpha 539-540 | ( 0 rule:alpha choice 539-540 | ( 0 ch:0 char-range 539-540 ) ) ) ) ) ) : ( 0 sep text 540-540 ) : ( 0 rep choice 540-541 | ( 0 ch:0 ref:alphaNum 540-541 | ( 0 rule:alphaNum choice 540-541 | ( 0 ch:0 ref:alpha 540-541 | ( 0 rule:alpha choice 540-541 | ( 0 ch:0 char-range 540-541 ) ) ) ) ) ) : ( 0 sep text 541-541 ) : < None of choices matched input :: rep choice @541 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @541 | < None of choices matched input :: rule:alphaNum choice @541 | < Rule `alpha` didn't match :: ch:0 ref:alpha @541 | < None of choices matched input :: rule:alpha choice @541 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @541 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @541 > : < Expected '_', but found '{' :: ch:2 text @541 > > > : < Rule `num` didn't match :: ch:1 ref:num @541 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @541 > > > > : < Expected '.', but found '{' :: ch:1 text @541 > > ) ) ) : ( 0 seq:1 text 541-542 ) : ( 0 seq:2 ref:ws 542-542 | ( 0 rule:ws repsep 542-542 | ( 0 rep seqnc 542-542 | ( 0 seq:0 ref:spaces 542-542 | ( 0 rule:spaces repsep 542-542 | < Expected ' ', but found 't' :: rep text @542 > ) ) : ( 0 seq:1 choice 542-542 | < Rule `comment` didn't match :: ch:0 ref:comment @542 | < Sequence failed at entry 0 :: rule:comment seqnc @542 | < Expected '#', but found 't' :: seq:0 text @542 > > > : ( 0 ch:1 text 542-542 ) ) ) : < Expected '
', but found 't' :: sep text @542 > ) ) : ( 0 seq:3 ref:recordAttrs 542-583 | ( 0 rule:recordAttrs repsep 542-583 | ( 0 rep choice 542-556 | ( 0 ch:0 ref:recordKeyValue 542-556 | ( 0 rule:recordKeyValue seqnc 542-556 | ( 0 seq:0 ref:ident 542-546 | ( 0 rule:ident seqnc 542-546 | ( 0 seq:0 ref:alpha 542-543 | ( 0 rule:alpha choice 542-543 | ( 0 ch:0 char-range 542-543 ) ) ) : ( 0 seq:1 repsep 543-546 | ( 0 rep choice 543-544 | ( 0 ch:0 ref:alphaNum 543-544 | ( 0 rule:alphaNum choice 543-544 | ( 0 ch:0 ref:alpha 543-544 | ( 0 rule:alpha choice 543-544 | ( 0 ch:0 char-range 543-544 ) ) ) ) ) ) : ( 0 sep text 544-544 ) : ( 0 rep choice 544-545 | ( 0 ch:0 ref:alphaNum 544-545 | ( 0 rule:alphaNum choice 544-545 | ( 0 ch:0 ref:alpha 544-545 | ( 0 rule:alpha choice 544-545 | ( 0 ch:0 char-range 544-545 ) ) ) ) ) ) : ( 0 sep text 545-545 ) : ( 0 rep choice 545-546 | ( 0 ch:0 ref:alphaNum 545-546 | ( 0 rule:alphaNum choice 545-546 | ( 0 ch:0 ref:alpha 545-546 | ( 0 rule:alpha choice 545-546 | ( 0 ch:0 char-range 545-546 ) ) ) ) ) ) : ( 0 sep text 546-546 ) : < None of choices matched input :: rep choice @546 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @546 | < None of choices matched input :: rule:alphaNum choice @546 | < Rule `alpha` didn't match :: ch:0 ref:alpha @546 | < None of choices matched input :: rule:alpha choice @546 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @546 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @546 > : < Expected '_', but found ':' :: ch:2 text @546 > > > : < Rule `num` didn't match :: ch:1 ref:num @546 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @546 > > > > : < Expected '.', but found ':' :: ch:1 text @546 > > ) ) ) : ( 0 seq:1 text 546-547 ) : ( 0 seq:2 ref:ws 547-548 | ( 0 rule:ws repsep 547-548 | ( 0 rep seqnc 547-548 | ( 0 seq:0 ref:spaces 547-548 | ( 0 rule:spaces repsep 547-548 | ( 0 rep text 547-548 ) : ( 0 sep text 548-548 ) : < Expected ' ', but found '"' :: rep text @548 > ) ) : ( 0 seq:1 choice 548-548 | < Rule `comment` didn't match :: ch:0 ref:comment @548 | < Sequence failed at entry 0 :: rule:comment seqnc @548 | < Expected '#', but found '"' :: seq:0 text @548 > > > : ( 0 ch:1 text 548-548 ) ) ) : < Expected '
', but found '"' :: sep text @548 > ) ) : ( 0 seq:3 ref:term 548-556 | ( 0 rule:term choice 548-556 | < Rule `record` didn't match :: ch:0 ref:record @548 | < Sequence failed at entry 0 :: rule:record seqnc @548 | < Rule `ident` didn't match :: seq:0 ref:ident @548 | < Sequence failed at entry 0 :: rule:ident seqnc @548 | < Rule `alpha` didn't match :: seq:0 ref:alpha @548 | < None of choices matched input :: rule:alpha choice @548 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @548 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @548 > : < Expected '_', but found '"' :: ch:2 text @548 > > > > > > > : < Rule `int` didn't match :: ch:1 ref:int @548 | < Sequence failed at entry 1 :: rule:int seqnc @548 | ( 0 seq:0 choice 548-548 | < Expected '-', but found '"' :: ch:0 text @548 > : ( 0 ch:1 text 548-548 ) ) : < Rule `num` didn't match :: seq:1 ref:first @548 | < Expected character in range from '0' to '9', but found '"' :: rule:num char-range @548 > > > > : < Rule `var` didn't match :: ch:2 ref:var @548 | < Sequence failed at entry 0 :: rule:var seqnc @548 | < Expected character in range from 'A' to 'Z', but found '"' :: seq:0 char-range @548 > > > : ( 0 ch:3 ref:string 548-556 | ( 0 rule:string seqnc 548-556 | ( 0 seq:0 text 548-549 ) : ( 0 seq:1 repsep 549-555 | ( 0 rep ref:stringChar 549-550 | ( 0 rule:stringChar choice 549-550 | ( 0 ch:0 not-char 549-550 ) ) ) : ( 0 sep text 550-550 ) : ( 0 rep ref:stringChar 550-551 | ( 0 rule:stringChar choice 550-551 | ( 0 ch:0 not-char 550-551 ) ) ) : ( 0 sep text 551-551 ) : ( 0 rep ref:stringChar 551-552 | ( 0 rule:stringChar choice 551-552 | ( 0 ch:0 not-char 551-552 ) ) ) : ( 0 sep text 552-552 ) : ( 0 rep ref:stringChar 552-553 | ( 0 rule:stringChar choice 552-553 | ( 0 ch:0 not-char 552-553 ) ) ) : ( 0 sep text 553-553 ) : ( 0 rep ref:stringChar 553-554 | ( 0 rule:stringChar choice 553-554 | ( 0 ch:0 not-char 553-554 ) ) ) : ( 0 sep text 554-554 ) : ( 0 rep ref:stringChar 554-555 | ( 0 rule:stringChar choice 554-555 | ( 0 ch:0 not-char 554-555 ) ) ) : ( 0 sep text 555-555 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @555 | < None of choices matched input :: rule:stringChar choice @555 | < Expected not to find '"', but found '"' :: ch:0 not-char @555 > : < Sequence failed at entry 0 :: ch:1 seqnc @555 | < Expected '\\', but found '"' :: seq:0 char @555 > > > > ) : ( 0 seq:2 text 555-556 ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 556-558 | ( 0 rule:commaSpace seqnc 556-558 | ( 0 seq:0 text 556-557 ) : ( 0 seq:1 ref:ws 557-558 | ( 0 rule:ws repsep 557-558 | ( 0 rep seqnc 557-558 | ( 0 seq:0 ref:spaces 557-558 | ( 0 rule:spaces repsep 557-558 | ( 0 rep text 557-558 ) : ( 0 sep text 558-558 ) : < Expected ' ', but found 's' :: rep text @558 > ) ) : ( 0 seq:1 choice 558-558 | < Rule `comment` didn't match :: ch:0 ref:comment @558 | < Sequence failed at entry 0 :: rule:comment seqnc @558 | < Expected '#', but found 's' :: seq:0 text @558 > > > : ( 0 ch:1 text 558-558 ) ) ) : < Expected '
', but found 's' :: sep text @558 > ) ) ) ) : ( 0 rep choice 558-565 | ( 0 ch:0 ref:recordKeyValue 558-565 | ( 0 rule:recordKeyValue seqnc 558-565 | ( 0 seq:0 ref:ident 558-562 | ( 0 rule:ident seqnc 558-562 | ( 0 seq:0 ref:alpha 558-559 | ( 0 rule:alpha choice 558-559 | ( 0 ch:0 char-range 558-559 ) ) ) : ( 0 seq:1 repsep 559-562 | ( 0 rep choice 559-560 | ( 0 ch:0 ref:alphaNum 559-560 | ( 0 rule:alphaNum choice 559-560 | ( 0 ch:0 ref:alpha 559-560 | ( 0 rule:alpha choice 559-560 | ( 0 ch:0 char-range 559-560 ) ) ) ) ) ) : ( 0 sep text 560-560 ) : ( 0 rep choice 560-561 | ( 0 ch:0 ref:alphaNum 560-561 | ( 0 rule:alphaNum choice 560-561 | ( 0 ch:0 ref:alpha 560-561 | ( 0 rule:alpha choice 560-561 | ( 0 ch:0 char-range 560-561 ) ) ) ) ) ) : ( 0 sep text 561-561 ) : ( 0 rep choice 561-562 | ( 0 ch:0 ref:alphaNum 561-562 | ( 0 rule:alphaNum choice 561-562 | ( 0 ch:0 ref:alpha 561-562 | ( 0 rule:alpha choice 561-562 | ( 0 ch:0 char-range 561-562 ) ) ) ) ) ) : ( 0 sep text 562-562 ) : < None of choices matched input :: rep choice @562 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @562 | < None of choices matched input :: rule:alphaNum choice @562 | < Rule `alpha` didn't match :: ch:0 ref:alpha @562 | < None of choices matched input :: rule:alpha choice @562 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @562 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @562 > : < Expected '_', but found ':' :: ch:2 text @562 > > > : < Rule `num` didn't match :: ch:1 ref:num @562 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @562 > > > > : < Expected '.', but found ':' :: ch:1 text @562 > > ) ) ) : ( 0 seq:1 text 562-563 ) : ( 0 seq:2 ref:ws 563-564 | ( 0 rule:ws repsep 563-564 | ( 0 rep seqnc 563-564 | ( 0 seq:0 ref:spaces 563-564 | ( 0 rule:spaces repsep 563-564 | ( 0 rep text 563-564 ) : ( 0 sep text 564-564 ) : < Expected ' ', but found 'S' :: rep text @564 > ) ) : ( 0 seq:1 choice 564-564 | < Rule `comment` didn't match :: ch:0 ref:comment @564 | < Sequence failed at entry 0 :: rule:comment seqnc @564 | < Expected '#', but found 'S' :: seq:0 text @564 > > > : ( 0 ch:1 text 564-564 ) ) ) : < Expected '
', but found 'S' :: sep text @564 > ) ) : ( 0 seq:3 ref:term 564-565 | ( 0 rule:term choice 564-565 | < Rule `record` didn't match :: ch:0 ref:record @564 | < Sequence failed at entry 1 :: rule:record seqnc @565 | ( 0 seq:0 ref:ident 564-565 | ( 0 rule:ident seqnc 564-565 | ( 0 seq:0 ref:alpha 564-565 | ( 0 rule:alpha choice 564-565 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @564 > : ( 0 ch:1 char-range 564-565 ) ) ) : ( 0 seq:1 repsep 565-565 | < None of choices matched input :: rep choice @565 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @565 | < None of choices matched input :: rule:alphaNum choice @565 | < Rule `alpha` didn't match :: ch:0 ref:alpha @565 | < None of choices matched input :: rule:alpha choice @565 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @565 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @565 > : < Expected '_', but found ',' :: ch:2 text @565 > > > : < Rule `num` didn't match :: ch:1 ref:num @565 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @565 > > > > : < Expected '.', but found ',' :: ch:1 text @565 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @565 > > > : < Rule `int` didn't match :: ch:1 ref:int @564 | < Sequence failed at entry 1 :: rule:int seqnc @564 | ( 0 seq:0 choice 564-564 | < Expected '-', but found 'S' :: ch:0 text @564 > : ( 0 ch:1 text 564-564 ) ) : < Rule `num` didn't match :: seq:1 ref:first @564 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @564 > > > > : ( 0 ch:2 ref:var 564-565 | ( 0 rule:var seqnc 564-565 | ( 0 seq:0 char-range 564-565 ) : ( 0 seq:1 repsep 565-565 | < None of choices matched input :: rep choice @565 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @565 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @565 | < None of choices matched input :: rule:alphaNum choice @565 | < Rule `alpha` didn't match :: ch:0 ref:alpha @565 | < None of choices matched input :: rule:alpha choice @565 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @565 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @565 > : < Expected '_', but found ',' :: ch:2 text @565 > > > : < Rule `num` didn't match :: ch:1 ref:num @565 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @565 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 565-567 | ( 0 rule:commaSpace seqnc 565-567 | ( 0 seq:0 text 565-566 ) : ( 0 seq:1 ref:ws 566-567 | ( 0 rule:ws repsep 566-567 | ( 0 rep seqnc 566-567 | ( 0 seq:0 ref:spaces 566-567 | ( 0 rule:spaces repsep 566-567 | ( 0 rep text 566-567 ) : ( 0 sep text 567-567 ) : < Expected ' ', but found 'h' :: rep text @567 > ) ) : ( 0 seq:1 choice 567-567 | < Rule `comment` didn't match :: ch:0 ref:comment @567 | < Sequence failed at entry 0 :: rule:comment seqnc @567 | < Expected '#', but found 'h' :: seq:0 text @567 > > > : ( 0 ch:1 text 567-567 ) ) ) : < Expected '
', but found 'h' :: sep text @567 > ) ) ) ) : ( 0 rep choice 567-583 | ( 0 ch:0 ref:recordKeyValue 567-583 | ( 0 rule:recordKeyValue seqnc 567-583 | ( 0 seq:0 ref:ident 567-576 | ( 0 rule:ident seqnc 567-576 | ( 0 seq:0 ref:alpha 567-568 | ( 0 rule:alpha choice 567-568 | ( 0 ch:0 char-range 567-568 ) ) ) : ( 0 seq:1 repsep 568-576 | ( 0 rep choice 568-569 | ( 0 ch:0 ref:alphaNum 568-569 | ( 0 rule:alphaNum choice 568-569 | ( 0 ch:0 ref:alpha 568-569 | ( 0 rule:alpha choice 568-569 | ( 0 ch:0 char-range 568-569 ) ) ) ) ) ) : ( 0 sep text 569-569 ) : ( 0 rep choice 569-570 | ( 0 ch:0 ref:alphaNum 569-570 | ( 0 rule:alphaNum choice 569-570 | ( 0 ch:0 ref:alpha 569-570 | ( 0 rule:alpha choice 569-570 | ( 0 ch:0 char-range 569-570 ) ) ) ) ) ) : ( 0 sep text 570-570 ) : ( 0 rep choice 570-571 | ( 0 ch:0 ref:alphaNum 570-571 | ( 0 rule:alphaNum choice 570-571 | ( 0 ch:0 ref:alpha 570-571 | ( 0 rule:alpha choice 570-571 | ( 0 ch:0 char-range 570-571 ) ) ) ) ) ) : ( 0 sep text 571-571 ) : ( 0 rep choice 571-572 | ( 0 ch:0 ref:alphaNum 571-572 | ( 0 rule:alphaNum choice 571-572 | ( 0 ch:0 ref:alpha 571-572 | ( 0 rule:alpha choice 571-572 | ( 0 ch:0 char-range 571-572 ) ) ) ) ) ) : ( 0 sep text 572-572 ) : ( 0 rep choice 572-573 | ( 0 ch:0 ref:alphaNum 572-573 | ( 0 rule:alphaNum choice 572-573 | ( 0 ch:0 ref:alpha 572-573 | ( 0 rule:alpha choice 572-573 | ( 0 ch:0 char-range 572-573 ) ) ) ) ) ) : ( 0 sep text 573-573 ) : ( 0 rep choice 573-574 | ( 0 ch:0 ref:alphaNum 573-574 | ( 0 rule:alphaNum choice 573-574 | ( 0 ch:0 ref:alpha 573-574 | ( 0 rule:alpha choice 573-574 | ( 0 ch:0 char-range 573-574 ) ) ) ) ) ) : ( 0 sep text 574-574 ) : ( 0 rep choice 574-575 | ( 0 ch:0 ref:alphaNum 574-575 | ( 0 rule:alphaNum choice 574-575 | ( 0 ch:0 ref:alpha 574-575 | ( 0 rule:alpha choice 574-575 | ( 0 ch:0 char-range 574-575 ) ) ) ) ) ) : ( 0 sep text 575-575 ) : ( 0 rep choice 575-576 | ( 0 ch:0 ref:alphaNum 575-576 | ( 0 rule:alphaNum choice 575-576 | ( 0 ch:0 ref:alpha 575-576 | ( 0 rule:alpha choice 575-576 | ( 0 ch:0 char-range 575-576 ) ) ) ) ) ) : ( 0 sep text 576-576 ) : < None of choices matched input :: rep choice @576 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @576 | < None of choices matched input :: rule:alphaNum choice @576 | < Rule `alpha` didn't match :: ch:0 ref:alpha @576 | < None of choices matched input :: rule:alpha choice @576 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @576 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @576 > : < Expected '_', but found ':' :: ch:2 text @576 > > > : < Rule `num` didn't match :: ch:1 ref:num @576 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @576 > > > > : < Expected '.', but found ':' :: ch:1 text @576 > > ) ) ) : ( 0 seq:1 text 576-577 ) : ( 0 seq:2 ref:ws 577-578 | ( 0 rule:ws repsep 577-578 | ( 0 rep seqnc 577-578 | ( 0 seq:0 ref:spaces 577-578 | ( 0 rule:spaces repsep 577-578 | ( 0 rep text 577-578 ) : ( 0 sep text 578-578 ) : < Expected ' ', but found 'f' :: rep text @578 > ) ) : ( 0 seq:1 choice 578-578 | < Rule `comment` didn't match :: ch:0 ref:comment @578 | < Sequence failed at entry 0 :: rule:comment seqnc @578 | < Expected '#', but found 'f' :: seq:0 text @578 > > > : ( 0 ch:1 text 578-578 ) ) ) : < Expected '
', but found 'f' :: sep text @578 > ) ) : ( 0 seq:3 ref:term 578-583 | ( 0 rule:term choice 578-583 | < Rule `record` didn't match :: ch:0 ref:record @578 | < Sequence failed at entry 1 :: rule:record seqnc @583 | ( 0 seq:0 ref:ident 578-583 | ( 0 rule:ident seqnc 578-583 | ( 0 seq:0 ref:alpha 578-579 | ( 0 rule:alpha choice 578-579 | ( 0 ch:0 char-range 578-579 ) ) ) : ( 0 seq:1 repsep 579-583 | ( 0 rep choice 579-580 | ( 0 ch:0 ref:alphaNum 579-580 | ( 0 rule:alphaNum choice 579-580 | ( 0 ch:0 ref:alpha 579-580 | ( 0 rule:alpha choice 579-580 | ( 0 ch:0 char-range 579-580 ) ) ) ) ) ) : ( 0 sep text 580-580 ) : ( 0 rep choice 580-581 | ( 0 ch:0 ref:alphaNum 580-581 | ( 0 rule:alphaNum choice 580-581 | ( 0 ch:0 ref:alpha 580-581 | ( 0 rule:alpha choice 580-581 | ( 0 ch:0 char-range 580-581 ) ) ) ) ) ) : ( 0 sep text 581-581 ) : ( 0 rep choice 581-582 | ( 0 ch:0 ref:alphaNum 581-582 | ( 0 rule:alphaNum choice 581-582 | ( 0 ch:0 ref:alpha 581-582 | ( 0 rule:alpha choice 581-582 | ( 0 ch:0 char-range 581-582 ) ) ) ) ) ) : ( 0 sep text 582-582 ) : ( 0 rep choice 582-583 | ( 0 ch:0 ref:alphaNum 582-583 | ( 0 rule:alphaNum choice 582-583 | ( 0 ch:0 ref:alpha 582-583 | ( 0 rule:alpha choice 582-583 | ( 0 ch:0 char-range 582-583 ) ) ) ) ) ) : ( 0 sep text 583-583 ) : < None of choices matched input :: rep choice @583 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @583 | < None of choices matched input :: rule:alphaNum choice @583 | < Rule `alpha` didn't match :: ch:0 ref:alpha @583 | < None of choices matched input :: rule:alpha choice @583 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @583 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @583 > : < Expected '_', but found '}' :: ch:2 text @583 > > > : < Rule `num` didn't match :: ch:1 ref:num @583 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @583 > > > > : < Expected '.', but found '}' :: ch:1 text @583 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @583 > > > : < Rule `int` didn't match :: ch:1 ref:int @578 | < Sequence failed at entry 1 :: rule:int seqnc @578 | ( 0 seq:0 choice 578-578 | < Expected '-', but found 'f' :: ch:0 text @578 > : ( 0 ch:1 text 578-578 ) ) : < Rule `num` didn't match :: seq:1 ref:first @578 | < Expected character in range from '0' to '9', but found 'f' :: rule:num char-range @578 > > > > : < Rule `var` didn't match :: ch:2 ref:var @578 | < Sequence failed at entry 0 :: rule:var seqnc @578 | < Expected character in range from 'A' to 'Z', but found 'f' :: seq:0 char-range @578 > > > : < Rule `string` didn't match :: ch:3 ref:string @578 | < Sequence failed at entry 0 :: rule:string seqnc @578 | < Expected '"', but found 'f' :: seq:0 text @578 > > > : ( 0 ch:4 ref:bool 578-583 | ( 0 rule:bool choice 578-583 | < Expected 'true', but found 'fals' :: ch:0 text @578 > : ( 0 ch:1 text 578-583 ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @583 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @583 | < Expected ',', but found '}' :: seq:0 text @583 > > > ) ) : ( 0 seq:4 ref:ws 583-583 | ( 0 rule:ws repsep 583-583 | ( 0 rep seqnc 583-583 | ( 0 seq:0 ref:spaces 583-583 | ( 0 rule:spaces repsep 583-583 | < Expected ' ', but found '}' :: rep text @583 > ) ) : ( 0 seq:1 choice 583-583 | < Rule `comment` didn't match :: ch:0 ref:comment @583 | < Sequence failed at entry 0 :: rule:comment seqnc @583 | < Expected '#', but found '}' :: seq:0 text @583 > > > : ( 0 ch:1 text 583-583 ) ) ) : < Expected '
', but found '}' :: sep text @583 > ) ) : ( 0 seq:5 text 583-584 ) ) ) : ( 0 seq:1 ref:ws 584-585 | ( 0 rule:ws repsep 584-585 | ( 0 rep seqnc 584-585 | ( 0 seq:0 ref:spaces 584-585 | ( 0 rule:spaces repsep 584-585 | ( 0 rep text 584-585 ) : ( 0 sep text 585-585 ) : < Expected ' ', but found ':' :: rep text @585 > ) ) : ( 0 seq:1 choice 585-585 | < Rule `comment` didn't match :: ch:0 ref:comment @585 | < Sequence failed at entry 0 :: rule:comment seqnc @585 | < Expected '#', but found ':' :: seq:0 text @585 > > > : ( 0 ch:1 text 585-585 ) ) ) : < Expected '
', but found ':' :: sep text @585 > ) ) : ( 0 seq:2 text 585-587 ) : ( 0 seq:3 ref:ws 587-590 | ( 0 rule:ws repsep 587-590 | ( 0 rep seqnc 587-587 | ( 0 seq:0 ref:spaces 587-587 | ( 0 rule:spaces repsep 587-587 | < Expected ' ', but found '
' :: rep text @587 > ) ) : ( 0 seq:1 choice 587-587 | < Rule `comment` didn't match :: ch:0 ref:comment @587 | < Sequence failed at entry 0 :: rule:comment seqnc @587 | < Expected '#', but found '
' :: seq:0 text @587 > > > : ( 0 ch:1 text 587-587 ) ) ) : ( 0 sep text 587-588 ) : ( 0 rep seqnc 588-590 | ( 0 seq:0 ref:spaces 588-590 | ( 0 rule:spaces repsep 588-590 | ( 0 rep text 588-589 ) : ( 0 sep text 589-589 ) : ( 0 rep text 589-590 ) : ( 0 sep text 590-590 ) : < Expected ' ', but found 'a' :: rep text @590 > ) ) : ( 0 seq:1 choice 590-590 | < Rule `comment` didn't match :: ch:0 ref:comment @590 | < Sequence failed at entry 0 :: rule:comment seqnc @590 | < Expected '#', but found 'a' :: seq:0 text @590 > > > : ( 0 ch:1 text 590-590 ) ) ) : < Expected '
', but found 'a' :: sep text @590 > ) ) : ( 0 seq:4 repsep 590-609 | ( 0 rep ref:disjunct 590-609 | ( 0 rule:disjunct repsep 590-609 | ( 0 rep ref:conjunct 590-609 | ( 0 rule:conjunct choice 590-609 | ( 0 ch:0 ref:record 590-609 | ( 0 rule:record seqnc 590-609 | ( 0 seq:0 ref:ident 590-600 | ( 0 rule:ident seqnc 590-600 | ( 0 seq:0 ref:alpha 590-591 | ( 0 rule:alpha choice 590-591 | ( 0 ch:0 char-range 590-591 ) ) ) : ( 0 seq:1 repsep 591-600 | ( 0 rep choice 591-592 | ( 0 ch:0 ref:alphaNum 591-592 | ( 0 rule:alphaNum choice 591-592 | ( 0 ch:0 ref:alpha 591-592 | ( 0 rule:alpha choice 591-592 | ( 0 ch:0 char-range 591-592 ) ) ) ) ) ) : ( 0 sep text 592-592 ) : ( 0 rep choice 592-593 | ( 0 ch:0 ref:alphaNum 592-593 | ( 0 rule:alphaNum choice 592-593 | ( 0 ch:0 ref:alpha 592-593 | ( 0 rule:alpha choice 592-593 | ( 0 ch:0 char-range 592-593 ) ) ) ) ) ) : ( 0 sep text 593-593 ) : ( 0 rep choice 593-594 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @593 | < None of choices matched input :: rule:alphaNum choice @593 | < Rule `alpha` didn't match :: ch:0 ref:alpha @593 | < None of choices matched input :: rule:alpha choice @593 | < Expected character in range from 'a' to 'z', but found '.' :: ch:0 char-range @593 > : < Expected character in range from 'A' to 'Z', but found '.' :: ch:1 char-range @593 > : < Expected '_', but found '.' :: ch:2 text @593 > > > : < Rule `num` didn't match :: ch:1 ref:num @593 | < Expected character in range from '0' to '9', but found '.' :: rule:num char-range @593 > > > > : ( 0 ch:1 text 593-594 ) ) : ( 0 sep text 594-594 ) : ( 0 rep choice 594-595 | ( 0 ch:0 ref:alphaNum 594-595 | ( 0 rule:alphaNum choice 594-595 | ( 0 ch:0 ref:alpha 594-595 | ( 0 rule:alpha choice 594-595 | ( 0 ch:0 char-range 594-595 ) ) ) ) ) ) : ( 0 sep text 595-595 ) : ( 0 rep choice 595-596 | ( 0 ch:0 ref:alphaNum 595-596 | ( 0 rule:alphaNum choice 595-596 | ( 0 ch:0 ref:alpha 595-596 | ( 0 rule:alpha choice 595-596 | ( 0 ch:0 char-range 595-596 ) ) ) ) ) ) : ( 0 sep text 596-596 ) : ( 0 rep choice 596-597 | ( 0 ch:0 ref:alphaNum 596-597 | ( 0 rule:alphaNum choice 596-597 | ( 0 ch:0 ref:alpha 596-597 | ( 0 rule:alpha choice 596-597 | ( 0 ch:0 char-range 596-597 ) ) ) ) ) ) : ( 0 sep text 597-597 ) : ( 0 rep choice 597-598 | ( 0 ch:0 ref:alphaNum 597-598 | ( 0 rule:alphaNum choice 597-598 | ( 0 ch:0 ref:alpha 597-598 | ( 0 rule:alpha choice 597-598 | ( 0 ch:0 char-range 597-598 ) ) ) ) ) ) : ( 0 sep text 598-598 ) : ( 0 rep choice 598-599 | ( 0 ch:0 ref:alphaNum 598-599 | ( 0 rule:alphaNum choice 598-599 | ( 0 ch:0 ref:alpha 598-599 | ( 0 rule:alpha choice 598-599 | ( 0 ch:0 char-range 598-599 ) ) ) ) ) ) : ( 0 sep text 599-599 ) : ( 0 rep choice 599-600 | ( 0 ch:0 ref:alphaNum 599-600 | ( 0 rule:alphaNum choice 599-600 | ( 0 ch:0 ref:alpha 599-600 | ( 0 rule:alpha choice 599-600 | ( 0 ch:0 char-range 599-600 ) ) ) ) ) ) : ( 0 sep text 600-600 ) : < None of choices matched input :: rep choice @600 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @600 | < None of choices matched input :: rule:alphaNum choice @600 | < Rule `alpha` didn't match :: ch:0 ref:alpha @600 | < None of choices matched input :: rule:alpha choice @600 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @600 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @600 > : < Expected '_', but found '{' :: ch:2 text @600 > > > : < Rule `num` didn't match :: ch:1 ref:num @600 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @600 > > > > : < Expected '.', but found '{' :: ch:1 text @600 > > ) ) ) : ( 0 seq:1 text 600-601 ) : ( 0 seq:2 ref:ws 601-601 | ( 0 rule:ws repsep 601-601 | ( 0 rep seqnc 601-601 | ( 0 seq:0 ref:spaces 601-601 | ( 0 rule:spaces repsep 601-601 | < Expected ' ', but found 's' :: rep text @601 > ) ) : ( 0 seq:1 choice 601-601 | < Rule `comment` didn't match :: ch:0 ref:comment @601 | < Sequence failed at entry 0 :: rule:comment seqnc @601 | < Expected '#', but found 's' :: seq:0 text @601 > > > : ( 0 ch:1 text 601-601 ) ) ) : < Expected '
', but found 's' :: sep text @601 > ) ) : ( 0 seq:3 ref:recordAttrs 601-608 | ( 0 rule:recordAttrs repsep 601-608 | ( 0 rep choice 601-608 | ( 0 ch:0 ref:recordKeyValue 601-608 | ( 0 rule:recordKeyValue seqnc 601-608 | ( 0 seq:0 ref:ident 601-605 | ( 0 rule:ident seqnc 601-605 | ( 0 seq:0 ref:alpha 601-602 | ( 0 rule:alpha choice 601-602 | ( 0 ch:0 char-range 601-602 ) ) ) : ( 0 seq:1 repsep 602-605 | ( 0 rep choice 602-603 | ( 0 ch:0 ref:alphaNum 602-603 | ( 0 rule:alphaNum choice 602-603 | ( 0 ch:0 ref:alpha 602-603 | ( 0 rule:alpha choice 602-603 | ( 0 ch:0 char-range 602-603 ) ) ) ) ) ) : ( 0 sep text 603-603 ) : ( 0 rep choice 603-604 | ( 0 ch:0 ref:alphaNum 603-604 | ( 0 rule:alphaNum choice 603-604 | ( 0 ch:0 ref:alpha 603-604 | ( 0 rule:alpha choice 603-604 | ( 0 ch:0 char-range 603-604 ) ) ) ) ) ) : ( 0 sep text 604-604 ) : ( 0 rep choice 604-605 | ( 0 ch:0 ref:alphaNum 604-605 | ( 0 rule:alphaNum choice 604-605 | ( 0 ch:0 ref:alpha 604-605 | ( 0 rule:alpha choice 604-605 | ( 0 ch:0 char-range 604-605 ) ) ) ) ) ) : ( 0 sep text 605-605 ) : < None of choices matched input :: rep choice @605 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @605 | < None of choices matched input :: rule:alphaNum choice @605 | < Rule `alpha` didn't match :: ch:0 ref:alpha @605 | < None of choices matched input :: rule:alpha choice @605 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @605 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @605 > : < Expected '_', but found ':' :: ch:2 text @605 > > > : < Rule `num` didn't match :: ch:1 ref:num @605 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @605 > > > > : < Expected '.', but found ':' :: ch:1 text @605 > > ) ) ) : ( 0 seq:1 text 605-606 ) : ( 0 seq:2 ref:ws 606-607 | ( 0 rule:ws repsep 606-607 | ( 0 rep seqnc 606-607 | ( 0 seq:0 ref:spaces 606-607 | ( 0 rule:spaces repsep 606-607 | ( 0 rep text 606-607 ) : ( 0 sep text 607-607 ) : < Expected ' ', but found 'S' :: rep text @607 > ) ) : ( 0 seq:1 choice 607-607 | < Rule `comment` didn't match :: ch:0 ref:comment @607 | < Sequence failed at entry 0 :: rule:comment seqnc @607 | < Expected '#', but found 'S' :: seq:0 text @607 > > > : ( 0 ch:1 text 607-607 ) ) ) : < Expected '
', but found 'S' :: sep text @607 > ) ) : ( 0 seq:3 ref:term 607-608 | ( 0 rule:term choice 607-608 | < Rule `record` didn't match :: ch:0 ref:record @607 | < Sequence failed at entry 1 :: rule:record seqnc @608 | ( 0 seq:0 ref:ident 607-608 | ( 0 rule:ident seqnc 607-608 | ( 0 seq:0 ref:alpha 607-608 | ( 0 rule:alpha choice 607-608 | < Expected character in range from 'a' to 'z', but found 'S' :: ch:0 char-range @607 > : ( 0 ch:1 char-range 607-608 ) ) ) : ( 0 seq:1 repsep 608-608 | < None of choices matched input :: rep choice @608 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @608 | < None of choices matched input :: rule:alphaNum choice @608 | < Rule `alpha` didn't match :: ch:0 ref:alpha @608 | < None of choices matched input :: rule:alpha choice @608 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @608 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @608 > : < Expected '_', but found '}' :: ch:2 text @608 > > > : < Rule `num` didn't match :: ch:1 ref:num @608 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @608 > > > > : < Expected '.', but found '}' :: ch:1 text @608 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @608 > > > : < Rule `int` didn't match :: ch:1 ref:int @607 | < Sequence failed at entry 1 :: rule:int seqnc @607 | ( 0 seq:0 choice 607-607 | < Expected '-', but found 'S' :: ch:0 text @607 > : ( 0 ch:1 text 607-607 ) ) : < Rule `num` didn't match :: seq:1 ref:first @607 | < Expected character in range from '0' to '9', but found 'S' :: rule:num char-range @607 > > > > : ( 0 ch:2 ref:var 607-608 | ( 0 rule:var seqnc 607-608 | ( 0 seq:0 char-range 607-608 ) : ( 0 seq:1 repsep 608-608 | < None of choices matched input :: rep choice @608 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @608 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @608 | < None of choices matched input :: rule:alphaNum choice @608 | < Rule `alpha` didn't match :: ch:0 ref:alpha @608 | < None of choices matched input :: rule:alpha choice @608 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @608 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @608 > : < Expected '_', but found '}' :: ch:2 text @608 > > > : < Rule `num` didn't match :: ch:1 ref:num @608 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @608 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @608 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @608 | < Expected ',', but found '}' :: seq:0 text @608 > > > ) ) : ( 0 seq:4 ref:ws 608-608 | ( 0 rule:ws repsep 608-608 | ( 0 rep seqnc 608-608 | ( 0 seq:0 ref:spaces 608-608 | ( 0 rule:spaces repsep 608-608 | < Expected ' ', but found '}' :: rep text @608 > ) ) : ( 0 seq:1 choice 608-608 | < Rule `comment` didn't match :: ch:0 ref:comment @608 | < Sequence failed at entry 0 :: rule:comment seqnc @608 | < Expected '#', but found '}' :: seq:0 text @608 > > > : ( 0 ch:1 text 608-608 ) ) ) : < Expected '
', but found '}' :: sep text @608 > ) ) : ( 0 seq:5 text 608-609 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @609 | ( 0 seq:0 ref:ws 609-609 | ( 0 rule:ws repsep 609-609 | ( 0 rep seqnc 609-609 | ( 0 seq:0 ref:spaces 609-609 | ( 0 rule:spaces repsep 609-609 | < Expected ' ', but found '.' :: rep text @609 > ) ) : ( 0 seq:1 choice 609-609 | < Rule `comment` didn't match :: ch:0 ref:comment @609 | < Sequence failed at entry 0 :: rule:comment seqnc @609 | < Expected '#', but found '.' :: seq:0 text @609 > > > : ( 0 ch:1 text 609-609 ) ) ) : < Expected '
', but found '.' :: sep text @609 > ) ) : < Expected '&', but found '.' :: seq:1 text @609 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @609 | ( 0 seq:0 ref:ws 609-609 | ( 0 rule:ws repsep 609-609 | ( 0 rep seqnc 609-609 | ( 0 seq:0 ref:spaces 609-609 | ( 0 rule:spaces repsep 609-609 | < Expected ' ', but found '.' :: rep text @609 > ) ) : ( 0 seq:1 choice 609-609 | < Rule `comment` didn't match :: ch:0 ref:comment @609 | < Sequence failed at entry 0 :: rule:comment seqnc @609 | < Expected '#', but found '.' :: seq:0 text @609 > > > : ( 0 ch:1 text 609-609 ) ) ) : < Expected '
', but found '.' :: sep text @609 > ) ) : < Expected '|', but found '.' :: seq:1 text @609 > > ) : ( 0 seq:5 text 609-610 ) ) ) ) ) : ( 0 sep ref:ws 610-611 | ( 0 rule:ws repsep 610-611 | ( 0 rep seqnc 610-610 | ( 0 seq:0 ref:spaces 610-610 | ( 0 rule:spaces repsep 610-610 | < Expected ' ', but found '
' :: rep text @610 > ) ) : ( 0 seq:1 choice 610-610 | < Rule `comment` didn't match :: ch:0 ref:comment @610 | < Sequence failed at entry 0 :: rule:comment seqnc @610 | < Expected '#', but found '
' :: seq:0 text @610 > > > : ( 0 ch:1 text 610-610 ) ) ) : ( 0 sep text 610-611 ) : ( 0 rep seqnc 611-611 | ( 0 seq:0 ref:spaces 611-611 | ( 0 rule:spaces repsep 611-611 | < Expected ' ', but found 'b' :: rep text @611 > ) ) : ( 0 seq:1 choice 611-611 | < Rule `comment` didn't match :: ch:0 ref:comment @611 | < Sequence failed at entry 0 :: rule:comment seqnc @611 | < Expected '#', but found 'b' :: seq:0 text @611 > > > : ( 0 ch:1 text 611-611 ) ) ) : < Expected '
', but found 'b' :: sep text @611 > ) ) : ( 0 rep ref:statement 611-724 | ( 0 rule:statement choice 611-724 | ( 0 ch:0 ref:rule 611-724 | ( 0 rule:rule seqnc 611-724 | ( 0 seq:0 ref:record 611-658 | ( 0 rule:record seqnc 611-658 | ( 0 seq:0 ref:ident 611-630 | ( 0 rule:ident seqnc 611-630 | ( 0 seq:0 ref:alpha 611-612 | ( 0 rule:alpha choice 611-612 | ( 0 ch:0 char-range 611-612 ) ) ) : ( 0 seq:1 repsep 612-630 | ( 0 rep choice 612-613 | ( 0 ch:0 ref:alphaNum 612-613 | ( 0 rule:alphaNum choice 612-613 | ( 0 ch:0 ref:alpha 612-613 | ( 0 rule:alpha choice 612-613 | ( 0 ch:0 char-range 612-613 ) ) ) ) ) ) : ( 0 sep text 613-613 ) : ( 0 rep choice 613-614 | ( 0 ch:0 ref:alphaNum 613-614 | ( 0 rule:alphaNum choice 613-614 | ( 0 ch:0 ref:alpha 613-614 | ( 0 rule:alpha choice 613-614 | ( 0 ch:0 char-range 613-614 ) ) ) ) ) ) : ( 0 sep text 614-614 ) : ( 0 rep choice 614-615 | ( 0 ch:0 ref:alphaNum 614-615 | ( 0 rule:alphaNum choice 614-615 | ( 0 ch:0 ref:alpha 614-615 | ( 0 rule:alpha choice 614-615 | ( 0 ch:0 char-range 614-615 ) ) ) ) ) ) : ( 0 sep text 615-615 ) : ( 0 rep choice 615-616 | ( 0 ch:0 ref:alphaNum 615-616 | ( 0 rule:alphaNum choice 615-616 | ( 0 ch:0 ref:alpha 615-616 | ( 0 rule:alpha choice 615-616 | ( 0 ch:0 char-range 615-616 ) ) ) ) ) ) : ( 0 sep text 616-616 ) : ( 0 rep choice 616-617 | ( 0 ch:0 ref:alphaNum 616-617 | ( 0 rule:alphaNum choice 616-617 | ( 0 ch:0 ref:alpha 616-617 | ( 0 rule:alpha choice 616-617 | ( 0 ch:0 char-range 616-617 ) ) ) ) ) ) : ( 0 sep text 617-617 ) : ( 0 rep choice 617-618 | ( 0 ch:0 ref:alphaNum 617-618 | ( 0 rule:alphaNum choice 617-618 | ( 0 ch:0 ref:alpha 617-618 | ( 0 rule:alpha choice 617-618 | ( 0 ch:0 char-range 617-618 ) ) ) ) ) ) : ( 0 sep text 618-618 ) : ( 0 rep choice 618-619 | ( 0 ch:0 ref:alphaNum 618-619 | ( 0 rule:alphaNum choice 618-619 | ( 0 ch:0 ref:alpha 618-619 | ( 0 rule:alpha choice 618-619 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @618 > : ( 0 ch:1 char-range 618-619 ) ) ) ) ) ) : ( 0 sep text 619-619 ) : ( 0 rep choice 619-620 | ( 0 ch:0 ref:alphaNum 619-620 | ( 0 rule:alphaNum choice 619-620 | ( 0 ch:0 ref:alpha 619-620 | ( 0 rule:alpha choice 619-620 | ( 0 ch:0 char-range 619-620 ) ) ) ) ) ) : ( 0 sep text 620-620 ) : ( 0 rep choice 620-621 | ( 0 ch:0 ref:alphaNum 620-621 | ( 0 rule:alphaNum choice 620-621 | ( 0 ch:0 ref:alpha 620-621 | ( 0 rule:alpha choice 620-621 | ( 0 ch:0 char-range 620-621 ) ) ) ) ) ) : ( 0 sep text 621-621 ) : ( 0 rep choice 621-622 | ( 0 ch:0 ref:alphaNum 621-622 | ( 0 rule:alphaNum choice 621-622 | ( 0 ch:0 ref:alpha 621-622 | ( 0 rule:alpha choice 621-622 | ( 0 ch:0 char-range 621-622 ) ) ) ) ) ) : ( 0 sep text 622-622 ) : ( 0 rep choice 622-623 | ( 0 ch:0 ref:alphaNum 622-623 | ( 0 rule:alphaNum choice 622-623 | ( 0 ch:0 ref:alpha 622-623 | ( 0 rule:alpha choice 622-623 | ( 0 ch:0 char-range 622-623 ) ) ) ) ) ) : ( 0 sep text 623-623 ) : ( 0 rep choice 623-624 | ( 0 ch:0 ref:alphaNum 623-624 | ( 0 rule:alphaNum choice 623-624 | ( 0 ch:0 ref:alpha 623-624 | ( 0 rule:alpha choice 623-624 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @623 > : ( 0 ch:1 char-range 623-624 ) ) ) ) ) ) : ( 0 sep text 624-624 ) : ( 0 rep choice 624-625 | ( 0 ch:0 ref:alphaNum 624-625 | ( 0 rule:alphaNum choice 624-625 | ( 0 ch:0 ref:alpha 624-625 | ( 0 rule:alpha choice 624-625 | ( 0 ch:0 char-range 624-625 ) ) ) ) ) ) : ( 0 sep text 625-625 ) : ( 0 rep choice 625-626 | ( 0 ch:0 ref:alphaNum 625-626 | ( 0 rule:alphaNum choice 625-626 | ( 0 ch:0 ref:alpha 625-626 | ( 0 rule:alpha choice 625-626 | ( 0 ch:0 char-range 625-626 ) ) ) ) ) ) : ( 0 sep text 626-626 ) : ( 0 rep choice 626-627 | ( 0 ch:0 ref:alphaNum 626-627 | ( 0 rule:alphaNum choice 626-627 | ( 0 ch:0 ref:alpha 626-627 | ( 0 rule:alpha choice 626-627 | ( 0 ch:0 char-range 626-627 ) ) ) ) ) ) : ( 0 sep text 627-627 ) : ( 0 rep choice 627-628 | ( 0 ch:0 ref:alphaNum 627-628 | ( 0 rule:alphaNum choice 627-628 | ( 0 ch:0 ref:alpha 627-628 | ( 0 rule:alpha choice 627-628 | ( 0 ch:0 char-range 627-628 ) ) ) ) ) ) : ( 0 sep text 628-628 ) : ( 0 rep choice 628-629 | ( 0 ch:0 ref:alphaNum 628-629 | ( 0 rule:alphaNum choice 628-629 | ( 0 ch:0 ref:alpha 628-629 | ( 0 rule:alpha choice 628-629 | ( 0 ch:0 char-range 628-629 ) ) ) ) ) ) : ( 0 sep text 629-629 ) : ( 0 rep choice 629-630 | ( 0 ch:0 ref:alphaNum 629-630 | ( 0 rule:alphaNum choice 629-630 | ( 0 ch:0 ref:alpha 629-630 | ( 0 rule:alpha choice 629-630 | ( 0 ch:0 char-range 629-630 ) ) ) ) ) ) : ( 0 sep text 630-630 ) : < None of choices matched input :: rep choice @630 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @630 | < None of choices matched input :: rule:alphaNum choice @630 | < Rule `alpha` didn't match :: ch:0 ref:alpha @630 | < None of choices matched input :: rule:alpha choice @630 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @630 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @630 > : < Expected '_', but found '{' :: ch:2 text @630 > > > : < Rule `num` didn't match :: ch:1 ref:num @630 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @630 > > > > : < Expected '.', but found '{' :: ch:1 text @630 > > ) ) ) : ( 0 seq:1 text 630-631 ) : ( 0 seq:2 ref:ws 631-631 | ( 0 rule:ws repsep 631-631 | ( 0 rep seqnc 631-631 | ( 0 seq:0 ref:spaces 631-631 | ( 0 rule:spaces repsep 631-631 | < Expected ' ', but found 'i' :: rep text @631 > ) ) : ( 0 seq:1 choice 631-631 | < Rule `comment` didn't match :: ch:0 ref:comment @631 | < Sequence failed at entry 0 :: rule:comment seqnc @631 | < Expected '#', but found 'i' :: seq:0 text @631 > > > : ( 0 ch:1 text 631-631 ) ) ) : < Expected '
', but found 'i' :: sep text @631 > ) ) : ( 0 seq:3 ref:recordAttrs 631-657 | ( 0 rule:recordAttrs repsep 631-657 | ( 0 rep choice 631-636 | ( 0 ch:0 ref:recordKeyValue 631-636 | ( 0 rule:recordKeyValue seqnc 631-636 | ( 0 seq:0 ref:ident 631-633 | ( 0 rule:ident seqnc 631-633 | ( 0 seq:0 ref:alpha 631-632 | ( 0 rule:alpha choice 631-632 | ( 0 ch:0 char-range 631-632 ) ) ) : ( 0 seq:1 repsep 632-633 | ( 0 rep choice 632-633 | ( 0 ch:0 ref:alphaNum 632-633 | ( 0 rule:alphaNum choice 632-633 | ( 0 ch:0 ref:alpha 632-633 | ( 0 rule:alpha choice 632-633 | ( 0 ch:0 char-range 632-633 ) ) ) ) ) ) : ( 0 sep text 633-633 ) : < None of choices matched input :: rep choice @633 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @633 | < None of choices matched input :: rule:alphaNum choice @633 | < Rule `alpha` didn't match :: ch:0 ref:alpha @633 | < None of choices matched input :: rule:alpha choice @633 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @633 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @633 > : < Expected '_', but found ':' :: ch:2 text @633 > > > : < Rule `num` didn't match :: ch:1 ref:num @633 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @633 > > > > : < Expected '.', but found ':' :: ch:1 text @633 > > ) ) ) : ( 0 seq:1 text 633-634 ) : ( 0 seq:2 ref:ws 634-635 | ( 0 rule:ws repsep 634-635 | ( 0 rep seqnc 634-635 | ( 0 seq:0 ref:spaces 634-635 | ( 0 rule:spaces repsep 634-635 | ( 0 rep text 634-635 ) : ( 0 sep text 635-635 ) : < Expected ' ', but found 'B' :: rep text @635 > ) ) : ( 0 seq:1 choice 635-635 | < Rule `comment` didn't match :: ch:0 ref:comment @635 | < Sequence failed at entry 0 :: rule:comment seqnc @635 | < Expected '#', but found 'B' :: seq:0 text @635 > > > : ( 0 ch:1 text 635-635 ) ) ) : < Expected '
', but found 'B' :: sep text @635 > ) ) : ( 0 seq:3 ref:term 635-636 | ( 0 rule:term choice 635-636 | < Rule `record` didn't match :: ch:0 ref:record @635 | < Sequence failed at entry 1 :: rule:record seqnc @636 | ( 0 seq:0 ref:ident 635-636 | ( 0 rule:ident seqnc 635-636 | ( 0 seq:0 ref:alpha 635-636 | ( 0 rule:alpha choice 635-636 | < Expected character in range from 'a' to 'z', but found 'B' :: ch:0 char-range @635 > : ( 0 ch:1 char-range 635-636 ) ) ) : ( 0 seq:1 repsep 636-636 | < None of choices matched input :: rep choice @636 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @636 | < None of choices matched input :: rule:alphaNum choice @636 | < Rule `alpha` didn't match :: ch:0 ref:alpha @636 | < None of choices matched input :: rule:alpha choice @636 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @636 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @636 > : < Expected '_', but found ',' :: ch:2 text @636 > > > : < Rule `num` didn't match :: ch:1 ref:num @636 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @636 > > > > : < Expected '.', but found ',' :: ch:1 text @636 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @636 > > > : < Rule `int` didn't match :: ch:1 ref:int @635 | < Sequence failed at entry 1 :: rule:int seqnc @635 | ( 0 seq:0 choice 635-635 | < Expected '-', but found 'B' :: ch:0 text @635 > : ( 0 ch:1 text 635-635 ) ) : < Rule `num` didn't match :: seq:1 ref:first @635 | < Expected character in range from '0' to '9', but found 'B' :: rule:num char-range @635 > > > > : ( 0 ch:2 ref:var 635-636 | ( 0 rule:var seqnc 635-636 | ( 0 seq:0 char-range 635-636 ) : ( 0 seq:1 repsep 636-636 | < None of choices matched input :: rep choice @636 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @636 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @636 | < None of choices matched input :: rule:alphaNum choice @636 | < Rule `alpha` didn't match :: ch:0 ref:alpha @636 | < None of choices matched input :: rule:alpha choice @636 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @636 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @636 > : < Expected '_', but found ',' :: ch:2 text @636 > > > : < Rule `num` didn't match :: ch:1 ref:num @636 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @636 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 636-638 | ( 0 rule:commaSpace seqnc 636-638 | ( 0 seq:0 text 636-637 ) : ( 0 seq:1 ref:ws 637-638 | ( 0 rule:ws repsep 637-638 | ( 0 rep seqnc 637-638 | ( 0 seq:0 ref:spaces 637-638 | ( 0 rule:spaces repsep 637-638 | ( 0 rep text 637-638 ) : ( 0 sep text 638-638 ) : < Expected ' ', but found 't' :: rep text @638 > ) ) : ( 0 seq:1 choice 638-638 | < Rule `comment` didn't match :: ch:0 ref:comment @638 | < Sequence failed at entry 0 :: rule:comment seqnc @638 | < Expected '#', but found 't' :: seq:0 text @638 > > > : ( 0 ch:1 text 638-638 ) ) ) : < Expected '
', but found 't' :: sep text @638 > ) ) ) ) : ( 0 rep choice 638-645 | ( 0 ch:0 ref:recordKeyValue 638-645 | ( 0 rule:recordKeyValue seqnc 638-645 | ( 0 seq:0 ref:ident 638-642 | ( 0 rule:ident seqnc 638-642 | ( 0 seq:0 ref:alpha 638-639 | ( 0 rule:alpha choice 638-639 | ( 0 ch:0 char-range 638-639 ) ) ) : ( 0 seq:1 repsep 639-642 | ( 0 rep choice 639-640 | ( 0 ch:0 ref:alphaNum 639-640 | ( 0 rule:alphaNum choice 639-640 | ( 0 ch:0 ref:alpha 639-640 | ( 0 rule:alpha choice 639-640 | ( 0 ch:0 char-range 639-640 ) ) ) ) ) ) : ( 0 sep text 640-640 ) : ( 0 rep choice 640-641 | ( 0 ch:0 ref:alphaNum 640-641 | ( 0 rule:alphaNum choice 640-641 | ( 0 ch:0 ref:alpha 640-641 | ( 0 rule:alpha choice 640-641 | ( 0 ch:0 char-range 640-641 ) ) ) ) ) ) : ( 0 sep text 641-641 ) : ( 0 rep choice 641-642 | ( 0 ch:0 ref:alphaNum 641-642 | ( 0 rule:alphaNum choice 641-642 | ( 0 ch:0 ref:alpha 641-642 | ( 0 rule:alpha choice 641-642 | ( 0 ch:0 char-range 641-642 ) ) ) ) ) ) : ( 0 sep text 642-642 ) : < None of choices matched input :: rep choice @642 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @642 | < None of choices matched input :: rule:alphaNum choice @642 | < Rule `alpha` didn't match :: ch:0 ref:alpha @642 | < None of choices matched input :: rule:alpha choice @642 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @642 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @642 > : < Expected '_', but found ':' :: ch:2 text @642 > > > : < Rule `num` didn't match :: ch:1 ref:num @642 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @642 > > > > : < Expected '.', but found ':' :: ch:1 text @642 > > ) ) ) : ( 0 seq:1 text 642-643 ) : ( 0 seq:2 ref:ws 643-644 | ( 0 rule:ws repsep 643-644 | ( 0 rep seqnc 643-644 | ( 0 seq:0 ref:spaces 643-644 | ( 0 rule:spaces repsep 643-644 | ( 0 rep text 643-644 ) : ( 0 sep text 644-644 ) : < Expected ' ', but found 'T' :: rep text @644 > ) ) : ( 0 seq:1 choice 644-644 | < Rule `comment` didn't match :: ch:0 ref:comment @644 | < Sequence failed at entry 0 :: rule:comment seqnc @644 | < Expected '#', but found 'T' :: seq:0 text @644 > > > : ( 0 ch:1 text 644-644 ) ) ) : < Expected '
', but found 'T' :: sep text @644 > ) ) : ( 0 seq:3 ref:term 644-645 | ( 0 rule:term choice 644-645 | < Rule `record` didn't match :: ch:0 ref:record @644 | < Sequence failed at entry 1 :: rule:record seqnc @645 | ( 0 seq:0 ref:ident 644-645 | ( 0 rule:ident seqnc 644-645 | ( 0 seq:0 ref:alpha 644-645 | ( 0 rule:alpha choice 644-645 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @644 > : ( 0 ch:1 char-range 644-645 ) ) ) : ( 0 seq:1 repsep 645-645 | < None of choices matched input :: rep choice @645 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @645 | < None of choices matched input :: rule:alphaNum choice @645 | < Rule `alpha` didn't match :: ch:0 ref:alpha @645 | < None of choices matched input :: rule:alpha choice @645 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @645 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @645 > : < Expected '_', but found ',' :: ch:2 text @645 > > > : < Rule `num` didn't match :: ch:1 ref:num @645 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @645 > > > > : < Expected '.', but found ',' :: ch:1 text @645 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @645 > > > : < Rule `int` didn't match :: ch:1 ref:int @644 | < Sequence failed at entry 1 :: rule:int seqnc @644 | ( 0 seq:0 choice 644-644 | < Expected '-', but found 'T' :: ch:0 text @644 > : ( 0 ch:1 text 644-644 ) ) : < Rule `num` didn't match :: seq:1 ref:first @644 | < Expected character in range from '0' to '9', but found 'T' :: rule:num char-range @644 > > > > : ( 0 ch:2 ref:var 644-645 | ( 0 rule:var seqnc 644-645 | ( 0 seq:0 char-range 644-645 ) : ( 0 seq:1 repsep 645-645 | < None of choices matched input :: rep choice @645 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @645 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @645 | < None of choices matched input :: rule:alphaNum choice @645 | < Rule `alpha` didn't match :: ch:0 ref:alpha @645 | < None of choices matched input :: rule:alpha choice @645 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @645 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @645 > : < Expected '_', but found ',' :: ch:2 text @645 > > > : < Rule `num` didn't match :: ch:1 ref:num @645 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @645 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 645-647 | ( 0 rule:commaSpace seqnc 645-647 | ( 0 seq:0 text 645-646 ) : ( 0 seq:1 ref:ws 646-647 | ( 0 rule:ws repsep 646-647 | ( 0 rep seqnc 646-647 | ( 0 seq:0 ref:spaces 646-647 | ( 0 rule:spaces repsep 646-647 | ( 0 rep text 646-647 ) : ( 0 sep text 647-647 ) : < Expected ' ', but found 'c' :: rep text @647 > ) ) : ( 0 seq:1 choice 647-647 | < Rule `comment` didn't match :: ch:0 ref:comment @647 | < Sequence failed at entry 0 :: rule:comment seqnc @647 | < Expected '#', but found 'c' :: seq:0 text @647 > > > : ( 0 ch:1 text 647-647 ) ) ) : < Expected '
', but found 'c' :: sep text @647 > ) ) ) ) : ( 0 rep choice 647-657 | ( 0 ch:0 ref:recordKeyValue 647-657 | ( 0 rule:recordKeyValue seqnc 647-657 | ( 0 seq:0 ref:ident 647-654 | ( 0 rule:ident seqnc 647-654 | ( 0 seq:0 ref:alpha 647-648 | ( 0 rule:alpha choice 647-648 | ( 0 ch:0 char-range 647-648 ) ) ) : ( 0 seq:1 repsep 648-654 | ( 0 rep choice 648-649 | ( 0 ch:0 ref:alphaNum 648-649 | ( 0 rule:alphaNum choice 648-649 | ( 0 ch:0 ref:alpha 648-649 | ( 0 rule:alpha choice 648-649 | ( 0 ch:0 char-range 648-649 ) ) ) ) ) ) : ( 0 sep text 649-649 ) : ( 0 rep choice 649-650 | ( 0 ch:0 ref:alphaNum 649-650 | ( 0 rule:alphaNum choice 649-650 | ( 0 ch:0 ref:alpha 649-650 | ( 0 rule:alpha choice 649-650 | ( 0 ch:0 char-range 649-650 ) ) ) ) ) ) : ( 0 sep text 650-650 ) : ( 0 rep choice 650-651 | ( 0 ch:0 ref:alphaNum 650-651 | ( 0 rule:alphaNum choice 650-651 | ( 0 ch:0 ref:alpha 650-651 | ( 0 rule:alpha choice 650-651 | ( 0 ch:0 char-range 650-651 ) ) ) ) ) ) : ( 0 sep text 651-651 ) : ( 0 rep choice 651-652 | ( 0 ch:0 ref:alphaNum 651-652 | ( 0 rule:alphaNum choice 651-652 | ( 0 ch:0 ref:alpha 651-652 | ( 0 rule:alpha choice 651-652 | ( 0 ch:0 char-range 651-652 ) ) ) ) ) ) : ( 0 sep text 652-652 ) : ( 0 rep choice 652-653 | ( 0 ch:0 ref:alphaNum 652-653 | ( 0 rule:alphaNum choice 652-653 | ( 0 ch:0 ref:alpha 652-653 | ( 0 rule:alpha choice 652-653 | ( 0 ch:0 char-range 652-653 ) ) ) ) ) ) : ( 0 sep text 653-653 ) : ( 0 rep choice 653-654 | ( 0 ch:0 ref:alphaNum 653-654 | ( 0 rule:alphaNum choice 653-654 | ( 0 ch:0 ref:alpha 653-654 | ( 0 rule:alpha choice 653-654 | ( 0 ch:0 char-range 653-654 ) ) ) ) ) ) : ( 0 sep text 654-654 ) : < None of choices matched input :: rep choice @654 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @654 | < None of choices matched input :: rule:alphaNum choice @654 | < Rule `alpha` didn't match :: ch:0 ref:alpha @654 | < None of choices matched input :: rule:alpha choice @654 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @654 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @654 > : < Expected '_', but found ':' :: ch:2 text @654 > > > : < Rule `num` didn't match :: ch:1 ref:num @654 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @654 > > > > : < Expected '.', but found ':' :: ch:1 text @654 > > ) ) ) : ( 0 seq:1 text 654-655 ) : ( 0 seq:2 ref:ws 655-656 | ( 0 rule:ws repsep 655-656 | ( 0 rep seqnc 655-656 | ( 0 seq:0 ref:spaces 655-656 | ( 0 rule:spaces repsep 655-656 | ( 0 rep text 655-656 ) : ( 0 sep text 656-656 ) : < Expected ' ', but found 'L' :: rep text @656 > ) ) : ( 0 seq:1 choice 656-656 | < Rule `comment` didn't match :: ch:0 ref:comment @656 | < Sequence failed at entry 0 :: rule:comment seqnc @656 | < Expected '#', but found 'L' :: seq:0 text @656 > > > : ( 0 ch:1 text 656-656 ) ) ) : < Expected '
', but found 'L' :: sep text @656 > ) ) : ( 0 seq:3 ref:term 656-657 | ( 0 rule:term choice 656-657 | < Rule `record` didn't match :: ch:0 ref:record @656 | < Sequence failed at entry 1 :: rule:record seqnc @657 | ( 0 seq:0 ref:ident 656-657 | ( 0 rule:ident seqnc 656-657 | ( 0 seq:0 ref:alpha 656-657 | ( 0 rule:alpha choice 656-657 | < Expected character in range from 'a' to 'z', but found 'L' :: ch:0 char-range @656 > : ( 0 ch:1 char-range 656-657 ) ) ) : ( 0 seq:1 repsep 657-657 | < None of choices matched input :: rep choice @657 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @657 | < None of choices matched input :: rule:alphaNum choice @657 | < Rule `alpha` didn't match :: ch:0 ref:alpha @657 | < None of choices matched input :: rule:alpha choice @657 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @657 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @657 > : < Expected '_', but found '}' :: ch:2 text @657 > > > : < Rule `num` didn't match :: ch:1 ref:num @657 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @657 > > > > : < Expected '.', but found '}' :: ch:1 text @657 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @657 > > > : < Rule `int` didn't match :: ch:1 ref:int @656 | < Sequence failed at entry 1 :: rule:int seqnc @656 | ( 0 seq:0 choice 656-656 | < Expected '-', but found 'L' :: ch:0 text @656 > : ( 0 ch:1 text 656-656 ) ) : < Rule `num` didn't match :: seq:1 ref:first @656 | < Expected character in range from '0' to '9', but found 'L' :: rule:num char-range @656 > > > > : ( 0 ch:2 ref:var 656-657 | ( 0 rule:var seqnc 656-657 | ( 0 seq:0 char-range 656-657 ) : ( 0 seq:1 repsep 657-657 | < None of choices matched input :: rep choice @657 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @657 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @657 | < None of choices matched input :: rule:alphaNum choice @657 | < Rule `alpha` didn't match :: ch:0 ref:alpha @657 | < None of choices matched input :: rule:alpha choice @657 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @657 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @657 > : < Expected '_', but found '}' :: ch:2 text @657 > > > : < Rule `num` didn't match :: ch:1 ref:num @657 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @657 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @657 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @657 | < Expected ',', but found '}' :: seq:0 text @657 > > > ) ) : ( 0 seq:4 ref:ws 657-657 | ( 0 rule:ws repsep 657-657 | ( 0 rep seqnc 657-657 | ( 0 seq:0 ref:spaces 657-657 | ( 0 rule:spaces repsep 657-657 | < Expected ' ', but found '}' :: rep text @657 > ) ) : ( 0 seq:1 choice 657-657 | < Rule `comment` didn't match :: ch:0 ref:comment @657 | < Sequence failed at entry 0 :: rule:comment seqnc @657 | < Expected '#', but found '}' :: seq:0 text @657 > > > : ( 0 ch:1 text 657-657 ) ) ) : < Expected '
', but found '}' :: sep text @657 > ) ) : ( 0 seq:5 text 657-658 ) ) ) : ( 0 seq:1 ref:ws 658-659 | ( 0 rule:ws repsep 658-659 | ( 0 rep seqnc 658-659 | ( 0 seq:0 ref:spaces 658-659 | ( 0 rule:spaces repsep 658-659 | ( 0 rep text 658-659 ) : ( 0 sep text 659-659 ) : < Expected ' ', but found ':' :: rep text @659 > ) ) : ( 0 seq:1 choice 659-659 | < Rule `comment` didn't match :: ch:0 ref:comment @659 | < Sequence failed at entry 0 :: rule:comment seqnc @659 | < Expected '#', but found ':' :: seq:0 text @659 > > > : ( 0 ch:1 text 659-659 ) ) ) : < Expected '
', but found ':' :: sep text @659 > ) ) : ( 0 seq:2 text 659-661 ) : ( 0 seq:3 ref:ws 661-664 | ( 0 rule:ws repsep 661-664 | ( 0 rep seqnc 661-661 | ( 0 seq:0 ref:spaces 661-661 | ( 0 rule:spaces repsep 661-661 | < Expected ' ', but found '
' :: rep text @661 > ) ) : ( 0 seq:1 choice 661-661 | < Rule `comment` didn't match :: ch:0 ref:comment @661 | < Sequence failed at entry 0 :: rule:comment seqnc @661 | < Expected '#', but found '
' :: seq:0 text @661 > > > : ( 0 ch:1 text 661-661 ) ) ) : ( 0 sep text 661-662 ) : ( 0 rep seqnc 662-664 | ( 0 seq:0 ref:spaces 662-664 | ( 0 rule:spaces repsep 662-664 | ( 0 rep text 662-663 ) : ( 0 sep text 663-663 ) : ( 0 rep text 663-664 ) : ( 0 sep text 664-664 ) : < Expected ' ', but found 's' :: rep text @664 > ) ) : ( 0 seq:1 choice 664-664 | < Rule `comment` didn't match :: ch:0 ref:comment @664 | < Sequence failed at entry 0 :: rule:comment seqnc @664 | < Expected '#', but found 's' :: seq:0 text @664 > > > : ( 0 ch:1 text 664-664 ) ) ) : < Expected '
', but found 's' :: sep text @664 > ) ) : ( 0 seq:4 repsep 664-723 | ( 0 rep ref:disjunct 664-723 | ( 0 rule:disjunct repsep 664-723 | ( 0 rep ref:conjunct 664-723 | ( 0 rule:conjunct choice 664-723 | < Rule `record` didn't match :: ch:0 ref:record @664 | < Sequence failed at entry 1 :: rule:record seqnc @667 | ( 0 seq:0 ref:ident 664-667 | ( 0 rule:ident seqnc 664-667 | ( 0 seq:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) : ( 0 seq:1 repsep 665-667 | ( 0 rep choice 665-666 | ( 0 ch:0 ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep choice 666-667 | ( 0 ch:0 ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) ) : ( 0 sep text 667-667 ) : < None of choices matched input :: rep choice @667 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @667 | < None of choices matched input :: rule:alphaNum choice @667 | < Rule `alpha` didn't match :: ch:0 ref:alpha @667 | < None of choices matched input :: rule:alpha choice @667 | < Expected character in range from 'a' to 'z', but found '[' :: ch:0 char-range @667 > : < Expected character in range from 'A' to 'Z', but found '[' :: ch:1 char-range @667 > : < Expected '_', but found '[' :: ch:2 text @667 > > > : < Rule `num` didn't match :: ch:1 ref:num @667 | < Expected character in range from '0' to '9', but found '[' :: rule:num char-range @667 > > > > : < Expected '.', but found '[' :: ch:1 text @667 > > ) ) ) : < Expected '{', but found '[' :: seq:1 text @667 > > > : < Rule `comparison` didn't match :: ch:1 ref:comparison @664 | < Sequence failed at entry 0 :: rule:comparison seqnc @664 | < Rule `term` didn't match :: seq:0 ref:left @664 | < None of choices matched input :: rule:term choice @664 | < Rule `record` didn't match :: ch:0 ref:record @664 | < Sequence failed at entry 1 :: rule:record seqnc @667 | ( 0 seq:0 ref:ident 664-667 | ( 0 rule:ident seqnc 664-667 | ( 0 seq:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) : ( 0 seq:1 repsep 665-667 | ( 0 rep choice 665-666 | ( 0 ch:0 ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep choice 666-667 | ( 0 ch:0 ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) ) : ( 0 sep text 667-667 ) : < None of choices matched input :: rep choice @667 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @667 | < None of choices matched input :: rule:alphaNum choice @667 | < Rule `alpha` didn't match :: ch:0 ref:alpha @667 | < None of choices matched input :: rule:alpha choice @667 | < Expected character in range from 'a' to 'z', but found '[' :: ch:0 char-range @667 > : < Expected character in range from 'A' to 'Z', but found '[' :: ch:1 char-range @667 > : < Expected '_', but found '[' :: ch:2 text @667 > > > : < Rule `num` didn't match :: ch:1 ref:num @667 | < Expected character in range from '0' to '9', but found '[' :: rule:num char-range @667 > > > > : < Expected '.', but found '[' :: ch:1 text @667 > > ) ) ) : < Expected '{', but found '[' :: seq:1 text @667 > > > : < Rule `int` didn't match :: ch:1 ref:int @664 | < Sequence failed at entry 1 :: rule:int seqnc @664 | ( 0 seq:0 choice 664-664 | < Expected '-', but found 's' :: ch:0 text @664 > : ( 0 ch:1 text 664-664 ) ) : < Rule `num` didn't match :: seq:1 ref:first @664 | < Expected character in range from '0' to '9', but found 's' :: rule:num char-range @664 > > > > : < Rule `var` didn't match :: ch:2 ref:var @664 | < Sequence failed at entry 0 :: rule:var seqnc @664 | < Expected character in range from 'A' to 'Z', but found 's' :: seq:0 char-range @664 > > > : < Rule `string` didn't match :: ch:3 ref:string @664 | < Sequence failed at entry 0 :: rule:string seqnc @664 | < Expected '"', but found 's' :: seq:0 text @664 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @664 | < None of choices matched input :: rule:bool choice @664 | < Expected 'true', but found 'sum[' :: ch:0 text @664 > : < Expected 'false', but found 'sum[C' :: ch:1 text @664 > > > : < Rule `array` didn't match :: ch:5 ref:array @664 | < Sequence failed at entry 0 :: rule:array seqnc @664 | < Expected '[', but found 's' :: seq:0 text @664 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @664 | < Sequence failed at entry 0 :: rule:dict seqnc @664 | < Expected '{', but found 's' :: seq:0 text @664 > > > : < Rule `placeholder` didn't match :: ch:7 ref:placeholder @664 | < Expected '???', but found 'sum' :: rule:placeholder text @664 > > > > > > : < Rule `arithmetic` didn't match :: ch:2 ref:arithmetic @664 | < None of choices matched input :: rule:arithmetic choice @664 | < Rule `assignmentOnLeft` didn't match :: ch:0 ref:assignmentOnLeft @664 | < Sequence failed at entry 0 :: rule:assignmentOnLeft seqnc @664 | < Rule `term` didn't match :: seq:0 ref:result @664 | < None of choices matched input :: rule:term choice @664 | < Rule `record` didn't match :: ch:0 ref:record @664 | < Sequence failed at entry 1 :: rule:record seqnc @667 | ( 0 seq:0 ref:ident 664-667 | ( 0 rule:ident seqnc 664-667 | ( 0 seq:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) : ( 0 seq:1 repsep 665-667 | ( 0 rep choice 665-666 | ( 0 ch:0 ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep choice 666-667 | ( 0 ch:0 ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) ) : ( 0 sep text 667-667 ) : < None of choices matched input :: rep choice @667 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @667 | < None of choices matched input :: rule:alphaNum choice @667 | < Rule `alpha` didn't match :: ch:0 ref:alpha @667 | < None of choices matched input :: rule:alpha choice @667 | < Expected character in range from 'a' to 'z', but found '[' :: ch:0 char-range @667 > : < Expected character in range from 'A' to 'Z', but found '[' :: ch:1 char-range @667 > : < Expected '_', but found '[' :: ch:2 text @667 > > > : < Rule `num` didn't match :: ch:1 ref:num @667 | < Expected character in range from '0' to '9', but found '[' :: rule:num char-range @667 > > > > : < Expected '.', but found '[' :: ch:1 text @667 > > ) ) ) : < Expected '{', but found '[' :: seq:1 text @667 > > > : < Rule `int` didn't match :: ch:1 ref:int @664 | < Sequence failed at entry 1 :: rule:int seqnc @664 | ( 0 seq:0 choice 664-664 | < Expected '-', but found 's' :: ch:0 text @664 > : ( 0 ch:1 text 664-664 ) ) : < Rule `num` didn't match :: seq:1 ref:first @664 | < Expected character in range from '0' to '9', but found 's' :: rule:num char-range @664 > > > > : < Rule `var` didn't match :: ch:2 ref:var @664 | < Sequence failed at entry 0 :: rule:var seqnc @664 | < Expected character in range from 'A' to 'Z', but found 's' :: seq:0 char-range @664 > > > : < Rule `string` didn't match :: ch:3 ref:string @664 | < Sequence failed at entry 0 :: rule:string seqnc @664 | < Expected '"', but found 's' :: seq:0 text @664 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @664 | < None of choices matched input :: rule:bool choice @664 | < Expected 'true', but found 'sum[' :: ch:0 text @664 > : < Expected 'false', but found 'sum[C' :: ch:1 text @664 > > > : < Rule `array` didn't match :: ch:5 ref:array @664 | < Sequence failed at entry 0 :: rule:array seqnc @664 | < Expected '[', but found 's' :: seq:0 text @664 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @664 | < Sequence failed at entry 0 :: rule:dict seqnc @664 | < Expected '{', but found 's' :: seq:0 text @664 > > > : < Rule `placeholder` didn't match :: ch:7 ref:placeholder @664 | < Expected '???', but found 'sum' :: rule:placeholder text @664 > > > > > > : < Rule `assignmentOnRight` didn't match :: ch:1 ref:assignmentOnRight @664 | < Sequence failed at entry 0 :: rule:assignmentOnRight seqnc @664 | < Rule `term` didn't match :: seq:0 ref:left @664 | < None of choices matched input :: rule:term choice @664 | < Rule `record` didn't match :: ch:0 ref:record @664 | < Sequence failed at entry 1 :: rule:record seqnc @667 | ( 0 seq:0 ref:ident 664-667 | ( 0 rule:ident seqnc 664-667 | ( 0 seq:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) : ( 0 seq:1 repsep 665-667 | ( 0 rep choice 665-666 | ( 0 ch:0 ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep choice 666-667 | ( 0 ch:0 ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) ) : ( 0 sep text 667-667 ) : < None of choices matched input :: rep choice @667 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @667 | < None of choices matched input :: rule:alphaNum choice @667 | < Rule `alpha` didn't match :: ch:0 ref:alpha @667 | < None of choices matched input :: rule:alpha choice @667 | < Expected character in range from 'a' to 'z', but found '[' :: ch:0 char-range @667 > : < Expected character in range from 'A' to 'Z', but found '[' :: ch:1 char-range @667 > : < Expected '_', but found '[' :: ch:2 text @667 > > > : < Rule `num` didn't match :: ch:1 ref:num @667 | < Expected character in range from '0' to '9', but found '[' :: rule:num char-range @667 > > > > : < Expected '.', but found '[' :: ch:1 text @667 > > ) ) ) : < Expected '{', but found '[' :: seq:1 text @667 > > > : < Rule `int` didn't match :: ch:1 ref:int @664 | < Sequence failed at entry 1 :: rule:int seqnc @664 | ( 0 seq:0 choice 664-664 | < Expected '-', but found 's' :: ch:0 text @664 > : ( 0 ch:1 text 664-664 ) ) : < Rule `num` didn't match :: seq:1 ref:first @664 | < Expected character in range from '0' to '9', but found 's' :: rule:num char-range @664 > > > > : < Rule `var` didn't match :: ch:2 ref:var @664 | < Sequence failed at entry 0 :: rule:var seqnc @664 | < Expected character in range from 'A' to 'Z', but found 's' :: seq:0 char-range @664 > > > : < Rule `string` didn't match :: ch:3 ref:string @664 | < Sequence failed at entry 0 :: rule:string seqnc @664 | < Expected '"', but found 's' :: seq:0 text @664 > > > : < Rule `bool` didn't match :: ch:4 ref:bool @664 | < None of choices matched input :: rule:bool choice @664 | < Expected 'true', but found 'sum[' :: ch:0 text @664 > : < Expected 'false', but found 'sum[C' :: ch:1 text @664 > > > : < Rule `array` didn't match :: ch:5 ref:array @664 | < Sequence failed at entry 0 :: rule:array seqnc @664 | < Expected '[', but found 's' :: seq:0 text @664 > > > : < Rule `dict` didn't match :: ch:6 ref:dict @664 | < Sequence failed at entry 0 :: rule:dict seqnc @664 | < Expected '{', but found 's' :: seq:0 text @664 > > > : < Rule `placeholder` didn't match :: ch:7 ref:placeholder @664 | < Expected '???', but found 'sum' :: rule:placeholder text @664 > > > > > > > > : < Rule `negation` didn't match :: ch:3 ref:negation @664 | < Sequence failed at entry 0 :: rule:negation seqnc @664 | < Expected '!', but found 's' :: seq:0 text @664 > > > : ( 0 ch:4 ref:aggregation 664-723 | ( 0 rule:aggregation seqnc 664-723 | ( 0 seq:0 ref:aggregation 664-667 | ( 0 rule:ident seqnc 664-667 | ( 0 seq:0 ref:alpha 664-665 | ( 0 rule:alpha choice 664-665 | ( 0 ch:0 char-range 664-665 ) ) ) : ( 0 seq:1 repsep 665-667 | ( 0 rep choice 665-666 | ( 0 ch:0 ref:alphaNum 665-666 | ( 0 rule:alphaNum choice 665-666 | ( 0 ch:0 ref:alpha 665-666 | ( 0 rule:alpha choice 665-666 | ( 0 ch:0 char-range 665-666 ) ) ) ) ) ) : ( 0 sep text 666-666 ) : ( 0 rep choice 666-667 | ( 0 ch:0 ref:alphaNum 666-667 | ( 0 rule:alphaNum choice 666-667 | ( 0 ch:0 ref:alpha 666-667 | ( 0 rule:alpha choice 666-667 | ( 0 ch:0 char-range 666-667 ) ) ) ) ) ) : ( 0 sep text 667-667 ) : < None of choices matched input :: rep choice @667 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @667 | < None of choices matched input :: rule:alphaNum choice @667 | < Rule `alpha` didn't match :: ch:0 ref:alpha @667 | < None of choices matched input :: rule:alpha choice @667 | < Expected character in range from 'a' to 'z', but found '[' :: ch:0 char-range @667 > : < Expected character in range from 'A' to 'Z', but found '[' :: ch:1 char-range @667 > : < Expected '_', but found '[' :: ch:2 text @667 > > > : < Rule `num` didn't match :: ch:1 ref:num @667 | < Expected character in range from '0' to '9', but found '[' :: rule:num char-range @667 > > > > : < Expected '.', but found '[' :: ch:1 text @667 > > ) ) ) : ( 0 seq:1 text 667-668 ) : ( 0 seq:2 repsep 668-669 | ( 0 rep ref:var 668-669 | ( 0 rule:var seqnc 668-669 | ( 0 seq:0 char-range 668-669 ) : ( 0 seq:1 repsep 669-669 | < None of choices matched input :: rep choice @669 | < Expected character in range from 'A' to 'Z', but found ':' :: ch:0 char-range @669 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @669 | < None of choices matched input :: rule:alphaNum choice @669 | < Rule `alpha` didn't match :: ch:0 ref:alpha @669 | < None of choices matched input :: rule:alpha choice @669 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @669 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @669 > : < Expected '_', but found ':' :: ch:2 text @669 > > > : < Rule `num` didn't match :: ch:1 ref:num @669 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @669 > > > > > ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @669 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @669 | < Expected ',', but found ':' :: seq:0 text @669 > > > ) : ( 0 seq:3 text 669-670 ) : ( 0 seq:4 ref:ws 670-671 | ( 0 rule:ws repsep 670-671 | ( 0 rep seqnc 670-671 | ( 0 seq:0 ref:spaces 670-671 | ( 0 rule:spaces repsep 670-671 | ( 0 rep text 670-671 ) : ( 0 sep text 671-671 ) : < Expected ' ', but found 'b' :: rep text @671 > ) ) : ( 0 seq:1 choice 671-671 | < Rule `comment` didn't match :: ch:0 ref:comment @671 | < Sequence failed at entry 0 :: rule:comment seqnc @671 | < Expected '#', but found 'b' :: seq:0 text @671 > > > : ( 0 ch:1 text 671-671 ) ) ) : < Expected '
', but found 'b' :: sep text @671 > ) ) : ( 0 seq:5 ref:record 671-722 | ( 0 rule:record seqnc 671-722 | ( 0 seq:0 ref:ident 671-694 | ( 0 rule:ident seqnc 671-694 | ( 0 seq:0 ref:alpha 671-672 | ( 0 rule:alpha choice 671-672 | ( 0 ch:0 char-range 671-672 ) ) ) : ( 0 seq:1 repsep 672-694 | ( 0 rep choice 672-673 | ( 0 ch:0 ref:alphaNum 672-673 | ( 0 rule:alphaNum choice 672-673 | ( 0 ch:0 ref:alpha 672-673 | ( 0 rule:alpha choice 672-673 | ( 0 ch:0 char-range 672-673 ) ) ) ) ) ) : ( 0 sep text 673-673 ) : ( 0 rep choice 673-674 | ( 0 ch:0 ref:alphaNum 673-674 | ( 0 rule:alphaNum choice 673-674 | ( 0 ch:0 ref:alpha 673-674 | ( 0 rule:alpha choice 673-674 | ( 0 ch:0 char-range 673-674 ) ) ) ) ) ) : ( 0 sep text 674-674 ) : ( 0 rep choice 674-675 | ( 0 ch:0 ref:alphaNum 674-675 | ( 0 rule:alphaNum choice 674-675 | ( 0 ch:0 ref:alpha 674-675 | ( 0 rule:alpha choice 674-675 | ( 0 ch:0 char-range 674-675 ) ) ) ) ) ) : ( 0 sep text 675-675 ) : ( 0 rep choice 675-676 | ( 0 ch:0 ref:alphaNum 675-676 | ( 0 rule:alphaNum choice 675-676 | ( 0 ch:0 ref:alpha 675-676 | ( 0 rule:alpha choice 675-676 | ( 0 ch:0 char-range 675-676 ) ) ) ) ) ) : ( 0 sep text 676-676 ) : ( 0 rep choice 676-677 | ( 0 ch:0 ref:alphaNum 676-677 | ( 0 rule:alphaNum choice 676-677 | ( 0 ch:0 ref:alpha 676-677 | ( 0 rule:alpha choice 676-677 | ( 0 ch:0 char-range 676-677 ) ) ) ) ) ) : ( 0 sep text 677-677 ) : ( 0 rep choice 677-678 | ( 0 ch:0 ref:alphaNum 677-678 | ( 0 rule:alphaNum choice 677-678 | ( 0 ch:0 ref:alpha 677-678 | ( 0 rule:alpha choice 677-678 | ( 0 ch:0 char-range 677-678 ) ) ) ) ) ) : ( 0 sep text 678-678 ) : ( 0 rep choice 678-679 | ( 0 ch:0 ref:alphaNum 678-679 | ( 0 rule:alphaNum choice 678-679 | ( 0 ch:0 ref:alpha 678-679 | ( 0 rule:alpha choice 678-679 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @678 > : ( 0 ch:1 char-range 678-679 ) ) ) ) ) ) : ( 0 sep text 679-679 ) : ( 0 rep choice 679-680 | ( 0 ch:0 ref:alphaNum 679-680 | ( 0 rule:alphaNum choice 679-680 | ( 0 ch:0 ref:alpha 679-680 | ( 0 rule:alpha choice 679-680 | ( 0 ch:0 char-range 679-680 ) ) ) ) ) ) : ( 0 sep text 680-680 ) : ( 0 rep choice 680-681 | ( 0 ch:0 ref:alphaNum 680-681 | ( 0 rule:alphaNum choice 680-681 | ( 0 ch:0 ref:alpha 680-681 | ( 0 rule:alpha choice 680-681 | ( 0 ch:0 char-range 680-681 ) ) ) ) ) ) : ( 0 sep text 681-681 ) : ( 0 rep choice 681-682 | ( 0 ch:0 ref:alphaNum 681-682 | ( 0 rule:alphaNum choice 681-682 | ( 0 ch:0 ref:alpha 681-682 | ( 0 rule:alpha choice 681-682 | ( 0 ch:0 char-range 681-682 ) ) ) ) ) ) : ( 0 sep text 682-682 ) : ( 0 rep choice 682-683 | ( 0 ch:0 ref:alphaNum 682-683 | ( 0 rule:alphaNum choice 682-683 | ( 0 ch:0 ref:alpha 682-683 | ( 0 rule:alpha choice 682-683 | ( 0 ch:0 char-range 682-683 ) ) ) ) ) ) : ( 0 sep text 683-683 ) : ( 0 rep choice 683-684 | ( 0 ch:0 ref:alphaNum 683-684 | ( 0 rule:alphaNum choice 683-684 | ( 0 ch:0 ref:alpha 683-684 | ( 0 rule:alpha choice 683-684 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @683 > : ( 0 ch:1 char-range 683-684 ) ) ) ) ) ) : ( 0 sep text 684-684 ) : ( 0 rep choice 684-685 | ( 0 ch:0 ref:alphaNum 684-685 | ( 0 rule:alphaNum choice 684-685 | ( 0 ch:0 ref:alpha 684-685 | ( 0 rule:alpha choice 684-685 | ( 0 ch:0 char-range 684-685 ) ) ) ) ) ) : ( 0 sep text 685-685 ) : ( 0 rep choice 685-686 | ( 0 ch:0 ref:alphaNum 685-686 | ( 0 rule:alphaNum choice 685-686 | ( 0 ch:0 ref:alpha 685-686 | ( 0 rule:alpha choice 685-686 | ( 0 ch:0 char-range 685-686 ) ) ) ) ) ) : ( 0 sep text 686-686 ) : ( 0 rep choice 686-687 | ( 0 ch:0 ref:alphaNum 686-687 | ( 0 rule:alphaNum choice 686-687 | ( 0 ch:0 ref:alpha 686-687 | ( 0 rule:alpha choice 686-687 | ( 0 ch:0 char-range 686-687 ) ) ) ) ) ) : ( 0 sep text 687-687 ) : ( 0 rep choice 687-688 | ( 0 ch:0 ref:alphaNum 687-688 | ( 0 rule:alphaNum choice 687-688 | ( 0 ch:0 ref:alpha 687-688 | ( 0 rule:alpha choice 687-688 | ( 0 ch:0 char-range 687-688 ) ) ) ) ) ) : ( 0 sep text 688-688 ) : ( 0 rep choice 688-689 | ( 0 ch:0 ref:alphaNum 688-689 | ( 0 rule:alphaNum choice 688-689 | ( 0 ch:0 ref:alpha 688-689 | ( 0 rule:alpha choice 688-689 | ( 0 ch:0 char-range 688-689 ) ) ) ) ) ) : ( 0 sep text 689-689 ) : ( 0 rep choice 689-690 | ( 0 ch:0 ref:alphaNum 689-690 | ( 0 rule:alphaNum choice 689-690 | ( 0 ch:0 ref:alpha 689-690 | ( 0 rule:alpha choice 689-690 | ( 0 ch:0 char-range 689-690 ) ) ) ) ) ) : ( 0 sep text 690-690 ) : ( 0 rep choice 690-691 | ( 0 ch:0 ref:alphaNum 690-691 | ( 0 rule:alphaNum choice 690-691 | ( 0 ch:0 ref:alpha 690-691 | ( 0 rule:alpha choice 690-691 | < Expected character in range from 'a' to 'z', but found 'F' :: ch:0 char-range @690 > : ( 0 ch:1 char-range 690-691 ) ) ) ) ) ) : ( 0 sep text 691-691 ) : ( 0 rep choice 691-692 | ( 0 ch:0 ref:alphaNum 691-692 | ( 0 rule:alphaNum choice 691-692 | ( 0 ch:0 ref:alpha 691-692 | ( 0 rule:alpha choice 691-692 | ( 0 ch:0 char-range 691-692 ) ) ) ) ) ) : ( 0 sep text 692-692 ) : ( 0 rep choice 692-693 | ( 0 ch:0 ref:alphaNum 692-693 | ( 0 rule:alphaNum choice 692-693 | ( 0 ch:0 ref:alpha 692-693 | ( 0 rule:alpha choice 692-693 | ( 0 ch:0 char-range 692-693 ) ) ) ) ) ) : ( 0 sep text 693-693 ) : ( 0 rep choice 693-694 | ( 0 ch:0 ref:alphaNum 693-694 | ( 0 rule:alphaNum choice 693-694 | ( 0 ch:0 ref:alpha 693-694 | ( 0 rule:alpha choice 693-694 | ( 0 ch:0 char-range 693-694 ) ) ) ) ) ) : ( 0 sep text 694-694 ) : < None of choices matched input :: rep choice @694 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @694 | < None of choices matched input :: rule:alphaNum choice @694 | < Rule `alpha` didn't match :: ch:0 ref:alpha @694 | < None of choices matched input :: rule:alpha choice @694 | < Expected character in range from 'a' to 'z', but found '{' :: ch:0 char-range @694 > : < Expected character in range from 'A' to 'Z', but found '{' :: ch:1 char-range @694 > : < Expected '_', but found '{' :: ch:2 text @694 > > > : < Rule `num` didn't match :: ch:1 ref:num @694 | < Expected character in range from '0' to '9', but found '{' :: rule:num char-range @694 > > > > : < Expected '.', but found '{' :: ch:1 text @694 > > ) ) ) : ( 0 seq:1 text 694-695 ) : ( 0 seq:2 ref:ws 695-695 | ( 0 rule:ws repsep 695-695 | ( 0 rep seqnc 695-695 | ( 0 seq:0 ref:spaces 695-695 | ( 0 rule:spaces repsep 695-695 | < Expected ' ', but found 'i' :: rep text @695 > ) ) : ( 0 seq:1 choice 695-695 | < Rule `comment` didn't match :: ch:0 ref:comment @695 | < Sequence failed at entry 0 :: rule:comment seqnc @695 | < Expected '#', but found 'i' :: seq:0 text @695 > > > : ( 0 ch:1 text 695-695 ) ) ) : < Expected '
', but found 'i' :: sep text @695 > ) ) : ( 0 seq:3 ref:recordAttrs 695-721 | ( 0 rule:recordAttrs repsep 695-721 | ( 0 rep choice 695-700 | ( 0 ch:0 ref:recordKeyValue 695-700 | ( 0 rule:recordKeyValue seqnc 695-700 | ( 0 seq:0 ref:ident 695-697 | ( 0 rule:ident seqnc 695-697 | ( 0 seq:0 ref:alpha 695-696 | ( 0 rule:alpha choice 695-696 | ( 0 ch:0 char-range 695-696 ) ) ) : ( 0 seq:1 repsep 696-697 | ( 0 rep choice 696-697 | ( 0 ch:0 ref:alphaNum 696-697 | ( 0 rule:alphaNum choice 696-697 | ( 0 ch:0 ref:alpha 696-697 | ( 0 rule:alpha choice 696-697 | ( 0 ch:0 char-range 696-697 ) ) ) ) ) ) : ( 0 sep text 697-697 ) : < None of choices matched input :: rep choice @697 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @697 | < None of choices matched input :: rule:alphaNum choice @697 | < Rule `alpha` didn't match :: ch:0 ref:alpha @697 | < None of choices matched input :: rule:alpha choice @697 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @697 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @697 > : < Expected '_', but found ':' :: ch:2 text @697 > > > : < Rule `num` didn't match :: ch:1 ref:num @697 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @697 > > > > : < Expected '.', but found ':' :: ch:1 text @697 > > ) ) ) : ( 0 seq:1 text 697-698 ) : ( 0 seq:2 ref:ws 698-699 | ( 0 rule:ws repsep 698-699 | ( 0 rep seqnc 698-699 | ( 0 seq:0 ref:spaces 698-699 | ( 0 rule:spaces repsep 698-699 | ( 0 rep text 698-699 ) : ( 0 sep text 699-699 ) : < Expected ' ', but found 'B' :: rep text @699 > ) ) : ( 0 seq:1 choice 699-699 | < Rule `comment` didn't match :: ch:0 ref:comment @699 | < Sequence failed at entry 0 :: rule:comment seqnc @699 | < Expected '#', but found 'B' :: seq:0 text @699 > > > : ( 0 ch:1 text 699-699 ) ) ) : < Expected '
', but found 'B' :: sep text @699 > ) ) : ( 0 seq:3 ref:term 699-700 | ( 0 rule:term choice 699-700 | < Rule `record` didn't match :: ch:0 ref:record @699 | < Sequence failed at entry 1 :: rule:record seqnc @700 | ( 0 seq:0 ref:ident 699-700 | ( 0 rule:ident seqnc 699-700 | ( 0 seq:0 ref:alpha 699-700 | ( 0 rule:alpha choice 699-700 | < Expected character in range from 'a' to 'z', but found 'B' :: ch:0 char-range @699 > : ( 0 ch:1 char-range 699-700 ) ) ) : ( 0 seq:1 repsep 700-700 | < None of choices matched input :: rep choice @700 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @700 | < None of choices matched input :: rule:alphaNum choice @700 | < Rule `alpha` didn't match :: ch:0 ref:alpha @700 | < None of choices matched input :: rule:alpha choice @700 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @700 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @700 > : < Expected '_', but found ',' :: ch:2 text @700 > > > : < Rule `num` didn't match :: ch:1 ref:num @700 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @700 > > > > : < Expected '.', but found ',' :: ch:1 text @700 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @700 > > > : < Rule `int` didn't match :: ch:1 ref:int @699 | < Sequence failed at entry 1 :: rule:int seqnc @699 | ( 0 seq:0 choice 699-699 | < Expected '-', but found 'B' :: ch:0 text @699 > : ( 0 ch:1 text 699-699 ) ) : < Rule `num` didn't match :: seq:1 ref:first @699 | < Expected character in range from '0' to '9', but found 'B' :: rule:num char-range @699 > > > > : ( 0 ch:2 ref:var 699-700 | ( 0 rule:var seqnc 699-700 | ( 0 seq:0 char-range 699-700 ) : ( 0 seq:1 repsep 700-700 | < None of choices matched input :: rep choice @700 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @700 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @700 | < None of choices matched input :: rule:alphaNum choice @700 | < Rule `alpha` didn't match :: ch:0 ref:alpha @700 | < None of choices matched input :: rule:alpha choice @700 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @700 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @700 > : < Expected '_', but found ',' :: ch:2 text @700 > > > : < Rule `num` didn't match :: ch:1 ref:num @700 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @700 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 700-702 | ( 0 rule:commaSpace seqnc 700-702 | ( 0 seq:0 text 700-701 ) : ( 0 seq:1 ref:ws 701-702 | ( 0 rule:ws repsep 701-702 | ( 0 rep seqnc 701-702 | ( 0 seq:0 ref:spaces 701-702 | ( 0 rule:spaces repsep 701-702 | ( 0 rep text 701-702 ) : ( 0 sep text 702-702 ) : < Expected ' ', but found 't' :: rep text @702 > ) ) : ( 0 seq:1 choice 702-702 | < Rule `comment` didn't match :: ch:0 ref:comment @702 | < Sequence failed at entry 0 :: rule:comment seqnc @702 | < Expected '#', but found 't' :: seq:0 text @702 > > > : ( 0 ch:1 text 702-702 ) ) ) : < Expected '
', but found 't' :: sep text @702 > ) ) ) ) : ( 0 rep choice 702-709 | ( 0 ch:0 ref:recordKeyValue 702-709 | ( 0 rule:recordKeyValue seqnc 702-709 | ( 0 seq:0 ref:ident 702-706 | ( 0 rule:ident seqnc 702-706 | ( 0 seq:0 ref:alpha 702-703 | ( 0 rule:alpha choice 702-703 | ( 0 ch:0 char-range 702-703 ) ) ) : ( 0 seq:1 repsep 703-706 | ( 0 rep choice 703-704 | ( 0 ch:0 ref:alphaNum 703-704 | ( 0 rule:alphaNum choice 703-704 | ( 0 ch:0 ref:alpha 703-704 | ( 0 rule:alpha choice 703-704 | ( 0 ch:0 char-range 703-704 ) ) ) ) ) ) : ( 0 sep text 704-704 ) : ( 0 rep choice 704-705 | ( 0 ch:0 ref:alphaNum 704-705 | ( 0 rule:alphaNum choice 704-705 | ( 0 ch:0 ref:alpha 704-705 | ( 0 rule:alpha choice 704-705 | ( 0 ch:0 char-range 704-705 ) ) ) ) ) ) : ( 0 sep text 705-705 ) : ( 0 rep choice 705-706 | ( 0 ch:0 ref:alphaNum 705-706 | ( 0 rule:alphaNum choice 705-706 | ( 0 ch:0 ref:alpha 705-706 | ( 0 rule:alpha choice 705-706 | ( 0 ch:0 char-range 705-706 ) ) ) ) ) ) : ( 0 sep text 706-706 ) : < None of choices matched input :: rep choice @706 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @706 | < None of choices matched input :: rule:alphaNum choice @706 | < Rule `alpha` didn't match :: ch:0 ref:alpha @706 | < None of choices matched input :: rule:alpha choice @706 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @706 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @706 > : < Expected '_', but found ':' :: ch:2 text @706 > > > : < Rule `num` didn't match :: ch:1 ref:num @706 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @706 > > > > : < Expected '.', but found ':' :: ch:1 text @706 > > ) ) ) : ( 0 seq:1 text 706-707 ) : ( 0 seq:2 ref:ws 707-708 | ( 0 rule:ws repsep 707-708 | ( 0 rep seqnc 707-708 | ( 0 seq:0 ref:spaces 707-708 | ( 0 rule:spaces repsep 707-708 | ( 0 rep text 707-708 ) : ( 0 sep text 708-708 ) : < Expected ' ', but found 'T' :: rep text @708 > ) ) : ( 0 seq:1 choice 708-708 | < Rule `comment` didn't match :: ch:0 ref:comment @708 | < Sequence failed at entry 0 :: rule:comment seqnc @708 | < Expected '#', but found 'T' :: seq:0 text @708 > > > : ( 0 ch:1 text 708-708 ) ) ) : < Expected '
', but found 'T' :: sep text @708 > ) ) : ( 0 seq:3 ref:term 708-709 | ( 0 rule:term choice 708-709 | < Rule `record` didn't match :: ch:0 ref:record @708 | < Sequence failed at entry 1 :: rule:record seqnc @709 | ( 0 seq:0 ref:ident 708-709 | ( 0 rule:ident seqnc 708-709 | ( 0 seq:0 ref:alpha 708-709 | ( 0 rule:alpha choice 708-709 | < Expected character in range from 'a' to 'z', but found 'T' :: ch:0 char-range @708 > : ( 0 ch:1 char-range 708-709 ) ) ) : ( 0 seq:1 repsep 709-709 | < None of choices matched input :: rep choice @709 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @709 | < None of choices matched input :: rule:alphaNum choice @709 | < Rule `alpha` didn't match :: ch:0 ref:alpha @709 | < None of choices matched input :: rule:alpha choice @709 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @709 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @709 > : < Expected '_', but found ',' :: ch:2 text @709 > > > : < Rule `num` didn't match :: ch:1 ref:num @709 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @709 > > > > : < Expected '.', but found ',' :: ch:1 text @709 > > ) ) ) : < Expected '{', but found ',' :: seq:1 text @709 > > > : < Rule `int` didn't match :: ch:1 ref:int @708 | < Sequence failed at entry 1 :: rule:int seqnc @708 | ( 0 seq:0 choice 708-708 | < Expected '-', but found 'T' :: ch:0 text @708 > : ( 0 ch:1 text 708-708 ) ) : < Rule `num` didn't match :: seq:1 ref:first @708 | < Expected character in range from '0' to '9', but found 'T' :: rule:num char-range @708 > > > > : ( 0 ch:2 ref:var 708-709 | ( 0 rule:var seqnc 708-709 | ( 0 seq:0 char-range 708-709 ) : ( 0 seq:1 repsep 709-709 | < None of choices matched input :: rep choice @709 | < Expected character in range from 'A' to 'Z', but found ',' :: ch:0 char-range @709 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @709 | < None of choices matched input :: rule:alphaNum choice @709 | < Rule `alpha` didn't match :: ch:0 ref:alpha @709 | < None of choices matched input :: rule:alpha choice @709 | < Expected character in range from 'a' to 'z', but found ',' :: ch:0 char-range @709 > : < Expected character in range from 'A' to 'Z', but found ',' :: ch:1 char-range @709 > : < Expected '_', but found ',' :: ch:2 text @709 > > > : < Rule `num` didn't match :: ch:1 ref:num @709 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @709 > > > > > ) ) ) ) ) ) ) ) : ( 0 sep ref:commaSpace 709-711 | ( 0 rule:commaSpace seqnc 709-711 | ( 0 seq:0 text 709-710 ) : ( 0 seq:1 ref:ws 710-711 | ( 0 rule:ws repsep 710-711 | ( 0 rep seqnc 710-711 | ( 0 seq:0 ref:spaces 710-711 | ( 0 rule:spaces repsep 710-711 | ( 0 rep text 710-711 ) : ( 0 sep text 711-711 ) : < Expected ' ', but found 'c' :: rep text @711 > ) ) : ( 0 seq:1 choice 711-711 | < Rule `comment` didn't match :: ch:0 ref:comment @711 | < Sequence failed at entry 0 :: rule:comment seqnc @711 | < Expected '#', but found 'c' :: seq:0 text @711 > > > : ( 0 ch:1 text 711-711 ) ) ) : < Expected '
', but found 'c' :: sep text @711 > ) ) ) ) : ( 0 rep choice 711-721 | ( 0 ch:0 ref:recordKeyValue 711-721 | ( 0 rule:recordKeyValue seqnc 711-721 | ( 0 seq:0 ref:ident 711-718 | ( 0 rule:ident seqnc 711-718 | ( 0 seq:0 ref:alpha 711-712 | ( 0 rule:alpha choice 711-712 | ( 0 ch:0 char-range 711-712 ) ) ) : ( 0 seq:1 repsep 712-718 | ( 0 rep choice 712-713 | ( 0 ch:0 ref:alphaNum 712-713 | ( 0 rule:alphaNum choice 712-713 | ( 0 ch:0 ref:alpha 712-713 | ( 0 rule:alpha choice 712-713 | ( 0 ch:0 char-range 712-713 ) ) ) ) ) ) : ( 0 sep text 713-713 ) : ( 0 rep choice 713-714 | ( 0 ch:0 ref:alphaNum 713-714 | ( 0 rule:alphaNum choice 713-714 | ( 0 ch:0 ref:alpha 713-714 | ( 0 rule:alpha choice 713-714 | ( 0 ch:0 char-range 713-714 ) ) ) ) ) ) : ( 0 sep text 714-714 ) : ( 0 rep choice 714-715 | ( 0 ch:0 ref:alphaNum 714-715 | ( 0 rule:alphaNum choice 714-715 | ( 0 ch:0 ref:alpha 714-715 | ( 0 rule:alpha choice 714-715 | ( 0 ch:0 char-range 714-715 ) ) ) ) ) ) : ( 0 sep text 715-715 ) : ( 0 rep choice 715-716 | ( 0 ch:0 ref:alphaNum 715-716 | ( 0 rule:alphaNum choice 715-716 | ( 0 ch:0 ref:alpha 715-716 | ( 0 rule:alpha choice 715-716 | ( 0 ch:0 char-range 715-716 ) ) ) ) ) ) : ( 0 sep text 716-716 ) : ( 0 rep choice 716-717 | ( 0 ch:0 ref:alphaNum 716-717 | ( 0 rule:alphaNum choice 716-717 | ( 0 ch:0 ref:alpha 716-717 | ( 0 rule:alpha choice 716-717 | ( 0 ch:0 char-range 716-717 ) ) ) ) ) ) : ( 0 sep text 717-717 ) : ( 0 rep choice 717-718 | ( 0 ch:0 ref:alphaNum 717-718 | ( 0 rule:alphaNum choice 717-718 | ( 0 ch:0 ref:alpha 717-718 | ( 0 rule:alpha choice 717-718 | ( 0 ch:0 char-range 717-718 ) ) ) ) ) ) : ( 0 sep text 718-718 ) : < None of choices matched input :: rep choice @718 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @718 | < None of choices matched input :: rule:alphaNum choice @718 | < Rule `alpha` didn't match :: ch:0 ref:alpha @718 | < None of choices matched input :: rule:alpha choice @718 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @718 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @718 > : < Expected '_', but found ':' :: ch:2 text @718 > > > : < Rule `num` didn't match :: ch:1 ref:num @718 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @718 > > > > : < Expected '.', but found ':' :: ch:1 text @718 > > ) ) ) : ( 0 seq:1 text 718-719 ) : ( 0 seq:2 ref:ws 719-720 | ( 0 rule:ws repsep 719-720 | ( 0 rep seqnc 719-720 | ( 0 seq:0 ref:spaces 719-720 | ( 0 rule:spaces repsep 719-720 | ( 0 rep text 719-720 ) : ( 0 sep text 720-720 ) : < Expected ' ', but found 'C' :: rep text @720 > ) ) : ( 0 seq:1 choice 720-720 | < Rule `comment` didn't match :: ch:0 ref:comment @720 | < Sequence failed at entry 0 :: rule:comment seqnc @720 | < Expected '#', but found 'C' :: seq:0 text @720 > > > : ( 0 ch:1 text 720-720 ) ) ) : < Expected '
', but found 'C' :: sep text @720 > ) ) : ( 0 seq:3 ref:term 720-721 | ( 0 rule:term choice 720-721 | < Rule `record` didn't match :: ch:0 ref:record @720 | < Sequence failed at entry 1 :: rule:record seqnc @721 | ( 0 seq:0 ref:ident 720-721 | ( 0 rule:ident seqnc 720-721 | ( 0 seq:0 ref:alpha 720-721 | ( 0 rule:alpha choice 720-721 | < Expected character in range from 'a' to 'z', but found 'C' :: ch:0 char-range @720 > : ( 0 ch:1 char-range 720-721 ) ) ) : ( 0 seq:1 repsep 721-721 | < None of choices matched input :: rep choice @721 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @721 | < None of choices matched input :: rule:alphaNum choice @721 | < Rule `alpha` didn't match :: ch:0 ref:alpha @721 | < None of choices matched input :: rule:alpha choice @721 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @721 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @721 > : < Expected '_', but found '}' :: ch:2 text @721 > > > : < Rule `num` didn't match :: ch:1 ref:num @721 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @721 > > > > : < Expected '.', but found '}' :: ch:1 text @721 > > ) ) ) : < Expected '{', but found '}' :: seq:1 text @721 > > > : < Rule `int` didn't match :: ch:1 ref:int @720 | < Sequence failed at entry 1 :: rule:int seqnc @720 | ( 0 seq:0 choice 720-720 | < Expected '-', but found 'C' :: ch:0 text @720 > : ( 0 ch:1 text 720-720 ) ) : < Rule `num` didn't match :: seq:1 ref:first @720 | < Expected character in range from '0' to '9', but found 'C' :: rule:num char-range @720 > > > > : ( 0 ch:2 ref:var 720-721 | ( 0 rule:var seqnc 720-721 | ( 0 seq:0 char-range 720-721 ) : ( 0 seq:1 repsep 721-721 | < None of choices matched input :: rep choice @721 | < Expected character in range from 'A' to 'Z', but found '}' :: ch:0 char-range @721 > : < Rule `alphaNum` didn't match :: ch:1 ref:alphaNum @721 | < None of choices matched input :: rule:alphaNum choice @721 | < Rule `alpha` didn't match :: ch:0 ref:alpha @721 | < None of choices matched input :: rule:alpha choice @721 | < Expected character in range from 'a' to 'z', but found '}' :: ch:0 char-range @721 > : < Expected character in range from 'A' to 'Z', but found '}' :: ch:1 char-range @721 > : < Expected '_', but found '}' :: ch:2 text @721 > > > : < Rule `num` didn't match :: ch:1 ref:num @721 | < Expected character in range from '0' to '9', but found '}' :: rule:num char-range @721 > > > > > ) ) ) ) ) ) ) ) : < Rule `commaSpace` didn't match :: sep ref:commaSpace @721 | < Sequence failed at entry 0 :: rule:commaSpace seqnc @721 | < Expected ',', but found '}' :: seq:0 text @721 > > > ) ) : ( 0 seq:4 ref:ws 721-721 | ( 0 rule:ws repsep 721-721 | ( 0 rep seqnc 721-721 | ( 0 seq:0 ref:spaces 721-721 | ( 0 rule:spaces repsep 721-721 | < Expected ' ', but found '}' :: rep text @721 > ) ) : ( 0 seq:1 choice 721-721 | < Rule `comment` didn't match :: ch:0 ref:comment @721 | < Sequence failed at entry 0 :: rule:comment seqnc @721 | < Expected '#', but found '}' :: seq:0 text @721 > > > : ( 0 ch:1 text 721-721 ) ) ) : < Expected '
', but found '}' :: sep text @721 > ) ) : ( 0 seq:5 text 721-722 ) ) ) : ( 0 seq:6 text 722-723 ) ) ) ) ) : < Sequence failed at entry 1 :: sep seqnc @723 | ( 0 seq:0 ref:ws 723-723 | ( 0 rule:ws repsep 723-723 | ( 0 rep seqnc 723-723 | ( 0 seq:0 ref:spaces 723-723 | ( 0 rule:spaces repsep 723-723 | < Expected ' ', but found '.' :: rep text @723 > ) ) : ( 0 seq:1 choice 723-723 | < Rule `comment` didn't match :: ch:0 ref:comment @723 | < Sequence failed at entry 0 :: rule:comment seqnc @723 | < Expected '#', but found '.' :: seq:0 text @723 > > > : ( 0 ch:1 text 723-723 ) ) ) : < Expected '
', but found '.' :: sep text @723 > ) ) : < Expected '&', but found '.' :: seq:1 text @723 > > ) ) : < Sequence failed at entry 1 :: sep seqnc @723 | ( 0 seq:0 ref:ws 723-723 | ( 0 rule:ws repsep 723-723 | ( 0 rep seqnc 723-723 | ( 0 seq:0 ref:spaces 723-723 | ( 0 rule:spaces repsep 723-723 | < Expected ' ', but found '.' :: rep text @723 > ) ) : ( 0 seq:1 choice 723-723 | < Rule `comment` didn't match :: ch:0 ref:comment @723 | < Sequence failed at entry 0 :: rule:comment seqnc @723 | < Expected '#', but found '.' :: seq:0 text @723 > > > : ( 0 ch:1 text 723-723 ) ) ) : < Expected '
', but found '.' :: sep text @723 > ) ) : < Expected '|', but found '.' :: seq:1 text @723 > > ) : ( 0 seq:5 text 723-724 ) ) ) ) ) : ( 0 sep ref:ws 724-725 | ( 0 rule:ws repsep 724-725 | ( 0 rep seqnc 724-724 | ( 0 seq:0 ref:spaces 724-724 | ( 0 rule:spaces repsep 724-724 | < Expected ' ', but found '
' :: rep text @724 > ) ) : ( 0 seq:1 choice 724-724 | < Rule `comment` didn't match :: ch:0 ref:comment @724 | < Sequence failed at entry 0 :: rule:comment seqnc @724 | < Expected '#', but found '
' :: seq:0 text @724 > > > : ( 0 ch:1 text 724-724 ) ) ) : ( 0 sep text 724-725 ) : < Sequence failed at entry 1 :: rep seqnc @725 | ( 0 seq:0 ref:spaces 725-725 | ( 0 rule:spaces repsep 725-725 | < Expected ' ', but found end-of-input :: rep text @725 > ) ) : < None of choices matched input :: seq:1 choice @725 | < Rule `comment` didn't match :: ch:0 ref:comment @725 | < Sequence failed at entry 0 :: rule:comment seqnc @725 | < Expected '#', but found end-of-input :: seq:0 text @725 > > > : < End of input :: ch:1 text @725 > > > ) ) : < Rule `statement` didn't match :: rep ref:statement @725 | < None of choices matched input :: rule:statement choice @725 | < Rule `rule` didn't match :: ch:0 ref:rule @725 | < Sequence failed at entry 0 :: rule:rule seqnc @725 | < Rule `record` didn't match :: seq:0 ref:record @725 | < Sequence failed at entry 0 :: rule:record seqnc @725 | < Rule `ident` didn't match :: seq:0 ref:ident @725 | < Sequence failed at entry 0 :: rule:ident seqnc @725 | < Rule `alpha` didn't match :: seq:0 ref:alpha @725 | < None of choices matched input :: rule:alpha choice @725 | < Expected character in range from 'a' to 'z', but found end-of-input :: ch:0 char-range @725 > : < Expected character in range from 'A' to 'Z', but found end-of-input :: ch:1 char-range @725 > : < Expected '_', but found end-of-input :: ch:2 text @725 > > > > > > > > > : < Rule `fact` didn't match :: ch:1 ref:fact @725 | < Sequence failed at entry 0 :: rule:fact seqnc @725 | < Rule `record` didn't match :: seq:0 ref:record @725 | < Sequence failed at entry 0 :: rule:record seqnc @725 | < Rule `ident` didn't match :: seq:0 ref:ident @725 | < Sequence failed at entry 0 :: rule:ident seqnc @725 | < Rule `alpha` didn't match :: seq:0 ref:alpha @725 | < None of choices matched input :: rule:alpha choice @725 | < Expected character in range from 'a' to 'z', but found end-of-input :: ch:0 char-range @725 > : < Expected character in range from 'A' to 'Z', but found end-of-input :: ch:1 char-range @725 > : < Expected '_', but found end-of-input :: ch:2 text @725 > > > > > > > > > : < Rule `query` didn't match :: ch:2 ref:query @725 | < Sequence failed at entry 0 :: rule:query seqnc @725 | < Rule `record` didn't match :: seq:0 ref:record @725 | < Sequence failed at entry 0 :: rule:record seqnc @725 | < Rule `ident` didn't match :: seq:0 ref:ident @725 | < Sequence failed at entry 0 :: rule:ident seqnc @725 | < Rule `alpha` didn't match :: seq:0 ref:alpha @725 | < None of choices matched input :: rule:alpha choice @725 | < Expected character in range from 'a' to 'z', but found end-of-input :: ch:0 char-range @725 > : < Expected character in range from 'A' to 'Z', but found end-of-input :: ch:1 char-range @725 > : < Expected '_', but found end-of-input :: ch:2 text @725 > > > > > > > > > : < Rule `deleteFact` didn't match :: ch:3 ref:deleteFact @725 | < Sequence failed at entry 0 :: rule:deleteFact seqnc @725 | < Expected '-', but found end-of-input :: seq:0 text @725 > > > : < Rule `tableDecl` didn't match :: ch:4 ref:tableDecl @725 | < Sequence failed at entry 0 :: rule:tableDecl seqnc @725 | < Rule `tableKW` didn't match :: seq:0 ref:tableKW @725 | < Expected '.table', but found end-of-input :: rule:tableKW text @725 > > > > : < Rule `loadStmt` didn't match :: ch:5 ref:loadStmt @725 | < Sequence failed at entry 0 :: rule:loadStmt seqnc @725 | < Rule `loadKW` didn't match :: seq:0 ref:loadKW @725 | < Expected '.load', but found end-of-input :: rule:loadKW text @725 > > > > > > ) : ( 0 seq:2 ref:ws 725-725 | ( 0 rule:ws repsep 725-725 | < Sequence failed at entry 1 :: rep seqnc @725 | ( 0 seq:0 ref:spaces 725-725 | ( 0 rule:spaces repsep 725-725 | < Expected ' ', but found end-of-input :: rep text @725 > ) ) : < None of choices matched input :: seq:1 choice @725 | < Rule `comment` didn't match :: ch:0 ref:comment @725 | < Sequence failed at entry 0 :: rule:comment seqnc @725 | < Expected '#', but found end-of-input :: seq:0 text @725 > > > : < End of input :: ch:1 text @725 > > > ) ) )