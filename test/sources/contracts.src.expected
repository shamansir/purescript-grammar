( 0 <main> repsep 0-325 | ( 0 rep ref:stmt 0-176 | ( 0 rule:stmt seqnc 0-176 | ( 0 seq:0 choice 0-175 | ( 0 ch:0 ref:contractStmt 0-175 | ( 0 rule:contractStmt seqnc 0-175 | ( 0 seq:0 ref:contractKW 0-8 | ( 0 rule:contractKW text 0-8 ) ) : ( 0 seq:1 ref:funcArgs 8-175 | ( 0 rule:funcArgs seqnc 8-175 | ( 0 seq:0 text 8-9 ) : ( 0 seq:1 ref:ws 9-12 | ( 0 rule:ws repsep 9-12 | ( 0 rep choice 9-10 | < Expected ' ', but found '
' :: ch:0 text @9 > : ( 0 ch:1 text 9-10 ) ) : ( 0 sep text 10-10 ) : ( 0 rep choice 10-11 | ( 0 ch:0 text 10-11 ) ) : ( 0 sep text 11-11 ) : ( 0 rep choice 11-12 | ( 0 ch:0 text 11-12 ) ) : ( 0 sep text 12-12 ) : < None of choices matched input :: rep choice @12 | < Expected ' ', but found 'i' :: ch:0 text @12 > : < Expected '
', but found 'i' :: ch:1 text @12 > > ) ) : ( 0 seq:2 repsep 12-173 | ( 0 rep ref:funcArg 12-16 | ( 0 rule:funcArg seqnc 12-16 | ( 0 seq:0 choice 12-15 | ( 0 ch:0 seqnc 12-15 | ( 0 seq:0 ref:ident 12-14 | ( 0 rule:ident seqnc 12-14 | ( 0 seq:0 ref:alpha 12-13 | ( 0 rule:alpha choice 12-13 | ( 0 ch:0 char-range 12-13 ) ) ) : ( 0 seq:1 repsep 13-14 | ( 0 rep choice 13-14 | ( 0 ch:0 ref:alphaNum 13-14 | ( 0 rule:alphaNum choice 13-14 | ( 0 ch:0 ref:alpha 13-14 | ( 0 rule:alpha choice 13-14 | ( 0 ch:0 char-range 13-14 ) ) ) ) ) ) : ( 0 sep text 14-14 ) : < None of choices matched input :: rep choice @14 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @14 | < None of choices matched input :: rule:alphaNum choice @14 | < Rule `alpha` didn't match :: ch:0 ref:alpha @14 | < None of choices matched input :: rule:alpha choice @14 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @14 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @14 > : < Expected '_', but found ':' :: ch:2 text @14 > > > : < Rule `num` didn't match :: ch:1 ref:num @14 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @14 > > > > : < Expected '.', but found ':' :: ch:1 text @14 > > ) ) ) : ( 0 seq:1 text 14-15 ) ) ) : ( 0 seq:1 ref:expr 15-16 | ( 0 rule:expr choice 15-16 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @15 | < Sequence failed at entry 0 :: rule:funcCall seqnc @15 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @15 | < Rule `ident` didn't match :: rule:varExpr ref:ident @15 | < Sequence failed at entry 0 :: rule:ident seqnc @15 | < Rule `alpha` didn't match :: seq:0 ref:alpha @15 | < None of choices matched input :: rule:alpha choice @15 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @15 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @15 > : < Expected '_', but found '1' :: ch:2 text @15 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @15 | < Sequence failed at entry 0 :: rule:lambda seqnc @15 | < Expected '(', but found '1' :: seq:0 text @15 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @15 | < Rule `ident` didn't match :: rule:varExpr ref:ident @15 | < Sequence failed at entry 0 :: rule:ident seqnc @15 | < Rule `alpha` didn't match :: seq:0 ref:alpha @15 | < None of choices matched input :: rule:alpha choice @15 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @15 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @15 > : < Expected '_', but found '1' :: ch:2 text @15 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @15 | < Sequence failed at entry 0 :: rule:stringLit seqnc @15 | < Expected '"', but found '1' :: seq:0 text @15 > > > : ( 0 ch:4 ref:intLit 15-16 | ( 0 rule:intLit seqnc 15-16 | ( 0 seq:0 ref:num 15-16 | ( 0 rule:num char-range 15-16 ) ) : ( 0 seq:1 repsep 16-16 | < Rule `num` didn't match :: rep ref:num @16 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @16 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 16-20 | ( 0 rule:commaWS seqnc 16-20 | ( 0 seq:0 text 16-17 ) : ( 0 seq:1 ref:ws 17-20 | ( 0 rule:ws repsep 17-20 | ( 0 rep choice 17-18 | < Expected ' ', but found '
' :: ch:0 text @17 > : ( 0 ch:1 text 17-18 ) ) : ( 0 sep text 18-18 ) : ( 0 rep choice 18-19 | ( 0 ch:0 text 18-19 ) ) : ( 0 sep text 19-19 ) : ( 0 rep choice 19-20 | ( 0 ch:0 text 19-20 ) ) : ( 0 sep text 20-20 ) : < None of choices matched input :: rep choice @20 | < Expected ' ', but found 'c' :: ch:0 text @20 > : < Expected '
', but found 'c' :: ch:1 text @20 > > ) ) ) ) : ( 0 rep ref:funcArg 20-173 | ( 0 rule:funcArg seqnc 20-173 | ( 0 seq:0 choice 20-29 | ( 0 ch:0 seqnc 20-29 | ( 0 seq:0 ref:ident 20-28 | ( 0 rule:ident seqnc 20-28 | ( 0 seq:0 ref:alpha 20-21 | ( 0 rule:alpha choice 20-21 | ( 0 ch:0 char-range 20-21 ) ) ) : ( 0 seq:1 repsep 21-28 | ( 0 rep choice 21-22 | ( 0 ch:0 ref:alphaNum 21-22 | ( 0 rule:alphaNum choice 21-22 | ( 0 ch:0 ref:alpha 21-22 | ( 0 rule:alpha choice 21-22 | ( 0 ch:0 char-range 21-22 ) ) ) ) ) ) : ( 0 sep text 22-22 ) : ( 0 rep choice 22-23 | ( 0 ch:0 ref:alphaNum 22-23 | ( 0 rule:alphaNum choice 22-23 | ( 0 ch:0 ref:alpha 22-23 | ( 0 rule:alpha choice 22-23 | ( 0 ch:0 char-range 22-23 ) ) ) ) ) ) : ( 0 sep text 23-23 ) : ( 0 rep choice 23-24 | ( 0 ch:0 ref:alphaNum 23-24 | ( 0 rule:alphaNum choice 23-24 | ( 0 ch:0 ref:alpha 23-24 | ( 0 rule:alpha choice 23-24 | ( 0 ch:0 char-range 23-24 ) ) ) ) ) ) : ( 0 sep text 24-24 ) : ( 0 rep choice 24-25 | ( 0 ch:0 ref:alphaNum 24-25 | ( 0 rule:alphaNum choice 24-25 | ( 0 ch:0 ref:alpha 24-25 | ( 0 rule:alpha choice 24-25 | ( 0 ch:0 char-range 24-25 ) ) ) ) ) ) : ( 0 sep text 25-25 ) : ( 0 rep choice 25-26 | ( 0 ch:0 ref:alphaNum 25-26 | ( 0 rule:alphaNum choice 25-26 | ( 0 ch:0 ref:alpha 25-26 | ( 0 rule:alpha choice 25-26 | ( 0 ch:0 char-range 25-26 ) ) ) ) ) ) : ( 0 sep text 26-26 ) : ( 0 rep choice 26-27 | ( 0 ch:0 ref:alphaNum 26-27 | ( 0 rule:alphaNum choice 26-27 | ( 0 ch:0 ref:alpha 26-27 | ( 0 rule:alpha choice 26-27 | ( 0 ch:0 char-range 26-27 ) ) ) ) ) ) : ( 0 sep text 27-27 ) : ( 0 rep choice 27-28 | ( 0 ch:0 ref:alphaNum 27-28 | ( 0 rule:alphaNum choice 27-28 | ( 0 ch:0 ref:alpha 27-28 | ( 0 rule:alpha choice 27-28 | ( 0 ch:0 char-range 27-28 ) ) ) ) ) ) : ( 0 sep text 28-28 ) : < None of choices matched input :: rep choice @28 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @28 | < None of choices matched input :: rule:alphaNum choice @28 | < Rule `alpha` didn't match :: ch:0 ref:alpha @28 | < None of choices matched input :: rule:alpha choice @28 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @28 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @28 > : < Expected '_', but found ':' :: ch:2 text @28 > > > : < Rule `num` didn't match :: ch:1 ref:num @28 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @28 > > > > : < Expected '.', but found ':' :: ch:1 text @28 > > ) ) ) : ( 0 seq:1 text 28-29 ) ) ) : ( 0 seq:1 ref:expr 29-173 | ( 0 rule:expr choice 29-173 | ( 0 ch:0 ref:funcCall 29-173 | ( 0 rule:funcCall seqnc 29-173 | ( 0 seq:0 ref:varExpr 29-32 | ( 0 rule:varExpr ref:ident 29-32 | ( 0 rule:ident seqnc 29-32 | ( 0 seq:0 ref:alpha 29-30 | ( 0 rule:alpha choice 29-30 | ( 0 ch:0 char-range 29-30 ) ) ) : ( 0 seq:1 repsep 30-32 | ( 0 rep choice 30-31 | ( 0 ch:0 ref:alphaNum 30-31 | ( 0 rule:alphaNum choice 30-31 | ( 0 ch:0 ref:alpha 30-31 | ( 0 rule:alpha choice 30-31 | ( 0 ch:0 char-range 30-31 ) ) ) ) ) ) : ( 0 sep text 31-31 ) : ( 0 rep choice 31-32 | ( 0 ch:0 ref:alphaNum 31-32 | ( 0 rule:alphaNum choice 31-32 | ( 0 ch:0 ref:alpha 31-32 | ( 0 rule:alpha choice 31-32 | ( 0 ch:0 char-range 31-32 ) ) ) ) ) ) : ( 0 sep text 32-32 ) : < None of choices matched input :: rep choice @32 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @32 | < None of choices matched input :: rule:alphaNum choice @32 | < Rule `alpha` didn't match :: ch:0 ref:alpha @32 | < None of choices matched input :: rule:alpha choice @32 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @32 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @32 > : < Expected '_', but found '(' :: ch:2 text @32 > > > : < Rule `num` didn't match :: ch:1 ref:num @32 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @32 > > > > : < Expected '.', but found '(' :: ch:1 text @32 > > ) ) ) ) : ( 0 seq:1 ref:funcArgs 32-173 | ( 0 rule:funcArgs seqnc 32-173 | ( 0 seq:0 text 32-33 ) : ( 0 seq:1 ref:ws 33-38 | ( 0 rule:ws repsep 33-38 | ( 0 rep choice 33-34 | < Expected ' ', but found '
' :: ch:0 text @33 > : ( 0 ch:1 text 33-34 ) ) : ( 0 sep text 34-34 ) : ( 0 rep choice 34-35 | ( 0 ch:0 text 34-35 ) ) : ( 0 sep text 35-35 ) : ( 0 rep choice 35-36 | ( 0 ch:0 text 35-36 ) ) : ( 0 sep text 36-36 ) : ( 0 rep choice 36-37 | ( 0 ch:0 text 36-37 ) ) : ( 0 sep text 37-37 ) : ( 0 rep choice 37-38 | ( 0 ch:0 text 37-38 ) ) : ( 0 sep text 38-38 ) : < None of choices matched input :: rep choice @38 | < Expected ' ', but found 'p' :: ch:0 text @38 > : < Expected '
', but found 'p' :: ch:1 text @38 > > ) ) : ( 0 seq:2 repsep 38-169 | ( 0 rep ref:funcArg 38-77 | ( 0 rule:funcArg seqnc 38-77 | ( 0 seq:0 choice 38-38 | < Sequence failed at entry 1 :: ch:0 seqnc @41 | ( 0 seq:0 ref:ident 38-41 | ( 0 rule:ident seqnc 38-41 | ( 0 seq:0 ref:alpha 38-39 | ( 0 rule:alpha choice 38-39 | ( 0 ch:0 char-range 38-39 ) ) ) : ( 0 seq:1 repsep 39-41 | ( 0 rep choice 39-40 | ( 0 ch:0 ref:alphaNum 39-40 | ( 0 rule:alphaNum choice 39-40 | ( 0 ch:0 ref:alpha 39-40 | ( 0 rule:alpha choice 39-40 | ( 0 ch:0 char-range 39-40 ) ) ) ) ) ) : ( 0 sep text 40-40 ) : ( 0 rep choice 40-41 | ( 0 ch:0 ref:alphaNum 40-41 | ( 0 rule:alphaNum choice 40-41 | ( 0 ch:0 ref:alpha 40-41 | ( 0 rule:alpha choice 40-41 | ( 0 ch:0 char-range 40-41 ) ) ) ) ) ) : ( 0 sep text 41-41 ) : < None of choices matched input :: rep choice @41 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @41 | < None of choices matched input :: rule:alphaNum choice @41 | < Rule `alpha` didn't match :: ch:0 ref:alpha @41 | < None of choices matched input :: rule:alpha choice @41 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @41 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @41 > : < Expected '_', but found '(' :: ch:2 text @41 > > > : < Rule `num` didn't match :: ch:1 ref:num @41 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @41 > > > > : < Expected '.', but found '(' :: ch:1 text @41 > > ) ) ) : < Expected ':', but found '(' :: seq:1 text @41 > > : ( 0 ch:1 text 38-38 ) ) : ( 0 seq:1 ref:expr 38-77 | ( 0 rule:expr choice 38-77 | ( 0 ch:0 ref:funcCall 38-77 | ( 0 rule:funcCall seqnc 38-77 | ( 0 seq:0 ref:varExpr 38-41 | ( 0 rule:varExpr ref:ident 38-41 | ( 0 rule:ident seqnc 38-41 | ( 0 seq:0 ref:alpha 38-39 | ( 0 rule:alpha choice 38-39 | ( 0 ch:0 char-range 38-39 ) ) ) : ( 0 seq:1 repsep 39-41 | ( 0 rep choice 39-40 | ( 0 ch:0 ref:alphaNum 39-40 | ( 0 rule:alphaNum choice 39-40 | ( 0 ch:0 ref:alpha 39-40 | ( 0 rule:alpha choice 39-40 | ( 0 ch:0 char-range 39-40 ) ) ) ) ) ) : ( 0 sep text 40-40 ) : ( 0 rep choice 40-41 | ( 0 ch:0 ref:alphaNum 40-41 | ( 0 rule:alphaNum choice 40-41 | ( 0 ch:0 ref:alpha 40-41 | ( 0 rule:alpha choice 40-41 | ( 0 ch:0 char-range 40-41 ) ) ) ) ) ) : ( 0 sep text 41-41 ) : < None of choices matched input :: rep choice @41 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @41 | < None of choices matched input :: rule:alphaNum choice @41 | < Rule `alpha` didn't match :: ch:0 ref:alpha @41 | < None of choices matched input :: rule:alpha choice @41 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @41 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @41 > : < Expected '_', but found '(' :: ch:2 text @41 > > > : < Rule `num` didn't match :: ch:1 ref:num @41 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @41 > > > > : < Expected '.', but found '(' :: ch:1 text @41 > > ) ) ) ) : ( 0 seq:1 ref:funcArgs 41-77 | ( 0 rule:funcArgs seqnc 41-77 | ( 0 seq:0 text 41-42 ) : ( 0 seq:1 ref:ws 42-42 | ( 0 rule:ws repsep 42-42 | < None of choices matched input :: rep choice @42 | < Expected ' ', but found 'f' :: ch:0 text @42 > : < Expected '
', but found 'f' :: ch:1 text @42 > > ) ) : ( 0 seq:2 repsep 42-76 | ( 0 rep ref:funcArg 42-54 | ( 0 rule:funcArg seqnc 42-54 | ( 0 seq:0 choice 42-47 | ( 0 ch:0 seqnc 42-47 | ( 0 seq:0 ref:ident 42-46 | ( 0 rule:ident seqnc 42-46 | ( 0 seq:0 ref:alpha 42-43 | ( 0 rule:alpha choice 42-43 | ( 0 ch:0 char-range 42-43 ) ) ) : ( 0 seq:1 repsep 43-46 | ( 0 rep choice 43-44 | ( 0 ch:0 ref:alphaNum 43-44 | ( 0 rule:alphaNum choice 43-44 | ( 0 ch:0 ref:alpha 43-44 | ( 0 rule:alpha choice 43-44 | ( 0 ch:0 char-range 43-44 ) ) ) ) ) ) : ( 0 sep text 44-44 ) : ( 0 rep choice 44-45 | ( 0 ch:0 ref:alphaNum 44-45 | ( 0 rule:alphaNum choice 44-45 | ( 0 ch:0 ref:alpha 44-45 | ( 0 rule:alpha choice 44-45 | ( 0 ch:0 char-range 44-45 ) ) ) ) ) ) : ( 0 sep text 45-45 ) : ( 0 rep choice 45-46 | ( 0 ch:0 ref:alphaNum 45-46 | ( 0 rule:alphaNum choice 45-46 | ( 0 ch:0 ref:alpha 45-46 | ( 0 rule:alpha choice 45-46 | ( 0 ch:0 char-range 45-46 ) ) ) ) ) ) : ( 0 sep text 46-46 ) : < None of choices matched input :: rep choice @46 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @46 | < None of choices matched input :: rule:alphaNum choice @46 | < Rule `alpha` didn't match :: ch:0 ref:alpha @46 | < None of choices matched input :: rule:alpha choice @46 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @46 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @46 > : < Expected '_', but found ':' :: ch:2 text @46 > > > : < Rule `num` didn't match :: ch:1 ref:num @46 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @46 > > > > : < Expected '.', but found ':' :: ch:1 text @46 > > ) ) ) : ( 0 seq:1 text 46-47 ) ) ) : ( 0 seq:1 ref:expr 47-54 | ( 0 rule:expr choice 47-54 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @47 | < Sequence failed at entry 0 :: rule:funcCall seqnc @47 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @47 | < Rule `ident` didn't match :: rule:varExpr ref:ident @47 | < Sequence failed at entry 0 :: rule:ident seqnc @47 | < Rule `alpha` didn't match :: seq:0 ref:alpha @47 | < None of choices matched input :: rule:alpha choice @47 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @47 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @47 > : < Expected '_', but found '"' :: ch:2 text @47 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @47 | < Sequence failed at entry 0 :: rule:lambda seqnc @47 | < Expected '(', but found '"' :: seq:0 text @47 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @47 | < Rule `ident` didn't match :: rule:varExpr ref:ident @47 | < Sequence failed at entry 0 :: rule:ident seqnc @47 | < Rule `alpha` didn't match :: seq:0 ref:alpha @47 | < None of choices matched input :: rule:alpha choice @47 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @47 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @47 > : < Expected '_', but found '"' :: ch:2 text @47 > > > > > > : ( 0 ch:3 ref:stringLit 47-54 | ( 0 rule:stringLit seqnc 47-54 | ( 0 seq:0 text 47-48 ) : ( 0 seq:1 ref:stringContents 48-53 | ( 0 rule:stringContents repsep 48-53 | ( 0 rep ref:stringChar 48-49 | ( 0 rule:stringChar choice 48-49 | ( 0 ch:0 not-char 48-49 ) ) ) : ( 0 sep text 49-49 ) : ( 0 rep ref:stringChar 49-50 | ( 0 rule:stringChar choice 49-50 | ( 0 ch:0 not-char 49-50 ) ) ) : ( 0 sep text 50-50 ) : ( 0 rep ref:stringChar 50-51 | ( 0 rule:stringChar choice 50-51 | ( 0 ch:0 not-char 50-51 ) ) ) : ( 0 sep text 51-51 ) : ( 0 rep ref:stringChar 51-52 | ( 0 rule:stringChar choice 51-52 | ( 0 ch:0 not-char 51-52 ) ) ) : ( 0 sep text 52-52 ) : ( 0 rep ref:stringChar 52-53 | ( 0 rule:stringChar choice 52-53 | ( 0 ch:0 not-char 52-53 ) ) ) : ( 0 sep text 53-53 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @53 | < None of choices matched input :: rule:stringChar choice @53 | < Expected not to find '"', but found '"' :: ch:0 not-char @53 > : < Sequence failed at entry 0 :: ch:1 seqnc @53 | < Expected '\\', but found '"' :: seq:0 char @53 > > > > ) ) : ( 0 seq:2 text 53-54 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 54-56 | ( 0 rule:commaWS seqnc 54-56 | ( 0 seq:0 text 54-55 ) : ( 0 seq:1 ref:ws 55-56 | ( 0 rule:ws repsep 55-56 | ( 0 rep choice 55-56 | ( 0 ch:0 text 55-56 ) ) : ( 0 sep text 56-56 ) : < None of choices matched input :: rep choice @56 | < Expected ' ', but found 't' :: ch:0 text @56 > : < Expected '
', but found 't' :: ch:1 text @56 > > ) ) ) ) : ( 0 rep ref:funcArg 56-64 | ( 0 rule:funcArg seqnc 56-64 | ( 0 seq:0 choice 56-59 | ( 0 ch:0 seqnc 56-59 | ( 0 seq:0 ref:ident 56-58 | ( 0 rule:ident seqnc 56-58 | ( 0 seq:0 ref:alpha 56-57 | ( 0 rule:alpha choice 56-57 | ( 0 ch:0 char-range 56-57 ) ) ) : ( 0 seq:1 repsep 57-58 | ( 0 rep choice 57-58 | ( 0 ch:0 ref:alphaNum 57-58 | ( 0 rule:alphaNum choice 57-58 | ( 0 ch:0 ref:alpha 57-58 | ( 0 rule:alpha choice 57-58 | ( 0 ch:0 char-range 57-58 ) ) ) ) ) ) : ( 0 sep text 58-58 ) : < None of choices matched input :: rep choice @58 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @58 | < None of choices matched input :: rule:alphaNum choice @58 | < Rule `alpha` didn't match :: ch:0 ref:alpha @58 | < None of choices matched input :: rule:alpha choice @58 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @58 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @58 > : < Expected '_', but found ':' :: ch:2 text @58 > > > : < Rule `num` didn't match :: ch:1 ref:num @58 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @58 > > > > : < Expected '.', but found ':' :: ch:1 text @58 > > ) ) ) : ( 0 seq:1 text 58-59 ) ) ) : ( 0 seq:1 ref:expr 59-64 | ( 0 rule:expr choice 59-64 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @59 | < Sequence failed at entry 0 :: rule:funcCall seqnc @59 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @59 | < Rule `ident` didn't match :: rule:varExpr ref:ident @59 | < Sequence failed at entry 0 :: rule:ident seqnc @59 | < Rule `alpha` didn't match :: seq:0 ref:alpha @59 | < None of choices matched input :: rule:alpha choice @59 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @59 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @59 > : < Expected '_', but found '"' :: ch:2 text @59 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @59 | < Sequence failed at entry 0 :: rule:lambda seqnc @59 | < Expected '(', but found '"' :: seq:0 text @59 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @59 | < Rule `ident` didn't match :: rule:varExpr ref:ident @59 | < Sequence failed at entry 0 :: rule:ident seqnc @59 | < Rule `alpha` didn't match :: seq:0 ref:alpha @59 | < None of choices matched input :: rule:alpha choice @59 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @59 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @59 > : < Expected '_', but found '"' :: ch:2 text @59 > > > > > > : ( 0 ch:3 ref:stringLit 59-64 | ( 0 rule:stringLit seqnc 59-64 | ( 0 seq:0 text 59-60 ) : ( 0 seq:1 ref:stringContents 60-63 | ( 0 rule:stringContents repsep 60-63 | ( 0 rep ref:stringChar 60-61 | ( 0 rule:stringChar choice 60-61 | ( 0 ch:0 not-char 60-61 ) ) ) : ( 0 sep text 61-61 ) : ( 0 rep ref:stringChar 61-62 | ( 0 rule:stringChar choice 61-62 | ( 0 ch:0 not-char 61-62 ) ) ) : ( 0 sep text 62-62 ) : ( 0 rep ref:stringChar 62-63 | ( 0 rule:stringChar choice 62-63 | ( 0 ch:0 not-char 62-63 ) ) ) : ( 0 sep text 63-63 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @63 | < None of choices matched input :: rule:stringChar choice @63 | < Expected not to find '"', but found '"' :: ch:0 not-char @63 > : < Sequence failed at entry 0 :: ch:1 seqnc @63 | < Expected '\\', but found '"' :: seq:0 char @63 > > > > ) ) : ( 0 seq:2 text 63-64 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 64-66 | ( 0 rule:commaWS seqnc 64-66 | ( 0 seq:0 text 64-65 ) : ( 0 seq:1 ref:ws 65-66 | ( 0 rule:ws repsep 65-66 | ( 0 rep choice 65-66 | ( 0 ch:0 text 65-66 ) ) : ( 0 sep text 66-66 ) : < None of choices matched input :: rep choice @66 | < Expected ' ', but found 'a' :: ch:0 text @66 > : < Expected '
', but found 'a' :: ch:1 text @66 > > ) ) ) ) : ( 0 rep ref:funcArg 66-76 | ( 0 rule:funcArg seqnc 66-76 | ( 0 seq:0 choice 66-73 | ( 0 ch:0 seqnc 66-73 | ( 0 seq:0 ref:ident 66-72 | ( 0 rule:ident seqnc 66-72 | ( 0 seq:0 ref:alpha 66-67 | ( 0 rule:alpha choice 66-67 | ( 0 ch:0 char-range 66-67 ) ) ) : ( 0 seq:1 repsep 67-72 | ( 0 rep choice 67-68 | ( 0 ch:0 ref:alphaNum 67-68 | ( 0 rule:alphaNum choice 67-68 | ( 0 ch:0 ref:alpha 67-68 | ( 0 rule:alpha choice 67-68 | ( 0 ch:0 char-range 67-68 ) ) ) ) ) ) : ( 0 sep text 68-68 ) : ( 0 rep choice 68-69 | ( 0 ch:0 ref:alphaNum 68-69 | ( 0 rule:alphaNum choice 68-69 | ( 0 ch:0 ref:alpha 68-69 | ( 0 rule:alpha choice 68-69 | ( 0 ch:0 char-range 68-69 ) ) ) ) ) ) : ( 0 sep text 69-69 ) : ( 0 rep choice 69-70 | ( 0 ch:0 ref:alphaNum 69-70 | ( 0 rule:alphaNum choice 69-70 | ( 0 ch:0 ref:alpha 69-70 | ( 0 rule:alpha choice 69-70 | ( 0 ch:0 char-range 69-70 ) ) ) ) ) ) : ( 0 sep text 70-70 ) : ( 0 rep choice 70-71 | ( 0 ch:0 ref:alphaNum 70-71 | ( 0 rule:alphaNum choice 70-71 | ( 0 ch:0 ref:alpha 70-71 | ( 0 rule:alpha choice 70-71 | ( 0 ch:0 char-range 70-71 ) ) ) ) ) ) : ( 0 sep text 71-71 ) : ( 0 rep choice 71-72 | ( 0 ch:0 ref:alphaNum 71-72 | ( 0 rule:alphaNum choice 71-72 | ( 0 ch:0 ref:alpha 71-72 | ( 0 rule:alpha choice 71-72 | ( 0 ch:0 char-range 71-72 ) ) ) ) ) ) : ( 0 sep text 72-72 ) : < None of choices matched input :: rep choice @72 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @72 | < None of choices matched input :: rule:alphaNum choice @72 | < Rule `alpha` didn't match :: ch:0 ref:alpha @72 | < None of choices matched input :: rule:alpha choice @72 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @72 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @72 > : < Expected '_', but found ':' :: ch:2 text @72 > > > : < Rule `num` didn't match :: ch:1 ref:num @72 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @72 > > > > : < Expected '.', but found ':' :: ch:1 text @72 > > ) ) ) : ( 0 seq:1 text 72-73 ) ) ) : ( 0 seq:1 ref:expr 73-76 | ( 0 rule:expr choice 73-76 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @73 | < Sequence failed at entry 0 :: rule:funcCall seqnc @73 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @73 | < Rule `ident` didn't match :: rule:varExpr ref:ident @73 | < Sequence failed at entry 0 :: rule:ident seqnc @73 | < Rule `alpha` didn't match :: seq:0 ref:alpha @73 | < None of choices matched input :: rule:alpha choice @73 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @73 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @73 > : < Expected '_', but found '1' :: ch:2 text @73 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @73 | < Sequence failed at entry 0 :: rule:lambda seqnc @73 | < Expected '(', but found '1' :: seq:0 text @73 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @73 | < Rule `ident` didn't match :: rule:varExpr ref:ident @73 | < Sequence failed at entry 0 :: rule:ident seqnc @73 | < Rule `alpha` didn't match :: seq:0 ref:alpha @73 | < None of choices matched input :: rule:alpha choice @73 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @73 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @73 > : < Expected '_', but found '1' :: ch:2 text @73 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @73 | < Sequence failed at entry 0 :: rule:stringLit seqnc @73 | < Expected '"', but found '1' :: seq:0 text @73 > > > : ( 0 ch:4 ref:intLit 73-76 | ( 0 rule:intLit seqnc 73-76 | ( 0 seq:0 ref:num 73-74 | ( 0 rule:num char-range 73-74 ) ) : ( 0 seq:1 repsep 74-76 | ( 0 rep ref:num 74-75 | ( 0 rule:num char-range 74-75 ) ) : ( 0 sep text 75-75 ) : ( 0 rep ref:num 75-76 | ( 0 rule:num char-range 75-76 ) ) : ( 0 sep text 76-76 ) : < Rule `num` didn't match :: rep ref:num @76 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @76 > > ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @76 | < Sequence failed at entry 0 :: rule:commaWS seqnc @76 | < Expected ',', but found ')' :: seq:0 text @76 > > > ) : ( 0 seq:3 ref:ws 76-76 | ( 0 rule:ws repsep 76-76 | < None of choices matched input :: rep choice @76 | < Expected ' ', but found ')' :: ch:0 text @76 > : < Expected '
', but found ')' :: ch:1 text @76 > > ) ) : ( 0 seq:4 text 76-77 ) ) ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 77-83 | ( 0 rule:commaWS seqnc 77-83 | ( 0 seq:0 text 77-78 ) : ( 0 seq:1 ref:ws 78-83 | ( 0 rule:ws repsep 78-83 | ( 0 rep choice 78-79 | < Expected ' ', but found '
' :: ch:0 text @78 > : ( 0 ch:1 text 78-79 ) ) : ( 0 sep text 79-79 ) : ( 0 rep choice 79-80 | ( 0 ch:0 text 79-80 ) ) : ( 0 sep text 80-80 ) : ( 0 rep choice 80-81 | ( 0 ch:0 text 80-81 ) ) : ( 0 sep text 81-81 ) : ( 0 rep choice 81-82 | ( 0 ch:0 text 81-82 ) ) : ( 0 sep text 82-82 ) : ( 0 rep choice 82-83 | ( 0 ch:0 text 82-83 ) ) : ( 0 sep text 83-83 ) : < None of choices matched input :: rep choice @83 | < Expected ' ', but found 'd' :: ch:0 text @83 > : < Expected '
', but found 'd' :: ch:1 text @83 > > ) ) ) ) : ( 0 rep ref:funcArg 83-169 | ( 0 rule:funcArg seqnc 83-169 | ( 0 seq:0 choice 83-83 | < Sequence failed at entry 1 :: ch:0 seqnc @88 | ( 0 seq:0 ref:ident 83-88 | ( 0 rule:ident seqnc 83-88 | ( 0 seq:0 ref:alpha 83-84 | ( 0 rule:alpha choice 83-84 | ( 0 ch:0 char-range 83-84 ) ) ) : ( 0 seq:1 repsep 84-88 | ( 0 rep choice 84-85 | ( 0 ch:0 ref:alphaNum 84-85 | ( 0 rule:alphaNum choice 84-85 | ( 0 ch:0 ref:alpha 84-85 | ( 0 rule:alpha choice 84-85 | ( 0 ch:0 char-range 84-85 ) ) ) ) ) ) : ( 0 sep text 85-85 ) : ( 0 rep choice 85-86 | ( 0 ch:0 ref:alphaNum 85-86 | ( 0 rule:alphaNum choice 85-86 | ( 0 ch:0 ref:alpha 85-86 | ( 0 rule:alpha choice 85-86 | ( 0 ch:0 char-range 85-86 ) ) ) ) ) ) : ( 0 sep text 86-86 ) : ( 0 rep choice 86-87 | ( 0 ch:0 ref:alphaNum 86-87 | ( 0 rule:alphaNum choice 86-87 | ( 0 ch:0 ref:alpha 86-87 | ( 0 rule:alpha choice 86-87 | ( 0 ch:0 char-range 86-87 ) ) ) ) ) ) : ( 0 sep text 87-87 ) : ( 0 rep choice 87-88 | ( 0 ch:0 ref:alphaNum 87-88 | ( 0 rule:alphaNum choice 87-88 | ( 0 ch:0 ref:alpha 87-88 | ( 0 rule:alpha choice 87-88 | ( 0 ch:0 char-range 87-88 ) ) ) ) ) ) : ( 0 sep text 88-88 ) : < None of choices matched input :: rep choice @88 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @88 | < None of choices matched input :: rule:alphaNum choice @88 | < Rule `alpha` didn't match :: ch:0 ref:alpha @88 | < None of choices matched input :: rule:alpha choice @88 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @88 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @88 > : < Expected '_', but found '(' :: ch:2 text @88 > > > : < Rule `num` didn't match :: ch:1 ref:num @88 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @88 > > > > : < Expected '.', but found '(' :: ch:1 text @88 > > ) ) ) : < Expected ':', but found '(' :: seq:1 text @88 > > : ( 0 ch:1 text 83-83 ) ) : ( 0 seq:1 ref:expr 83-169 | ( 0 rule:expr choice 83-169 | ( 0 ch:0 ref:funcCall 83-169 | ( 0 rule:funcCall seqnc 83-169 | ( 0 seq:0 ref:varExpr 83-88 | ( 0 rule:varExpr ref:ident 83-88 | ( 0 rule:ident seqnc 83-88 | ( 0 seq:0 ref:alpha 83-84 | ( 0 rule:alpha choice 83-84 | ( 0 ch:0 char-range 83-84 ) ) ) : ( 0 seq:1 repsep 84-88 | ( 0 rep choice 84-85 | ( 0 ch:0 ref:alphaNum 84-85 | ( 0 rule:alphaNum choice 84-85 | ( 0 ch:0 ref:alpha 84-85 | ( 0 rule:alpha choice 84-85 | ( 0 ch:0 char-range 84-85 ) ) ) ) ) ) : ( 0 sep text 85-85 ) : ( 0 rep choice 85-86 | ( 0 ch:0 ref:alphaNum 85-86 | ( 0 rule:alphaNum choice 85-86 | ( 0 ch:0 ref:alpha 85-86 | ( 0 rule:alpha choice 85-86 | ( 0 ch:0 char-range 85-86 ) ) ) ) ) ) : ( 0 sep text 86-86 ) : ( 0 rep choice 86-87 | ( 0 ch:0 ref:alphaNum 86-87 | ( 0 rule:alphaNum choice 86-87 | ( 0 ch:0 ref:alpha 86-87 | ( 0 rule:alpha choice 86-87 | ( 0 ch:0 char-range 86-87 ) ) ) ) ) ) : ( 0 sep text 87-87 ) : ( 0 rep choice 87-88 | ( 0 ch:0 ref:alphaNum 87-88 | ( 0 rule:alphaNum choice 87-88 | ( 0 ch:0 ref:alpha 87-88 | ( 0 rule:alpha choice 87-88 | ( 0 ch:0 char-range 87-88 ) ) ) ) ) ) : ( 0 sep text 88-88 ) : < None of choices matched input :: rep choice @88 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @88 | < None of choices matched input :: rule:alphaNum choice @88 | < Rule `alpha` didn't match :: ch:0 ref:alpha @88 | < None of choices matched input :: rule:alpha choice @88 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @88 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @88 > : < Expected '_', but found '(' :: ch:2 text @88 > > > : < Rule `num` didn't match :: ch:1 ref:num @88 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @88 > > > > : < Expected '.', but found '(' :: ch:1 text @88 > > ) ) ) ) : ( 0 seq:1 ref:funcArgs 88-169 | ( 0 rule:funcArgs seqnc 88-169 | ( 0 seq:0 text 88-89 ) : ( 0 seq:1 ref:ws 89-96 | ( 0 rule:ws repsep 89-96 | ( 0 rep choice 89-90 | < Expected ' ', but found '
' :: ch:0 text @89 > : ( 0 ch:1 text 89-90 ) ) : ( 0 sep text 90-90 ) : ( 0 rep choice 90-91 | ( 0 ch:0 text 90-91 ) ) : ( 0 sep text 91-91 ) : ( 0 rep choice 91-92 | ( 0 ch:0 text 91-92 ) ) : ( 0 sep text 92-92 ) : ( 0 rep choice 92-93 | ( 0 ch:0 text 92-93 ) ) : ( 0 sep text 93-93 ) : ( 0 rep choice 93-94 | ( 0 ch:0 text 93-94 ) ) : ( 0 sep text 94-94 ) : ( 0 rep choice 94-95 | ( 0 ch:0 text 94-95 ) ) : ( 0 sep text 95-95 ) : ( 0 rep choice 95-96 | ( 0 ch:0 text 95-96 ) ) : ( 0 sep text 96-96 ) : < None of choices matched input :: rep choice @96 | < Expected ' ', but found 'd' :: ch:0 text @96 > : < Expected '
', but found 'd' :: ch:1 text @96 > > ) ) : ( 0 seq:2 repsep 96-163 | ( 0 rep ref:funcArg 96-107 | ( 0 rule:funcArg seqnc 96-107 | ( 0 seq:0 choice 96-105 | ( 0 ch:0 seqnc 96-105 | ( 0 seq:0 ref:ident 96-104 | ( 0 rule:ident seqnc 96-104 | ( 0 seq:0 ref:alpha 96-97 | ( 0 rule:alpha choice 96-97 | ( 0 ch:0 char-range 96-97 ) ) ) : ( 0 seq:1 repsep 97-104 | ( 0 rep choice 97-98 | ( 0 ch:0 ref:alphaNum 97-98 | ( 0 rule:alphaNum choice 97-98 | ( 0 ch:0 ref:alpha 97-98 | ( 0 rule:alpha choice 97-98 | ( 0 ch:0 char-range 97-98 ) ) ) ) ) ) : ( 0 sep text 98-98 ) : ( 0 rep choice 98-99 | ( 0 ch:0 ref:alphaNum 98-99 | ( 0 rule:alphaNum choice 98-99 | ( 0 ch:0 ref:alpha 98-99 | ( 0 rule:alpha choice 98-99 | ( 0 ch:0 char-range 98-99 ) ) ) ) ) ) : ( 0 sep text 99-99 ) : ( 0 rep choice 99-100 | ( 0 ch:0 ref:alphaNum 99-100 | ( 0 rule:alphaNum choice 99-100 | ( 0 ch:0 ref:alpha 99-100 | ( 0 rule:alpha choice 99-100 | ( 0 ch:0 char-range 99-100 ) ) ) ) ) ) : ( 0 sep text 100-100 ) : ( 0 rep choice 100-101 | ( 0 ch:0 ref:alphaNum 100-101 | ( 0 rule:alphaNum choice 100-101 | ( 0 ch:0 ref:alpha 100-101 | ( 0 rule:alpha choice 100-101 | ( 0 ch:0 char-range 100-101 ) ) ) ) ) ) : ( 0 sep text 101-101 ) : ( 0 rep choice 101-102 | ( 0 ch:0 ref:alphaNum 101-102 | ( 0 rule:alphaNum choice 101-102 | ( 0 ch:0 ref:alpha 101-102 | ( 0 rule:alpha choice 101-102 | ( 0 ch:0 char-range 101-102 ) ) ) ) ) ) : ( 0 sep text 102-102 ) : ( 0 rep choice 102-103 | ( 0 ch:0 ref:alphaNum 102-103 | ( 0 rule:alphaNum choice 102-103 | ( 0 ch:0 ref:alpha 102-103 | ( 0 rule:alpha choice 102-103 | ( 0 ch:0 char-range 102-103 ) ) ) ) ) ) : ( 0 sep text 103-103 ) : ( 0 rep choice 103-104 | ( 0 ch:0 ref:alphaNum 103-104 | ( 0 rule:alphaNum choice 103-104 | ( 0 ch:0 ref:alpha 103-104 | ( 0 rule:alpha choice 103-104 | ( 0 ch:0 char-range 103-104 ) ) ) ) ) ) : ( 0 sep text 104-104 ) : < None of choices matched input :: rep choice @104 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @104 | < None of choices matched input :: rule:alphaNum choice @104 | < Rule `alpha` didn't match :: ch:0 ref:alpha @104 | < None of choices matched input :: rule:alpha choice @104 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @104 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @104 > : < Expected '_', but found ':' :: ch:2 text @104 > > > : < Rule `num` didn't match :: ch:1 ref:num @104 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @104 > > > > : < Expected '.', but found ':' :: ch:1 text @104 > > ) ) ) : ( 0 seq:1 text 104-105 ) ) ) : ( 0 seq:1 ref:expr 105-107 | ( 0 rule:expr choice 105-107 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @105 | < Sequence failed at entry 0 :: rule:funcCall seqnc @105 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @105 | < Rule `ident` didn't match :: rule:varExpr ref:ident @105 | < Sequence failed at entry 0 :: rule:ident seqnc @105 | < Rule `alpha` didn't match :: seq:0 ref:alpha @105 | < None of choices matched input :: rule:alpha choice @105 | < Expected character in range from 'a' to 'z', but found '3' :: ch:0 char-range @105 > : < Expected character in range from 'A' to 'Z', but found '3' :: ch:1 char-range @105 > : < Expected '_', but found '3' :: ch:2 text @105 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @105 | < Sequence failed at entry 0 :: rule:lambda seqnc @105 | < Expected '(', but found '3' :: seq:0 text @105 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @105 | < Rule `ident` didn't match :: rule:varExpr ref:ident @105 | < Sequence failed at entry 0 :: rule:ident seqnc @105 | < Rule `alpha` didn't match :: seq:0 ref:alpha @105 | < None of choices matched input :: rule:alpha choice @105 | < Expected character in range from 'a' to 'z', but found '3' :: ch:0 char-range @105 > : < Expected character in range from 'A' to 'Z', but found '3' :: ch:1 char-range @105 > : < Expected '_', but found '3' :: ch:2 text @105 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @105 | < Sequence failed at entry 0 :: rule:stringLit seqnc @105 | < Expected '"', but found '3' :: seq:0 text @105 > > > : ( 0 ch:4 ref:intLit 105-107 | ( 0 rule:intLit seqnc 105-107 | ( 0 seq:0 ref:num 105-106 | ( 0 rule:num char-range 105-106 ) ) : ( 0 seq:1 repsep 106-107 | ( 0 rep ref:num 106-107 | ( 0 rule:num char-range 106-107 ) ) : ( 0 sep text 107-107 ) : < Rule `num` didn't match :: rep ref:num @107 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @107 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 107-115 | ( 0 rule:commaWS seqnc 107-115 | ( 0 seq:0 text 107-108 ) : ( 0 seq:1 ref:ws 108-115 | ( 0 rule:ws repsep 108-115 | ( 0 rep choice 108-109 | < Expected ' ', but found '
' :: ch:0 text @108 > : ( 0 ch:1 text 108-109 ) ) : ( 0 sep text 109-109 ) : ( 0 rep choice 109-110 | ( 0 ch:0 text 109-110 ) ) : ( 0 sep text 110-110 ) : ( 0 rep choice 110-111 | ( 0 ch:0 text 110-111 ) ) : ( 0 sep text 111-111 ) : ( 0 rep choice 111-112 | ( 0 ch:0 text 111-112 ) ) : ( 0 sep text 112-112 ) : ( 0 rep choice 112-113 | ( 0 ch:0 text 112-113 ) ) : ( 0 sep text 113-113 ) : ( 0 rep choice 113-114 | ( 0 ch:0 text 113-114 ) ) : ( 0 sep text 114-114 ) : ( 0 rep choice 114-115 | ( 0 ch:0 text 114-115 ) ) : ( 0 sep text 115-115 ) : < None of choices matched input :: rep choice @115 | < Expected ' ', but found 'c' :: ch:0 text @115 > : < Expected '
', but found 'c' :: ch:1 text @115 > > ) ) ) ) : ( 0 rep ref:funcArg 115-163 | ( 0 rule:funcArg seqnc 115-163 | ( 0 seq:0 choice 115-124 | ( 0 ch:0 seqnc 115-124 | ( 0 seq:0 ref:ident 115-123 | ( 0 rule:ident seqnc 115-123 | ( 0 seq:0 ref:alpha 115-116 | ( 0 rule:alpha choice 115-116 | ( 0 ch:0 char-range 115-116 ) ) ) : ( 0 seq:1 repsep 116-123 | ( 0 rep choice 116-117 | ( 0 ch:0 ref:alphaNum 116-117 | ( 0 rule:alphaNum choice 116-117 | ( 0 ch:0 ref:alpha 116-117 | ( 0 rule:alpha choice 116-117 | ( 0 ch:0 char-range 116-117 ) ) ) ) ) ) : ( 0 sep text 117-117 ) : ( 0 rep choice 117-118 | ( 0 ch:0 ref:alphaNum 117-118 | ( 0 rule:alphaNum choice 117-118 | ( 0 ch:0 ref:alpha 117-118 | ( 0 rule:alpha choice 117-118 | ( 0 ch:0 char-range 117-118 ) ) ) ) ) ) : ( 0 sep text 118-118 ) : ( 0 rep choice 118-119 | ( 0 ch:0 ref:alphaNum 118-119 | ( 0 rule:alphaNum choice 118-119 | ( 0 ch:0 ref:alpha 118-119 | ( 0 rule:alpha choice 118-119 | ( 0 ch:0 char-range 118-119 ) ) ) ) ) ) : ( 0 sep text 119-119 ) : ( 0 rep choice 119-120 | ( 0 ch:0 ref:alphaNum 119-120 | ( 0 rule:alphaNum choice 119-120 | ( 0 ch:0 ref:alpha 119-120 | ( 0 rule:alpha choice 119-120 | ( 0 ch:0 char-range 119-120 ) ) ) ) ) ) : ( 0 sep text 120-120 ) : ( 0 rep choice 120-121 | ( 0 ch:0 ref:alphaNum 120-121 | ( 0 rule:alphaNum choice 120-121 | ( 0 ch:0 ref:alpha 120-121 | ( 0 rule:alpha choice 120-121 | ( 0 ch:0 char-range 120-121 ) ) ) ) ) ) : ( 0 sep text 121-121 ) : ( 0 rep choice 121-122 | ( 0 ch:0 ref:alphaNum 121-122 | ( 0 rule:alphaNum choice 121-122 | ( 0 ch:0 ref:alpha 121-122 | ( 0 rule:alpha choice 121-122 | ( 0 ch:0 char-range 121-122 ) ) ) ) ) ) : ( 0 sep text 122-122 ) : ( 0 rep choice 122-123 | ( 0 ch:0 ref:alphaNum 122-123 | ( 0 rule:alphaNum choice 122-123 | ( 0 ch:0 ref:alpha 122-123 | ( 0 rule:alpha choice 122-123 | ( 0 ch:0 char-range 122-123 ) ) ) ) ) ) : ( 0 sep text 123-123 ) : < None of choices matched input :: rep choice @123 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @123 | < None of choices matched input :: rule:alphaNum choice @123 | < Rule `alpha` didn't match :: ch:0 ref:alpha @123 | < None of choices matched input :: rule:alpha choice @123 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @123 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @123 > : < Expected '_', but found ':' :: ch:2 text @123 > > > : < Rule `num` didn't match :: ch:1 ref:num @123 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @123 > > > > : < Expected '.', but found ':' :: ch:1 text @123 > > ) ) ) : ( 0 seq:1 text 123-124 ) ) ) : ( 0 seq:1 ref:expr 124-163 | ( 0 rule:expr choice 124-163 | ( 0 ch:0 ref:funcCall 124-163 | ( 0 rule:funcCall seqnc 124-163 | ( 0 seq:0 ref:varExpr 124-127 | ( 0 rule:varExpr ref:ident 124-127 | ( 0 rule:ident seqnc 124-127 | ( 0 seq:0 ref:alpha 124-125 | ( 0 rule:alpha choice 124-125 | ( 0 ch:0 char-range 124-125 ) ) ) : ( 0 seq:1 repsep 125-127 | ( 0 rep choice 125-126 | ( 0 ch:0 ref:alphaNum 125-126 | ( 0 rule:alphaNum choice 125-126 | ( 0 ch:0 ref:alpha 125-126 | ( 0 rule:alpha choice 125-126 | ( 0 ch:0 char-range 125-126 ) ) ) ) ) ) : ( 0 sep text 126-126 ) : ( 0 rep choice 126-127 | ( 0 ch:0 ref:alphaNum 126-127 | ( 0 rule:alphaNum choice 126-127 | ( 0 ch:0 ref:alpha 126-127 | ( 0 rule:alpha choice 126-127 | ( 0 ch:0 char-range 126-127 ) ) ) ) ) ) : ( 0 sep text 127-127 ) : < None of choices matched input :: rep choice @127 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @127 | < None of choices matched input :: rule:alphaNum choice @127 | < Rule `alpha` didn't match :: ch:0 ref:alpha @127 | < None of choices matched input :: rule:alpha choice @127 | < Expected character in range from 'a' to 'z', but found '(' :: ch:0 char-range @127 > : < Expected character in range from 'A' to 'Z', but found '(' :: ch:1 char-range @127 > : < Expected '_', but found '(' :: ch:2 text @127 > > > : < Rule `num` didn't match :: ch:1 ref:num @127 | < Expected character in range from '0' to '9', but found '(' :: rule:num char-range @127 > > > > : < Expected '.', but found '(' :: ch:1 text @127 > > ) ) ) ) : ( 0 seq:1 ref:funcArgs 127-163 | ( 0 rule:funcArgs seqnc 127-163 | ( 0 seq:0 text 127-128 ) : ( 0 seq:1 ref:ws 128-128 | ( 0 rule:ws repsep 128-128 | < None of choices matched input :: rep choice @128 | < Expected ' ', but found 'f' :: ch:0 text @128 > : < Expected '
', but found 'f' :: ch:1 text @128 > > ) ) : ( 0 seq:2 repsep 128-162 | ( 0 rep ref:funcArg 128-138 | ( 0 rule:funcArg seqnc 128-138 | ( 0 seq:0 choice 128-133 | ( 0 ch:0 seqnc 128-133 | ( 0 seq:0 ref:ident 128-132 | ( 0 rule:ident seqnc 128-132 | ( 0 seq:0 ref:alpha 128-129 | ( 0 rule:alpha choice 128-129 | ( 0 ch:0 char-range 128-129 ) ) ) : ( 0 seq:1 repsep 129-132 | ( 0 rep choice 129-130 | ( 0 ch:0 ref:alphaNum 129-130 | ( 0 rule:alphaNum choice 129-130 | ( 0 ch:0 ref:alpha 129-130 | ( 0 rule:alpha choice 129-130 | ( 0 ch:0 char-range 129-130 ) ) ) ) ) ) : ( 0 sep text 130-130 ) : ( 0 rep choice 130-131 | ( 0 ch:0 ref:alphaNum 130-131 | ( 0 rule:alphaNum choice 130-131 | ( 0 ch:0 ref:alpha 130-131 | ( 0 rule:alpha choice 130-131 | ( 0 ch:0 char-range 130-131 ) ) ) ) ) ) : ( 0 sep text 131-131 ) : ( 0 rep choice 131-132 | ( 0 ch:0 ref:alphaNum 131-132 | ( 0 rule:alphaNum choice 131-132 | ( 0 ch:0 ref:alpha 131-132 | ( 0 rule:alpha choice 131-132 | ( 0 ch:0 char-range 131-132 ) ) ) ) ) ) : ( 0 sep text 132-132 ) : < None of choices matched input :: rep choice @132 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @132 | < None of choices matched input :: rule:alphaNum choice @132 | < Rule `alpha` didn't match :: ch:0 ref:alpha @132 | < None of choices matched input :: rule:alpha choice @132 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @132 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @132 > : < Expected '_', but found ':' :: ch:2 text @132 > > > : < Rule `num` didn't match :: ch:1 ref:num @132 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @132 > > > > : < Expected '.', but found ':' :: ch:1 text @132 > > ) ) ) : ( 0 seq:1 text 132-133 ) ) ) : ( 0 seq:1 ref:expr 133-138 | ( 0 rule:expr choice 133-138 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @133 | < Sequence failed at entry 0 :: rule:funcCall seqnc @133 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @133 | < Rule `ident` didn't match :: rule:varExpr ref:ident @133 | < Sequence failed at entry 0 :: rule:ident seqnc @133 | < Rule `alpha` didn't match :: seq:0 ref:alpha @133 | < None of choices matched input :: rule:alpha choice @133 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @133 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @133 > : < Expected '_', but found '"' :: ch:2 text @133 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @133 | < Sequence failed at entry 0 :: rule:lambda seqnc @133 | < Expected '(', but found '"' :: seq:0 text @133 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @133 | < Rule `ident` didn't match :: rule:varExpr ref:ident @133 | < Sequence failed at entry 0 :: rule:ident seqnc @133 | < Rule `alpha` didn't match :: seq:0 ref:alpha @133 | < None of choices matched input :: rule:alpha choice @133 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @133 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @133 > : < Expected '_', but found '"' :: ch:2 text @133 > > > > > > : ( 0 ch:3 ref:stringLit 133-138 | ( 0 rule:stringLit seqnc 133-138 | ( 0 seq:0 text 133-134 ) : ( 0 seq:1 ref:stringContents 134-137 | ( 0 rule:stringContents repsep 134-137 | ( 0 rep ref:stringChar 134-135 | ( 0 rule:stringChar choice 134-135 | ( 0 ch:0 not-char 134-135 ) ) ) : ( 0 sep text 135-135 ) : ( 0 rep ref:stringChar 135-136 | ( 0 rule:stringChar choice 135-136 | ( 0 ch:0 not-char 135-136 ) ) ) : ( 0 sep text 136-136 ) : ( 0 rep ref:stringChar 136-137 | ( 0 rule:stringChar choice 136-137 | ( 0 ch:0 not-char 136-137 ) ) ) : ( 0 sep text 137-137 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @137 | < None of choices matched input :: rule:stringChar choice @137 | < Expected not to find '"', but found '"' :: ch:0 not-char @137 > : < Sequence failed at entry 0 :: ch:1 seqnc @137 | < Expected '\\', but found '"' :: seq:0 char @137 > > > > ) ) : ( 0 seq:2 text 137-138 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 138-140 | ( 0 rule:commaWS seqnc 138-140 | ( 0 seq:0 text 138-139 ) : ( 0 seq:1 ref:ws 139-140 | ( 0 rule:ws repsep 139-140 | ( 0 rep choice 139-140 | ( 0 ch:0 text 139-140 ) ) : ( 0 sep text 140-140 ) : < None of choices matched input :: rep choice @140 | < Expected ' ', but found 't' :: ch:0 text @140 > : < Expected '
', but found 't' :: ch:1 text @140 > > ) ) ) ) : ( 0 rep ref:funcArg 140-150 | ( 0 rule:funcArg seqnc 140-150 | ( 0 seq:0 choice 140-143 | ( 0 ch:0 seqnc 140-143 | ( 0 seq:0 ref:ident 140-142 | ( 0 rule:ident seqnc 140-142 | ( 0 seq:0 ref:alpha 140-141 | ( 0 rule:alpha choice 140-141 | ( 0 ch:0 char-range 140-141 ) ) ) : ( 0 seq:1 repsep 141-142 | ( 0 rep choice 141-142 | ( 0 ch:0 ref:alphaNum 141-142 | ( 0 rule:alphaNum choice 141-142 | ( 0 ch:0 ref:alpha 141-142 | ( 0 rule:alpha choice 141-142 | ( 0 ch:0 char-range 141-142 ) ) ) ) ) ) : ( 0 sep text 142-142 ) : < None of choices matched input :: rep choice @142 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @142 | < None of choices matched input :: rule:alphaNum choice @142 | < Rule `alpha` didn't match :: ch:0 ref:alpha @142 | < None of choices matched input :: rule:alpha choice @142 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @142 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @142 > : < Expected '_', but found ':' :: ch:2 text @142 > > > : < Rule `num` didn't match :: ch:1 ref:num @142 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @142 > > > > : < Expected '.', but found ':' :: ch:1 text @142 > > ) ) ) : ( 0 seq:1 text 142-143 ) ) ) : ( 0 seq:1 ref:expr 143-150 | ( 0 rule:expr choice 143-150 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @143 | < Sequence failed at entry 0 :: rule:funcCall seqnc @143 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @143 | < Rule `ident` didn't match :: rule:varExpr ref:ident @143 | < Sequence failed at entry 0 :: rule:ident seqnc @143 | < Rule `alpha` didn't match :: seq:0 ref:alpha @143 | < None of choices matched input :: rule:alpha choice @143 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @143 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @143 > : < Expected '_', but found '"' :: ch:2 text @143 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @143 | < Sequence failed at entry 0 :: rule:lambda seqnc @143 | < Expected '(', but found '"' :: seq:0 text @143 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @143 | < Rule `ident` didn't match :: rule:varExpr ref:ident @143 | < Sequence failed at entry 0 :: rule:ident seqnc @143 | < Rule `alpha` didn't match :: seq:0 ref:alpha @143 | < None of choices matched input :: rule:alpha choice @143 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @143 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @143 > : < Expected '_', but found '"' :: ch:2 text @143 > > > > > > : ( 0 ch:3 ref:stringLit 143-150 | ( 0 rule:stringLit seqnc 143-150 | ( 0 seq:0 text 143-144 ) : ( 0 seq:1 ref:stringContents 144-149 | ( 0 rule:stringContents repsep 144-149 | ( 0 rep ref:stringChar 144-145 | ( 0 rule:stringChar choice 144-145 | ( 0 ch:0 not-char 144-145 ) ) ) : ( 0 sep text 145-145 ) : ( 0 rep ref:stringChar 145-146 | ( 0 rule:stringChar choice 145-146 | ( 0 ch:0 not-char 145-146 ) ) ) : ( 0 sep text 146-146 ) : ( 0 rep ref:stringChar 146-147 | ( 0 rule:stringChar choice 146-147 | ( 0 ch:0 not-char 146-147 ) ) ) : ( 0 sep text 147-147 ) : ( 0 rep ref:stringChar 147-148 | ( 0 rule:stringChar choice 147-148 | ( 0 ch:0 not-char 147-148 ) ) ) : ( 0 sep text 148-148 ) : ( 0 rep ref:stringChar 148-149 | ( 0 rule:stringChar choice 148-149 | ( 0 ch:0 not-char 148-149 ) ) ) : ( 0 sep text 149-149 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @149 | < None of choices matched input :: rule:stringChar choice @149 | < Expected not to find '"', but found '"' :: ch:0 not-char @149 > : < Sequence failed at entry 0 :: ch:1 seqnc @149 | < Expected '\\', but found '"' :: seq:0 char @149 > > > > ) ) : ( 0 seq:2 text 149-150 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 150-152 | ( 0 rule:commaWS seqnc 150-152 | ( 0 seq:0 text 150-151 ) : ( 0 seq:1 ref:ws 151-152 | ( 0 rule:ws repsep 151-152 | ( 0 rep choice 151-152 | ( 0 ch:0 text 151-152 ) ) : ( 0 sep text 152-152 ) : < None of choices matched input :: rep choice @152 | < Expected ' ', but found 'a' :: ch:0 text @152 > : < Expected '
', but found 'a' :: ch:1 text @152 > > ) ) ) ) : ( 0 rep ref:funcArg 152-162 | ( 0 rule:funcArg seqnc 152-162 | ( 0 seq:0 choice 152-159 | ( 0 ch:0 seqnc 152-159 | ( 0 seq:0 ref:ident 152-158 | ( 0 rule:ident seqnc 152-158 | ( 0 seq:0 ref:alpha 152-153 | ( 0 rule:alpha choice 152-153 | ( 0 ch:0 char-range 152-153 ) ) ) : ( 0 seq:1 repsep 153-158 | ( 0 rep choice 153-154 | ( 0 ch:0 ref:alphaNum 153-154 | ( 0 rule:alphaNum choice 153-154 | ( 0 ch:0 ref:alpha 153-154 | ( 0 rule:alpha choice 153-154 | ( 0 ch:0 char-range 153-154 ) ) ) ) ) ) : ( 0 sep text 154-154 ) : ( 0 rep choice 154-155 | ( 0 ch:0 ref:alphaNum 154-155 | ( 0 rule:alphaNum choice 154-155 | ( 0 ch:0 ref:alpha 154-155 | ( 0 rule:alpha choice 154-155 | ( 0 ch:0 char-range 154-155 ) ) ) ) ) ) : ( 0 sep text 155-155 ) : ( 0 rep choice 155-156 | ( 0 ch:0 ref:alphaNum 155-156 | ( 0 rule:alphaNum choice 155-156 | ( 0 ch:0 ref:alpha 155-156 | ( 0 rule:alpha choice 155-156 | ( 0 ch:0 char-range 155-156 ) ) ) ) ) ) : ( 0 sep text 156-156 ) : ( 0 rep choice 156-157 | ( 0 ch:0 ref:alphaNum 156-157 | ( 0 rule:alphaNum choice 156-157 | ( 0 ch:0 ref:alpha 156-157 | ( 0 rule:alpha choice 156-157 | ( 0 ch:0 char-range 156-157 ) ) ) ) ) ) : ( 0 sep text 157-157 ) : ( 0 rep choice 157-158 | ( 0 ch:0 ref:alphaNum 157-158 | ( 0 rule:alphaNum choice 157-158 | ( 0 ch:0 ref:alpha 157-158 | ( 0 rule:alpha choice 157-158 | ( 0 ch:0 char-range 157-158 ) ) ) ) ) ) : ( 0 sep text 158-158 ) : < None of choices matched input :: rep choice @158 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @158 | < None of choices matched input :: rule:alphaNum choice @158 | < Rule `alpha` didn't match :: ch:0 ref:alpha @158 | < None of choices matched input :: rule:alpha choice @158 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @158 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @158 > : < Expected '_', but found ':' :: ch:2 text @158 > > > : < Rule `num` didn't match :: ch:1 ref:num @158 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @158 > > > > : < Expected '.', but found ':' :: ch:1 text @158 > > ) ) ) : ( 0 seq:1 text 158-159 ) ) ) : ( 0 seq:1 ref:expr 159-162 | ( 0 rule:expr choice 159-162 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @159 | < Sequence failed at entry 0 :: rule:funcCall seqnc @159 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @159 | < Rule `ident` didn't match :: rule:varExpr ref:ident @159 | < Sequence failed at entry 0 :: rule:ident seqnc @159 | < Rule `alpha` didn't match :: seq:0 ref:alpha @159 | < None of choices matched input :: rule:alpha choice @159 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @159 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @159 > : < Expected '_', but found '1' :: ch:2 text @159 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @159 | < Sequence failed at entry 0 :: rule:lambda seqnc @159 | < Expected '(', but found '1' :: seq:0 text @159 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @159 | < Rule `ident` didn't match :: rule:varExpr ref:ident @159 | < Sequence failed at entry 0 :: rule:ident seqnc @159 | < Rule `alpha` didn't match :: seq:0 ref:alpha @159 | < None of choices matched input :: rule:alpha choice @159 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @159 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @159 > : < Expected '_', but found '1' :: ch:2 text @159 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @159 | < Sequence failed at entry 0 :: rule:stringLit seqnc @159 | < Expected '"', but found '1' :: seq:0 text @159 > > > : ( 0 ch:4 ref:intLit 159-162 | ( 0 rule:intLit seqnc 159-162 | ( 0 seq:0 ref:num 159-160 | ( 0 rule:num char-range 159-160 ) ) : ( 0 seq:1 repsep 160-162 | ( 0 rep ref:num 160-161 | ( 0 rule:num char-range 160-161 ) ) : ( 0 sep text 161-161 ) : ( 0 rep ref:num 161-162 | ( 0 rule:num char-range 161-162 ) ) : ( 0 sep text 162-162 ) : < Rule `num` didn't match :: rep ref:num @162 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @162 > > ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @162 | < Sequence failed at entry 0 :: rule:commaWS seqnc @162 | < Expected ',', but found ')' :: seq:0 text @162 > > > ) : ( 0 seq:3 ref:ws 162-162 | ( 0 rule:ws repsep 162-162 | < None of choices matched input :: rep choice @162 | < Expected ' ', but found ')' :: ch:0 text @162 > : < Expected '
', but found ')' :: ch:1 text @162 > > ) ) : ( 0 seq:4 text 162-163 ) ) ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @163 | < Sequence failed at entry 0 :: rule:commaWS seqnc @163 | < Expected ',', but found '
' :: seq:0 text @163 > > > ) : ( 0 seq:3 ref:ws 163-168 | ( 0 rule:ws repsep 163-168 | ( 0 rep choice 163-164 | < Expected ' ', but found '
' :: ch:0 text @163 > : ( 0 ch:1 text 163-164 ) ) : ( 0 sep text 164-164 ) : ( 0 rep choice 164-165 | ( 0 ch:0 text 164-165 ) ) : ( 0 sep text 165-165 ) : ( 0 rep choice 165-166 | ( 0 ch:0 text 165-166 ) ) : ( 0 sep text 166-166 ) : ( 0 rep choice 166-167 | ( 0 ch:0 text 166-167 ) ) : ( 0 sep text 167-167 ) : ( 0 rep choice 167-168 | ( 0 ch:0 text 167-168 ) ) : ( 0 sep text 168-168 ) : < None of choices matched input :: rep choice @168 | < Expected ' ', but found ')' :: ch:0 text @168 > : < Expected '
', but found ')' :: ch:1 text @168 > > ) ) : ( 0 seq:4 text 168-169 ) ) ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @169 | < Sequence failed at entry 0 :: rule:commaWS seqnc @169 | < Expected ',', but found '
' :: seq:0 text @169 > > > ) : ( 0 seq:3 ref:ws 169-172 | ( 0 rule:ws repsep 169-172 | ( 0 rep choice 169-170 | < Expected ' ', but found '
' :: ch:0 text @169 > : ( 0 ch:1 text 169-170 ) ) : ( 0 sep text 170-170 ) : ( 0 rep choice 170-171 | ( 0 ch:0 text 170-171 ) ) : ( 0 sep text 171-171 ) : ( 0 rep choice 171-172 | ( 0 ch:0 text 171-172 ) ) : ( 0 sep text 172-172 ) : < None of choices matched input :: rep choice @172 | < Expected ' ', but found ')' :: ch:0 text @172 > : < Expected '
', but found ')' :: ch:1 text @172 > > ) ) : ( 0 seq:4 text 172-173 ) ) ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @173 | < Sequence failed at entry 0 :: rule:commaWS seqnc @173 | < Expected ',', but found '
' :: seq:0 text @173 > > > ) : ( 0 seq:3 ref:ws 173-174 | ( 0 rule:ws repsep 173-174 | ( 0 rep choice 173-174 | < Expected ' ', but found '
' :: ch:0 text @173 > : ( 0 ch:1 text 173-174 ) ) : ( 0 sep text 174-174 ) : < None of choices matched input :: rep choice @174 | < Expected ' ', but found ')' :: ch:0 text @174 > : < Expected '
', but found ')' :: ch:1 text @174 > > ) ) : ( 0 seq:4 text 174-175 ) ) ) ) ) ) : ( 0 seq:1 text 175-176 ) ) ) : ( 0 sep ref:ws 176-178 | ( 0 rule:ws repsep 176-178 | ( 0 rep choice 176-177 | < Expected ' ', but found '
' :: ch:0 text @176 > : ( 0 ch:1 text 176-177 ) ) : ( 0 sep text 177-177 ) : ( 0 rep choice 177-178 | < Expected ' ', but found '
' :: ch:0 text @177 > : ( 0 ch:1 text 177-178 ) ) : ( 0 sep text 178-178 ) : < None of choices matched input :: rep choice @178 | < Expected ' ', but found 'p' :: ch:0 text @178 > : < Expected '
', but found 'p' :: ch:1 text @178 > > ) ) : ( 0 rep ref:stmt 178-250 | ( 0 rule:stmt seqnc 178-250 | ( 0 seq:0 choice 178-249 | < Rule `contractStmt` didn't match :: ch:0 ref:contractStmt @178 | < Sequence failed at entry 0 :: rule:contractStmt seqnc @178 | < Rule `contractKW` didn't match :: seq:0 ref:contractKW @178 | < Expected 'contract', but found 'payment(' :: rule:contractKW text @178 > > > > : ( 0 ch:1 ref:paymentStmt 178-249 | ( 0 rule:paymentStmt seqnc 178-249 | ( 0 seq:0 ref:paymentKW 178-185 | ( 0 rule:paymentKW text 178-185 ) ) : ( 0 seq:1 ref:funcArgs 185-249 | ( 0 rule:funcArgs seqnc 185-249 | ( 0 seq:0 text 185-186 ) : ( 0 seq:1 ref:ws 186-186 | ( 0 rule:ws repsep 186-186 | < None of choices matched input :: rep choice @186 | < Expected ' ', but found 'i' :: ch:0 text @186 > : < Expected '
', but found 'i' :: ch:1 text @186 > > ) ) : ( 0 seq:2 repsep 186-248 | ( 0 rep ref:funcArg 186-190 | ( 0 rule:funcArg seqnc 186-190 | ( 0 seq:0 choice 186-189 | ( 0 ch:0 seqnc 186-189 | ( 0 seq:0 ref:ident 186-188 | ( 0 rule:ident seqnc 186-188 | ( 0 seq:0 ref:alpha 186-187 | ( 0 rule:alpha choice 186-187 | ( 0 ch:0 char-range 186-187 ) ) ) : ( 0 seq:1 repsep 187-188 | ( 0 rep choice 187-188 | ( 0 ch:0 ref:alphaNum 187-188 | ( 0 rule:alphaNum choice 187-188 | ( 0 ch:0 ref:alpha 187-188 | ( 0 rule:alpha choice 187-188 | ( 0 ch:0 char-range 187-188 ) ) ) ) ) ) : ( 0 sep text 188-188 ) : < None of choices matched input :: rep choice @188 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @188 | < None of choices matched input :: rule:alphaNum choice @188 | < Rule `alpha` didn't match :: ch:0 ref:alpha @188 | < None of choices matched input :: rule:alpha choice @188 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @188 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @188 > : < Expected '_', but found ':' :: ch:2 text @188 > > > : < Rule `num` didn't match :: ch:1 ref:num @188 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @188 > > > > : < Expected '.', but found ':' :: ch:1 text @188 > > ) ) ) : ( 0 seq:1 text 188-189 ) ) ) : ( 0 seq:1 ref:expr 189-190 | ( 0 rule:expr choice 189-190 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @189 | < Sequence failed at entry 0 :: rule:funcCall seqnc @189 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @189 | < Rule `ident` didn't match :: rule:varExpr ref:ident @189 | < Sequence failed at entry 0 :: rule:ident seqnc @189 | < Rule `alpha` didn't match :: seq:0 ref:alpha @189 | < None of choices matched input :: rule:alpha choice @189 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @189 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @189 > : < Expected '_', but found '1' :: ch:2 text @189 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @189 | < Sequence failed at entry 0 :: rule:lambda seqnc @189 | < Expected '(', but found '1' :: seq:0 text @189 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @189 | < Rule `ident` didn't match :: rule:varExpr ref:ident @189 | < Sequence failed at entry 0 :: rule:ident seqnc @189 | < Rule `alpha` didn't match :: seq:0 ref:alpha @189 | < None of choices matched input :: rule:alpha choice @189 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @189 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @189 > : < Expected '_', but found '1' :: ch:2 text @189 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @189 | < Sequence failed at entry 0 :: rule:stringLit seqnc @189 | < Expected '"', but found '1' :: seq:0 text @189 > > > : ( 0 ch:4 ref:intLit 189-190 | ( 0 rule:intLit seqnc 189-190 | ( 0 seq:0 ref:num 189-190 | ( 0 rule:num char-range 189-190 ) ) : ( 0 seq:1 repsep 190-190 | < Rule `num` didn't match :: rep ref:num @190 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @190 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 190-192 | ( 0 rule:commaWS seqnc 190-192 | ( 0 seq:0 text 190-191 ) : ( 0 seq:1 ref:ws 191-192 | ( 0 rule:ws repsep 191-192 | ( 0 rep choice 191-192 | ( 0 ch:0 text 191-192 ) ) : ( 0 sep text 192-192 ) : < None of choices matched input :: rep choice @192 | < Expected ' ', but found 'c' :: ch:0 text @192 > : < Expected '
', but found 'c' :: ch:1 text @192 > > ) ) ) ) : ( 0 rep ref:funcArg 192-204 | ( 0 rule:funcArg seqnc 192-204 | ( 0 seq:0 choice 192-203 | ( 0 ch:0 seqnc 192-203 | ( 0 seq:0 ref:ident 192-202 | ( 0 rule:ident seqnc 192-202 | ( 0 seq:0 ref:alpha 192-193 | ( 0 rule:alpha choice 192-193 | ( 0 ch:0 char-range 192-193 ) ) ) : ( 0 seq:1 repsep 193-202 | ( 0 rep choice 193-194 | ( 0 ch:0 ref:alphaNum 193-194 | ( 0 rule:alphaNum choice 193-194 | ( 0 ch:0 ref:alpha 193-194 | ( 0 rule:alpha choice 193-194 | ( 0 ch:0 char-range 193-194 ) ) ) ) ) ) : ( 0 sep text 194-194 ) : ( 0 rep choice 194-195 | ( 0 ch:0 ref:alphaNum 194-195 | ( 0 rule:alphaNum choice 194-195 | ( 0 ch:0 ref:alpha 194-195 | ( 0 rule:alpha choice 194-195 | ( 0 ch:0 char-range 194-195 ) ) ) ) ) ) : ( 0 sep text 195-195 ) : ( 0 rep choice 195-196 | ( 0 ch:0 ref:alphaNum 195-196 | ( 0 rule:alphaNum choice 195-196 | ( 0 ch:0 ref:alpha 195-196 | ( 0 rule:alpha choice 195-196 | ( 0 ch:0 char-range 195-196 ) ) ) ) ) ) : ( 0 sep text 196-196 ) : ( 0 rep choice 196-197 | ( 0 ch:0 ref:alphaNum 196-197 | ( 0 rule:alphaNum choice 196-197 | ( 0 ch:0 ref:alpha 196-197 | ( 0 rule:alpha choice 196-197 | ( 0 ch:0 char-range 196-197 ) ) ) ) ) ) : ( 0 sep text 197-197 ) : ( 0 rep choice 197-198 | ( 0 ch:0 ref:alphaNum 197-198 | ( 0 rule:alphaNum choice 197-198 | ( 0 ch:0 ref:alpha 197-198 | ( 0 rule:alpha choice 197-198 | ( 0 ch:0 char-range 197-198 ) ) ) ) ) ) : ( 0 sep text 198-198 ) : ( 0 rep choice 198-199 | ( 0 ch:0 ref:alphaNum 198-199 | ( 0 rule:alphaNum choice 198-199 | ( 0 ch:0 ref:alpha 198-199 | ( 0 rule:alpha choice 198-199 | ( 0 ch:0 char-range 198-199 ) ) ) ) ) ) : ( 0 sep text 199-199 ) : ( 0 rep choice 199-200 | ( 0 ch:0 ref:alphaNum 199-200 | ( 0 rule:alphaNum choice 199-200 | ( 0 ch:0 ref:alpha 199-200 | ( 0 rule:alpha choice 199-200 | ( 0 ch:0 char-range 199-200 ) ) ) ) ) ) : ( 0 sep text 200-200 ) : ( 0 rep choice 200-201 | ( 0 ch:0 ref:alphaNum 200-201 | ( 0 rule:alphaNum choice 200-201 | ( 0 ch:0 ref:alpha 200-201 | ( 0 rule:alpha choice 200-201 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @200 > : ( 0 ch:1 char-range 200-201 ) ) ) ) ) ) : ( 0 sep text 201-201 ) : ( 0 rep choice 201-202 | ( 0 ch:0 ref:alphaNum 201-202 | ( 0 rule:alphaNum choice 201-202 | ( 0 ch:0 ref:alpha 201-202 | ( 0 rule:alpha choice 201-202 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @201 > : ( 0 ch:1 char-range 201-202 ) ) ) ) ) ) : ( 0 sep text 202-202 ) : < None of choices matched input :: rep choice @202 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @202 | < None of choices matched input :: rule:alphaNum choice @202 | < Rule `alpha` didn't match :: ch:0 ref:alpha @202 | < None of choices matched input :: rule:alpha choice @202 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @202 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @202 > : < Expected '_', but found ':' :: ch:2 text @202 > > > : < Rule `num` didn't match :: ch:1 ref:num @202 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @202 > > > > : < Expected '.', but found ':' :: ch:1 text @202 > > ) ) ) : ( 0 seq:1 text 202-203 ) ) ) : ( 0 seq:1 ref:expr 203-204 | ( 0 rule:expr choice 203-204 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @203 | < Sequence failed at entry 0 :: rule:funcCall seqnc @203 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @203 | < Rule `ident` didn't match :: rule:varExpr ref:ident @203 | < Sequence failed at entry 0 :: rule:ident seqnc @203 | < Rule `alpha` didn't match :: seq:0 ref:alpha @203 | < None of choices matched input :: rule:alpha choice @203 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @203 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @203 > : < Expected '_', but found '1' :: ch:2 text @203 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @203 | < Sequence failed at entry 0 :: rule:lambda seqnc @203 | < Expected '(', but found '1' :: seq:0 text @203 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @203 | < Rule `ident` didn't match :: rule:varExpr ref:ident @203 | < Sequence failed at entry 0 :: rule:ident seqnc @203 | < Rule `alpha` didn't match :: seq:0 ref:alpha @203 | < None of choices matched input :: rule:alpha choice @203 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @203 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @203 > : < Expected '_', but found '1' :: ch:2 text @203 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @203 | < Sequence failed at entry 0 :: rule:stringLit seqnc @203 | < Expected '"', but found '1' :: seq:0 text @203 > > > : ( 0 ch:4 ref:intLit 203-204 | ( 0 rule:intLit seqnc 203-204 | ( 0 seq:0 ref:num 203-204 | ( 0 rule:num char-range 203-204 ) ) : ( 0 seq:1 repsep 204-204 | < Rule `num` didn't match :: rep ref:num @204 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @204 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 204-206 | ( 0 rule:commaWS seqnc 204-206 | ( 0 seq:0 text 204-205 ) : ( 0 seq:1 ref:ws 205-206 | ( 0 rule:ws repsep 205-206 | ( 0 rep choice 205-206 | ( 0 ch:0 text 205-206 ) ) : ( 0 sep text 206-206 ) : < None of choices matched input :: rep choice @206 | < Expected ' ', but found 'f' :: ch:0 text @206 > : < Expected '
', but found 'f' :: ch:1 text @206 > > ) ) ) ) : ( 0 rep ref:funcArg 206-218 | ( 0 rule:funcArg seqnc 206-218 | ( 0 seq:0 choice 206-211 | ( 0 ch:0 seqnc 206-211 | ( 0 seq:0 ref:ident 206-210 | ( 0 rule:ident seqnc 206-210 | ( 0 seq:0 ref:alpha 206-207 | ( 0 rule:alpha choice 206-207 | ( 0 ch:0 char-range 206-207 ) ) ) : ( 0 seq:1 repsep 207-210 | ( 0 rep choice 207-208 | ( 0 ch:0 ref:alphaNum 207-208 | ( 0 rule:alphaNum choice 207-208 | ( 0 ch:0 ref:alpha 207-208 | ( 0 rule:alpha choice 207-208 | ( 0 ch:0 char-range 207-208 ) ) ) ) ) ) : ( 0 sep text 208-208 ) : ( 0 rep choice 208-209 | ( 0 ch:0 ref:alphaNum 208-209 | ( 0 rule:alphaNum choice 208-209 | ( 0 ch:0 ref:alpha 208-209 | ( 0 rule:alpha choice 208-209 | ( 0 ch:0 char-range 208-209 ) ) ) ) ) ) : ( 0 sep text 209-209 ) : ( 0 rep choice 209-210 | ( 0 ch:0 ref:alphaNum 209-210 | ( 0 rule:alphaNum choice 209-210 | ( 0 ch:0 ref:alpha 209-210 | ( 0 rule:alpha choice 209-210 | ( 0 ch:0 char-range 209-210 ) ) ) ) ) ) : ( 0 sep text 210-210 ) : < None of choices matched input :: rep choice @210 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @210 | < None of choices matched input :: rule:alphaNum choice @210 | < Rule `alpha` didn't match :: ch:0 ref:alpha @210 | < None of choices matched input :: rule:alpha choice @210 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @210 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @210 > : < Expected '_', but found ':' :: ch:2 text @210 > > > : < Rule `num` didn't match :: ch:1 ref:num @210 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @210 > > > > : < Expected '.', but found ':' :: ch:1 text @210 > > ) ) ) : ( 0 seq:1 text 210-211 ) ) ) : ( 0 seq:1 ref:expr 211-218 | ( 0 rule:expr choice 211-218 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @211 | < Sequence failed at entry 0 :: rule:funcCall seqnc @211 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @211 | < Rule `ident` didn't match :: rule:varExpr ref:ident @211 | < Sequence failed at entry 0 :: rule:ident seqnc @211 | < Rule `alpha` didn't match :: seq:0 ref:alpha @211 | < None of choices matched input :: rule:alpha choice @211 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @211 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @211 > : < Expected '_', but found '"' :: ch:2 text @211 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @211 | < Sequence failed at entry 0 :: rule:lambda seqnc @211 | < Expected '(', but found '"' :: seq:0 text @211 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @211 | < Rule `ident` didn't match :: rule:varExpr ref:ident @211 | < Sequence failed at entry 0 :: rule:ident seqnc @211 | < Rule `alpha` didn't match :: seq:0 ref:alpha @211 | < None of choices matched input :: rule:alpha choice @211 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @211 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @211 > : < Expected '_', but found '"' :: ch:2 text @211 > > > > > > : ( 0 ch:3 ref:stringLit 211-218 | ( 0 rule:stringLit seqnc 211-218 | ( 0 seq:0 text 211-212 ) : ( 0 seq:1 ref:stringContents 212-217 | ( 0 rule:stringContents repsep 212-217 | ( 0 rep ref:stringChar 212-213 | ( 0 rule:stringChar choice 212-213 | ( 0 ch:0 not-char 212-213 ) ) ) : ( 0 sep text 213-213 ) : ( 0 rep ref:stringChar 213-214 | ( 0 rule:stringChar choice 213-214 | ( 0 ch:0 not-char 213-214 ) ) ) : ( 0 sep text 214-214 ) : ( 0 rep ref:stringChar 214-215 | ( 0 rule:stringChar choice 214-215 | ( 0 ch:0 not-char 214-215 ) ) ) : ( 0 sep text 215-215 ) : ( 0 rep ref:stringChar 215-216 | ( 0 rule:stringChar choice 215-216 | ( 0 ch:0 not-char 215-216 ) ) ) : ( 0 sep text 216-216 ) : ( 0 rep ref:stringChar 216-217 | ( 0 rule:stringChar choice 216-217 | ( 0 ch:0 not-char 216-217 ) ) ) : ( 0 sep text 217-217 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @217 | < None of choices matched input :: rule:stringChar choice @217 | < Expected not to find '"', but found '"' :: ch:0 not-char @217 > : < Sequence failed at entry 0 :: ch:1 seqnc @217 | < Expected '\\', but found '"' :: seq:0 char @217 > > > > ) ) : ( 0 seq:2 text 217-218 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 218-220 | ( 0 rule:commaWS seqnc 218-220 | ( 0 seq:0 text 218-219 ) : ( 0 seq:1 ref:ws 219-220 | ( 0 rule:ws repsep 219-220 | ( 0 rep choice 219-220 | ( 0 ch:0 text 219-220 ) ) : ( 0 sep text 220-220 ) : < None of choices matched input :: rep choice @220 | < Expected ' ', but found 't' :: ch:0 text @220 > : < Expected '
', but found 't' :: ch:1 text @220 > > ) ) ) ) : ( 0 rep ref:funcArg 220-228 | ( 0 rule:funcArg seqnc 220-228 | ( 0 seq:0 choice 220-223 | ( 0 ch:0 seqnc 220-223 | ( 0 seq:0 ref:ident 220-222 | ( 0 rule:ident seqnc 220-222 | ( 0 seq:0 ref:alpha 220-221 | ( 0 rule:alpha choice 220-221 | ( 0 ch:0 char-range 220-221 ) ) ) : ( 0 seq:1 repsep 221-222 | ( 0 rep choice 221-222 | ( 0 ch:0 ref:alphaNum 221-222 | ( 0 rule:alphaNum choice 221-222 | ( 0 ch:0 ref:alpha 221-222 | ( 0 rule:alpha choice 221-222 | ( 0 ch:0 char-range 221-222 ) ) ) ) ) ) : ( 0 sep text 222-222 ) : < None of choices matched input :: rep choice @222 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @222 | < None of choices matched input :: rule:alphaNum choice @222 | < Rule `alpha` didn't match :: ch:0 ref:alpha @222 | < None of choices matched input :: rule:alpha choice @222 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @222 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @222 > : < Expected '_', but found ':' :: ch:2 text @222 > > > : < Rule `num` didn't match :: ch:1 ref:num @222 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @222 > > > > : < Expected '.', but found ':' :: ch:1 text @222 > > ) ) ) : ( 0 seq:1 text 222-223 ) ) ) : ( 0 seq:1 ref:expr 223-228 | ( 0 rule:expr choice 223-228 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @223 | < Sequence failed at entry 0 :: rule:funcCall seqnc @223 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @223 | < Rule `ident` didn't match :: rule:varExpr ref:ident @223 | < Sequence failed at entry 0 :: rule:ident seqnc @223 | < Rule `alpha` didn't match :: seq:0 ref:alpha @223 | < None of choices matched input :: rule:alpha choice @223 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @223 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @223 > : < Expected '_', but found '"' :: ch:2 text @223 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @223 | < Sequence failed at entry 0 :: rule:lambda seqnc @223 | < Expected '(', but found '"' :: seq:0 text @223 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @223 | < Rule `ident` didn't match :: rule:varExpr ref:ident @223 | < Sequence failed at entry 0 :: rule:ident seqnc @223 | < Rule `alpha` didn't match :: seq:0 ref:alpha @223 | < None of choices matched input :: rule:alpha choice @223 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @223 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @223 > : < Expected '_', but found '"' :: ch:2 text @223 > > > > > > : ( 0 ch:3 ref:stringLit 223-228 | ( 0 rule:stringLit seqnc 223-228 | ( 0 seq:0 text 223-224 ) : ( 0 seq:1 ref:stringContents 224-227 | ( 0 rule:stringContents repsep 224-227 | ( 0 rep ref:stringChar 224-225 | ( 0 rule:stringChar choice 224-225 | ( 0 ch:0 not-char 224-225 ) ) ) : ( 0 sep text 225-225 ) : ( 0 rep ref:stringChar 225-226 | ( 0 rule:stringChar choice 225-226 | ( 0 ch:0 not-char 225-226 ) ) ) : ( 0 sep text 226-226 ) : ( 0 rep ref:stringChar 226-227 | ( 0 rule:stringChar choice 226-227 | ( 0 ch:0 not-char 226-227 ) ) ) : ( 0 sep text 227-227 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @227 | < None of choices matched input :: rule:stringChar choice @227 | < Expected not to find '"', but found '"' :: ch:0 not-char @227 > : < Sequence failed at entry 0 :: ch:1 seqnc @227 | < Expected '\\', but found '"' :: seq:0 char @227 > > > > ) ) : ( 0 seq:2 text 227-228 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 228-230 | ( 0 rule:commaWS seqnc 228-230 | ( 0 seq:0 text 228-229 ) : ( 0 seq:1 ref:ws 229-230 | ( 0 rule:ws repsep 229-230 | ( 0 rep choice 229-230 | ( 0 ch:0 text 229-230 ) ) : ( 0 sep text 230-230 ) : < None of choices matched input :: rep choice @230 | < Expected ' ', but found 'a' :: ch:0 text @230 > : < Expected '
', but found 'a' :: ch:1 text @230 > > ) ) ) ) : ( 0 rep ref:funcArg 230-240 | ( 0 rule:funcArg seqnc 230-240 | ( 0 seq:0 choice 230-237 | ( 0 ch:0 seqnc 230-237 | ( 0 seq:0 ref:ident 230-236 | ( 0 rule:ident seqnc 230-236 | ( 0 seq:0 ref:alpha 230-231 | ( 0 rule:alpha choice 230-231 | ( 0 ch:0 char-range 230-231 ) ) ) : ( 0 seq:1 repsep 231-236 | ( 0 rep choice 231-232 | ( 0 ch:0 ref:alphaNum 231-232 | ( 0 rule:alphaNum choice 231-232 | ( 0 ch:0 ref:alpha 231-232 | ( 0 rule:alpha choice 231-232 | ( 0 ch:0 char-range 231-232 ) ) ) ) ) ) : ( 0 sep text 232-232 ) : ( 0 rep choice 232-233 | ( 0 ch:0 ref:alphaNum 232-233 | ( 0 rule:alphaNum choice 232-233 | ( 0 ch:0 ref:alpha 232-233 | ( 0 rule:alpha choice 232-233 | ( 0 ch:0 char-range 232-233 ) ) ) ) ) ) : ( 0 sep text 233-233 ) : ( 0 rep choice 233-234 | ( 0 ch:0 ref:alphaNum 233-234 | ( 0 rule:alphaNum choice 233-234 | ( 0 ch:0 ref:alpha 233-234 | ( 0 rule:alpha choice 233-234 | ( 0 ch:0 char-range 233-234 ) ) ) ) ) ) : ( 0 sep text 234-234 ) : ( 0 rep choice 234-235 | ( 0 ch:0 ref:alphaNum 234-235 | ( 0 rule:alphaNum choice 234-235 | ( 0 ch:0 ref:alpha 234-235 | ( 0 rule:alpha choice 234-235 | ( 0 ch:0 char-range 234-235 ) ) ) ) ) ) : ( 0 sep text 235-235 ) : ( 0 rep choice 235-236 | ( 0 ch:0 ref:alphaNum 235-236 | ( 0 rule:alphaNum choice 235-236 | ( 0 ch:0 ref:alpha 235-236 | ( 0 rule:alpha choice 235-236 | ( 0 ch:0 char-range 235-236 ) ) ) ) ) ) : ( 0 sep text 236-236 ) : < None of choices matched input :: rep choice @236 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @236 | < None of choices matched input :: rule:alphaNum choice @236 | < Rule `alpha` didn't match :: ch:0 ref:alpha @236 | < None of choices matched input :: rule:alpha choice @236 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @236 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @236 > : < Expected '_', but found ':' :: ch:2 text @236 > > > : < Rule `num` didn't match :: ch:1 ref:num @236 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @236 > > > > : < Expected '.', but found ':' :: ch:1 text @236 > > ) ) ) : ( 0 seq:1 text 236-237 ) ) ) : ( 0 seq:1 ref:expr 237-240 | ( 0 rule:expr choice 237-240 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @237 | < Sequence failed at entry 0 :: rule:funcCall seqnc @237 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @237 | < Rule `ident` didn't match :: rule:varExpr ref:ident @237 | < Sequence failed at entry 0 :: rule:ident seqnc @237 | < Rule `alpha` didn't match :: seq:0 ref:alpha @237 | < None of choices matched input :: rule:alpha choice @237 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @237 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @237 > : < Expected '_', but found '1' :: ch:2 text @237 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @237 | < Sequence failed at entry 0 :: rule:lambda seqnc @237 | < Expected '(', but found '1' :: seq:0 text @237 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @237 | < Rule `ident` didn't match :: rule:varExpr ref:ident @237 | < Sequence failed at entry 0 :: rule:ident seqnc @237 | < Rule `alpha` didn't match :: seq:0 ref:alpha @237 | < None of choices matched input :: rule:alpha choice @237 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @237 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @237 > : < Expected '_', but found '1' :: ch:2 text @237 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @237 | < Sequence failed at entry 0 :: rule:stringLit seqnc @237 | < Expected '"', but found '1' :: seq:0 text @237 > > > : ( 0 ch:4 ref:intLit 237-240 | ( 0 rule:intLit seqnc 237-240 | ( 0 seq:0 ref:num 237-238 | ( 0 rule:num char-range 237-238 ) ) : ( 0 seq:1 repsep 238-240 | ( 0 rep ref:num 238-239 | ( 0 rule:num char-range 238-239 ) ) : ( 0 sep text 239-239 ) : ( 0 rep ref:num 239-240 | ( 0 rule:num char-range 239-240 ) ) : ( 0 sep text 240-240 ) : < Rule `num` didn't match :: rep ref:num @240 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @240 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 240-242 | ( 0 rule:commaWS seqnc 240-242 | ( 0 seq:0 text 240-241 ) : ( 0 seq:1 ref:ws 241-242 | ( 0 rule:ws repsep 241-242 | ( 0 rep choice 241-242 | ( 0 ch:0 text 241-242 ) ) : ( 0 sep text 242-242 ) : < None of choices matched input :: rep choice @242 | < Expected ' ', but found 't' :: ch:0 text @242 > : < Expected '
', but found 't' :: ch:1 text @242 > > ) ) ) ) : ( 0 rep ref:funcArg 242-248 | ( 0 rule:funcArg seqnc 242-248 | ( 0 seq:0 choice 242-247 | ( 0 ch:0 seqnc 242-247 | ( 0 seq:0 ref:ident 242-246 | ( 0 rule:ident seqnc 242-246 | ( 0 seq:0 ref:alpha 242-243 | ( 0 rule:alpha choice 242-243 | ( 0 ch:0 char-range 242-243 ) ) ) : ( 0 seq:1 repsep 243-246 | ( 0 rep choice 243-244 | ( 0 ch:0 ref:alphaNum 243-244 | ( 0 rule:alphaNum choice 243-244 | ( 0 ch:0 ref:alpha 243-244 | ( 0 rule:alpha choice 243-244 | ( 0 ch:0 char-range 243-244 ) ) ) ) ) ) : ( 0 sep text 244-244 ) : ( 0 rep choice 244-245 | ( 0 ch:0 ref:alphaNum 244-245 | ( 0 rule:alphaNum choice 244-245 | ( 0 ch:0 ref:alpha 244-245 | ( 0 rule:alpha choice 244-245 | ( 0 ch:0 char-range 244-245 ) ) ) ) ) ) : ( 0 sep text 245-245 ) : ( 0 rep choice 245-246 | ( 0 ch:0 ref:alphaNum 245-246 | ( 0 rule:alphaNum choice 245-246 | ( 0 ch:0 ref:alpha 245-246 | ( 0 rule:alpha choice 245-246 | ( 0 ch:0 char-range 245-246 ) ) ) ) ) ) : ( 0 sep text 246-246 ) : < None of choices matched input :: rep choice @246 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @246 | < None of choices matched input :: rule:alphaNum choice @246 | < Rule `alpha` didn't match :: ch:0 ref:alpha @246 | < None of choices matched input :: rule:alpha choice @246 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @246 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @246 > : < Expected '_', but found ':' :: ch:2 text @246 > > > : < Rule `num` didn't match :: ch:1 ref:num @246 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @246 > > > > : < Expected '.', but found ':' :: ch:1 text @246 > > ) ) ) : ( 0 seq:1 text 246-247 ) ) ) : ( 0 seq:1 ref:expr 247-248 | ( 0 rule:expr choice 247-248 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @247 | < Sequence failed at entry 0 :: rule:funcCall seqnc @247 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @247 | < Rule `ident` didn't match :: rule:varExpr ref:ident @247 | < Sequence failed at entry 0 :: rule:ident seqnc @247 | < Rule `alpha` didn't match :: seq:0 ref:alpha @247 | < None of choices matched input :: rule:alpha choice @247 | < Expected character in range from 'a' to 'z', but found '0' :: ch:0 char-range @247 > : < Expected character in range from 'A' to 'Z', but found '0' :: ch:1 char-range @247 > : < Expected '_', but found '0' :: ch:2 text @247 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @247 | < Sequence failed at entry 0 :: rule:lambda seqnc @247 | < Expected '(', but found '0' :: seq:0 text @247 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @247 | < Rule `ident` didn't match :: rule:varExpr ref:ident @247 | < Sequence failed at entry 0 :: rule:ident seqnc @247 | < Rule `alpha` didn't match :: seq:0 ref:alpha @247 | < None of choices matched input :: rule:alpha choice @247 | < Expected character in range from 'a' to 'z', but found '0' :: ch:0 char-range @247 > : < Expected character in range from 'A' to 'Z', but found '0' :: ch:1 char-range @247 > : < Expected '_', but found '0' :: ch:2 text @247 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @247 | < Sequence failed at entry 0 :: rule:stringLit seqnc @247 | < Expected '"', but found '0' :: seq:0 text @247 > > > : ( 0 ch:4 ref:intLit 247-248 | ( 0 rule:intLit seqnc 247-248 | ( 0 seq:0 ref:num 247-248 | ( 0 rule:num char-range 247-248 ) ) : ( 0 seq:1 repsep 248-248 | < Rule `num` didn't match :: rep ref:num @248 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @248 > > ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @248 | < Sequence failed at entry 0 :: rule:commaWS seqnc @248 | < Expected ',', but found ')' :: seq:0 text @248 > > > ) : ( 0 seq:3 ref:ws 248-248 | ( 0 rule:ws repsep 248-248 | < None of choices matched input :: rep choice @248 | < Expected ' ', but found ')' :: ch:0 text @248 > : < Expected '
', but found ')' :: ch:1 text @248 > > ) ) : ( 0 seq:4 text 248-249 ) ) ) ) ) ) : ( 0 seq:1 text 249-250 ) ) ) : ( 0 sep ref:ws 250-251 | ( 0 rule:ws repsep 250-251 | ( 0 rep choice 250-251 | < Expected ' ', but found '
' :: ch:0 text @250 > : ( 0 ch:1 text 250-251 ) ) : ( 0 sep text 251-251 ) : < None of choices matched input :: rep choice @251 | < Expected ' ', but found 'p' :: ch:0 text @251 > : < Expected '
', but found 'p' :: ch:1 text @251 > > ) ) : ( 0 rep ref:stmt 251-324 | ( 0 rule:stmt seqnc 251-324 | ( 0 seq:0 choice 251-323 | < Rule `contractStmt` didn't match :: ch:0 ref:contractStmt @251 | < Sequence failed at entry 0 :: rule:contractStmt seqnc @251 | < Rule `contractKW` didn't match :: seq:0 ref:contractKW @251 | < Expected 'contract', but found 'payment(' :: rule:contractKW text @251 > > > > : ( 0 ch:1 ref:paymentStmt 251-323 | ( 0 rule:paymentStmt seqnc 251-323 | ( 0 seq:0 ref:paymentKW 251-258 | ( 0 rule:paymentKW text 251-258 ) ) : ( 0 seq:1 ref:funcArgs 258-323 | ( 0 rule:funcArgs seqnc 258-323 | ( 0 seq:0 text 258-259 ) : ( 0 seq:1 ref:ws 259-259 | ( 0 rule:ws repsep 259-259 | < None of choices matched input :: rep choice @259 | < Expected ' ', but found 'i' :: ch:0 text @259 > : < Expected '
', but found 'i' :: ch:1 text @259 > > ) ) : ( 0 seq:2 repsep 259-322 | ( 0 rep ref:funcArg 259-263 | ( 0 rule:funcArg seqnc 259-263 | ( 0 seq:0 choice 259-262 | ( 0 ch:0 seqnc 259-262 | ( 0 seq:0 ref:ident 259-261 | ( 0 rule:ident seqnc 259-261 | ( 0 seq:0 ref:alpha 259-260 | ( 0 rule:alpha choice 259-260 | ( 0 ch:0 char-range 259-260 ) ) ) : ( 0 seq:1 repsep 260-261 | ( 0 rep choice 260-261 | ( 0 ch:0 ref:alphaNum 260-261 | ( 0 rule:alphaNum choice 260-261 | ( 0 ch:0 ref:alpha 260-261 | ( 0 rule:alpha choice 260-261 | ( 0 ch:0 char-range 260-261 ) ) ) ) ) ) : ( 0 sep text 261-261 ) : < None of choices matched input :: rep choice @261 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @261 | < None of choices matched input :: rule:alphaNum choice @261 | < Rule `alpha` didn't match :: ch:0 ref:alpha @261 | < None of choices matched input :: rule:alpha choice @261 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @261 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @261 > : < Expected '_', but found ':' :: ch:2 text @261 > > > : < Rule `num` didn't match :: ch:1 ref:num @261 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @261 > > > > : < Expected '.', but found ':' :: ch:1 text @261 > > ) ) ) : ( 0 seq:1 text 261-262 ) ) ) : ( 0 seq:1 ref:expr 262-263 | ( 0 rule:expr choice 262-263 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @262 | < Sequence failed at entry 0 :: rule:funcCall seqnc @262 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @262 | < Rule `ident` didn't match :: rule:varExpr ref:ident @262 | < Sequence failed at entry 0 :: rule:ident seqnc @262 | < Rule `alpha` didn't match :: seq:0 ref:alpha @262 | < None of choices matched input :: rule:alpha choice @262 | < Expected character in range from 'a' to 'z', but found '2' :: ch:0 char-range @262 > : < Expected character in range from 'A' to 'Z', but found '2' :: ch:1 char-range @262 > : < Expected '_', but found '2' :: ch:2 text @262 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @262 | < Sequence failed at entry 0 :: rule:lambda seqnc @262 | < Expected '(', but found '2' :: seq:0 text @262 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @262 | < Rule `ident` didn't match :: rule:varExpr ref:ident @262 | < Sequence failed at entry 0 :: rule:ident seqnc @262 | < Rule `alpha` didn't match :: seq:0 ref:alpha @262 | < None of choices matched input :: rule:alpha choice @262 | < Expected character in range from 'a' to 'z', but found '2' :: ch:0 char-range @262 > : < Expected character in range from 'A' to 'Z', but found '2' :: ch:1 char-range @262 > : < Expected '_', but found '2' :: ch:2 text @262 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @262 | < Sequence failed at entry 0 :: rule:stringLit seqnc @262 | < Expected '"', but found '2' :: seq:0 text @262 > > > : ( 0 ch:4 ref:intLit 262-263 | ( 0 rule:intLit seqnc 262-263 | ( 0 seq:0 ref:num 262-263 | ( 0 rule:num char-range 262-263 ) ) : ( 0 seq:1 repsep 263-263 | < Rule `num` didn't match :: rep ref:num @263 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @263 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 263-265 | ( 0 rule:commaWS seqnc 263-265 | ( 0 seq:0 text 263-264 ) : ( 0 seq:1 ref:ws 264-265 | ( 0 rule:ws repsep 264-265 | ( 0 rep choice 264-265 | ( 0 ch:0 text 264-265 ) ) : ( 0 sep text 265-265 ) : < None of choices matched input :: rep choice @265 | < Expected ' ', but found 'c' :: ch:0 text @265 > : < Expected '
', but found 'c' :: ch:1 text @265 > > ) ) ) ) : ( 0 rep ref:funcArg 265-277 | ( 0 rule:funcArg seqnc 265-277 | ( 0 seq:0 choice 265-276 | ( 0 ch:0 seqnc 265-276 | ( 0 seq:0 ref:ident 265-275 | ( 0 rule:ident seqnc 265-275 | ( 0 seq:0 ref:alpha 265-266 | ( 0 rule:alpha choice 265-266 | ( 0 ch:0 char-range 265-266 ) ) ) : ( 0 seq:1 repsep 266-275 | ( 0 rep choice 266-267 | ( 0 ch:0 ref:alphaNum 266-267 | ( 0 rule:alphaNum choice 266-267 | ( 0 ch:0 ref:alpha 266-267 | ( 0 rule:alpha choice 266-267 | ( 0 ch:0 char-range 266-267 ) ) ) ) ) ) : ( 0 sep text 267-267 ) : ( 0 rep choice 267-268 | ( 0 ch:0 ref:alphaNum 267-268 | ( 0 rule:alphaNum choice 267-268 | ( 0 ch:0 ref:alpha 267-268 | ( 0 rule:alpha choice 267-268 | ( 0 ch:0 char-range 267-268 ) ) ) ) ) ) : ( 0 sep text 268-268 ) : ( 0 rep choice 268-269 | ( 0 ch:0 ref:alphaNum 268-269 | ( 0 rule:alphaNum choice 268-269 | ( 0 ch:0 ref:alpha 268-269 | ( 0 rule:alpha choice 268-269 | ( 0 ch:0 char-range 268-269 ) ) ) ) ) ) : ( 0 sep text 269-269 ) : ( 0 rep choice 269-270 | ( 0 ch:0 ref:alphaNum 269-270 | ( 0 rule:alphaNum choice 269-270 | ( 0 ch:0 ref:alpha 269-270 | ( 0 rule:alpha choice 269-270 | ( 0 ch:0 char-range 269-270 ) ) ) ) ) ) : ( 0 sep text 270-270 ) : ( 0 rep choice 270-271 | ( 0 ch:0 ref:alphaNum 270-271 | ( 0 rule:alphaNum choice 270-271 | ( 0 ch:0 ref:alpha 270-271 | ( 0 rule:alpha choice 270-271 | ( 0 ch:0 char-range 270-271 ) ) ) ) ) ) : ( 0 sep text 271-271 ) : ( 0 rep choice 271-272 | ( 0 ch:0 ref:alphaNum 271-272 | ( 0 rule:alphaNum choice 271-272 | ( 0 ch:0 ref:alpha 271-272 | ( 0 rule:alpha choice 271-272 | ( 0 ch:0 char-range 271-272 ) ) ) ) ) ) : ( 0 sep text 272-272 ) : ( 0 rep choice 272-273 | ( 0 ch:0 ref:alphaNum 272-273 | ( 0 rule:alphaNum choice 272-273 | ( 0 ch:0 ref:alpha 272-273 | ( 0 rule:alpha choice 272-273 | ( 0 ch:0 char-range 272-273 ) ) ) ) ) ) : ( 0 sep text 273-273 ) : ( 0 rep choice 273-274 | ( 0 ch:0 ref:alphaNum 273-274 | ( 0 rule:alphaNum choice 273-274 | ( 0 ch:0 ref:alpha 273-274 | ( 0 rule:alpha choice 273-274 | < Expected character in range from 'a' to 'z', but found 'I' :: ch:0 char-range @273 > : ( 0 ch:1 char-range 273-274 ) ) ) ) ) ) : ( 0 sep text 274-274 ) : ( 0 rep choice 274-275 | ( 0 ch:0 ref:alphaNum 274-275 | ( 0 rule:alphaNum choice 274-275 | ( 0 ch:0 ref:alpha 274-275 | ( 0 rule:alpha choice 274-275 | < Expected character in range from 'a' to 'z', but found 'D' :: ch:0 char-range @274 > : ( 0 ch:1 char-range 274-275 ) ) ) ) ) ) : ( 0 sep text 275-275 ) : < None of choices matched input :: rep choice @275 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @275 | < None of choices matched input :: rule:alphaNum choice @275 | < Rule `alpha` didn't match :: ch:0 ref:alpha @275 | < None of choices matched input :: rule:alpha choice @275 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @275 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @275 > : < Expected '_', but found ':' :: ch:2 text @275 > > > : < Rule `num` didn't match :: ch:1 ref:num @275 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @275 > > > > : < Expected '.', but found ':' :: ch:1 text @275 > > ) ) ) : ( 0 seq:1 text 275-276 ) ) ) : ( 0 seq:1 ref:expr 276-277 | ( 0 rule:expr choice 276-277 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @276 | < Sequence failed at entry 0 :: rule:funcCall seqnc @276 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @276 | < Rule `ident` didn't match :: rule:varExpr ref:ident @276 | < Sequence failed at entry 0 :: rule:ident seqnc @276 | < Rule `alpha` didn't match :: seq:0 ref:alpha @276 | < None of choices matched input :: rule:alpha choice @276 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @276 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @276 > : < Expected '_', but found '1' :: ch:2 text @276 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @276 | < Sequence failed at entry 0 :: rule:lambda seqnc @276 | < Expected '(', but found '1' :: seq:0 text @276 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @276 | < Rule `ident` didn't match :: rule:varExpr ref:ident @276 | < Sequence failed at entry 0 :: rule:ident seqnc @276 | < Rule `alpha` didn't match :: seq:0 ref:alpha @276 | < None of choices matched input :: rule:alpha choice @276 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @276 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @276 > : < Expected '_', but found '1' :: ch:2 text @276 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @276 | < Sequence failed at entry 0 :: rule:stringLit seqnc @276 | < Expected '"', but found '1' :: seq:0 text @276 > > > : ( 0 ch:4 ref:intLit 276-277 | ( 0 rule:intLit seqnc 276-277 | ( 0 seq:0 ref:num 276-277 | ( 0 rule:num char-range 276-277 ) ) : ( 0 seq:1 repsep 277-277 | < Rule `num` didn't match :: rep ref:num @277 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @277 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 277-279 | ( 0 rule:commaWS seqnc 277-279 | ( 0 seq:0 text 277-278 ) : ( 0 seq:1 ref:ws 278-279 | ( 0 rule:ws repsep 278-279 | ( 0 rep choice 278-279 | ( 0 ch:0 text 278-279 ) ) : ( 0 sep text 279-279 ) : < None of choices matched input :: rep choice @279 | < Expected ' ', but found 'f' :: ch:0 text @279 > : < Expected '
', but found 'f' :: ch:1 text @279 > > ) ) ) ) : ( 0 rep ref:funcArg 279-289 | ( 0 rule:funcArg seqnc 279-289 | ( 0 seq:0 choice 279-284 | ( 0 ch:0 seqnc 279-284 | ( 0 seq:0 ref:ident 279-283 | ( 0 rule:ident seqnc 279-283 | ( 0 seq:0 ref:alpha 279-280 | ( 0 rule:alpha choice 279-280 | ( 0 ch:0 char-range 279-280 ) ) ) : ( 0 seq:1 repsep 280-283 | ( 0 rep choice 280-281 | ( 0 ch:0 ref:alphaNum 280-281 | ( 0 rule:alphaNum choice 280-281 | ( 0 ch:0 ref:alpha 280-281 | ( 0 rule:alpha choice 280-281 | ( 0 ch:0 char-range 280-281 ) ) ) ) ) ) : ( 0 sep text 281-281 ) : ( 0 rep choice 281-282 | ( 0 ch:0 ref:alphaNum 281-282 | ( 0 rule:alphaNum choice 281-282 | ( 0 ch:0 ref:alpha 281-282 | ( 0 rule:alpha choice 281-282 | ( 0 ch:0 char-range 281-282 ) ) ) ) ) ) : ( 0 sep text 282-282 ) : ( 0 rep choice 282-283 | ( 0 ch:0 ref:alphaNum 282-283 | ( 0 rule:alphaNum choice 282-283 | ( 0 ch:0 ref:alpha 282-283 | ( 0 rule:alpha choice 282-283 | ( 0 ch:0 char-range 282-283 ) ) ) ) ) ) : ( 0 sep text 283-283 ) : < None of choices matched input :: rep choice @283 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @283 | < None of choices matched input :: rule:alphaNum choice @283 | < Rule `alpha` didn't match :: ch:0 ref:alpha @283 | < None of choices matched input :: rule:alpha choice @283 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @283 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @283 > : < Expected '_', but found ':' :: ch:2 text @283 > > > : < Rule `num` didn't match :: ch:1 ref:num @283 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @283 > > > > : < Expected '.', but found ':' :: ch:1 text @283 > > ) ) ) : ( 0 seq:1 text 283-284 ) ) ) : ( 0 seq:1 ref:expr 284-289 | ( 0 rule:expr choice 284-289 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @284 | < Sequence failed at entry 0 :: rule:funcCall seqnc @284 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @284 | < Rule `ident` didn't match :: rule:varExpr ref:ident @284 | < Sequence failed at entry 0 :: rule:ident seqnc @284 | < Rule `alpha` didn't match :: seq:0 ref:alpha @284 | < None of choices matched input :: rule:alpha choice @284 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @284 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @284 > : < Expected '_', but found '"' :: ch:2 text @284 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @284 | < Sequence failed at entry 0 :: rule:lambda seqnc @284 | < Expected '(', but found '"' :: seq:0 text @284 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @284 | < Rule `ident` didn't match :: rule:varExpr ref:ident @284 | < Sequence failed at entry 0 :: rule:ident seqnc @284 | < Rule `alpha` didn't match :: seq:0 ref:alpha @284 | < None of choices matched input :: rule:alpha choice @284 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @284 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @284 > : < Expected '_', but found '"' :: ch:2 text @284 > > > > > > : ( 0 ch:3 ref:stringLit 284-289 | ( 0 rule:stringLit seqnc 284-289 | ( 0 seq:0 text 284-285 ) : ( 0 seq:1 ref:stringContents 285-288 | ( 0 rule:stringContents repsep 285-288 | ( 0 rep ref:stringChar 285-286 | ( 0 rule:stringChar choice 285-286 | ( 0 ch:0 not-char 285-286 ) ) ) : ( 0 sep text 286-286 ) : ( 0 rep ref:stringChar 286-287 | ( 0 rule:stringChar choice 286-287 | ( 0 ch:0 not-char 286-287 ) ) ) : ( 0 sep text 287-287 ) : ( 0 rep ref:stringChar 287-288 | ( 0 rule:stringChar choice 287-288 | ( 0 ch:0 not-char 287-288 ) ) ) : ( 0 sep text 288-288 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @288 | < None of choices matched input :: rule:stringChar choice @288 | < Expected not to find '"', but found '"' :: ch:0 not-char @288 > : < Sequence failed at entry 0 :: ch:1 seqnc @288 | < Expected '\\', but found '"' :: seq:0 char @288 > > > > ) ) : ( 0 seq:2 text 288-289 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 289-291 | ( 0 rule:commaWS seqnc 289-291 | ( 0 seq:0 text 289-290 ) : ( 0 seq:1 ref:ws 290-291 | ( 0 rule:ws repsep 290-291 | ( 0 rep choice 290-291 | ( 0 ch:0 text 290-291 ) ) : ( 0 sep text 291-291 ) : < None of choices matched input :: rep choice @291 | < Expected ' ', but found 't' :: ch:0 text @291 > : < Expected '
', but found 't' :: ch:1 text @291 > > ) ) ) ) : ( 0 rep ref:funcArg 291-301 | ( 0 rule:funcArg seqnc 291-301 | ( 0 seq:0 choice 291-294 | ( 0 ch:0 seqnc 291-294 | ( 0 seq:0 ref:ident 291-293 | ( 0 rule:ident seqnc 291-293 | ( 0 seq:0 ref:alpha 291-292 | ( 0 rule:alpha choice 291-292 | ( 0 ch:0 char-range 291-292 ) ) ) : ( 0 seq:1 repsep 292-293 | ( 0 rep choice 292-293 | ( 0 ch:0 ref:alphaNum 292-293 | ( 0 rule:alphaNum choice 292-293 | ( 0 ch:0 ref:alpha 292-293 | ( 0 rule:alpha choice 292-293 | ( 0 ch:0 char-range 292-293 ) ) ) ) ) ) : ( 0 sep text 293-293 ) : < None of choices matched input :: rep choice @293 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @293 | < None of choices matched input :: rule:alphaNum choice @293 | < Rule `alpha` didn't match :: ch:0 ref:alpha @293 | < None of choices matched input :: rule:alpha choice @293 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @293 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @293 > : < Expected '_', but found ':' :: ch:2 text @293 > > > : < Rule `num` didn't match :: ch:1 ref:num @293 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @293 > > > > : < Expected '.', but found ':' :: ch:1 text @293 > > ) ) ) : ( 0 seq:1 text 293-294 ) ) ) : ( 0 seq:1 ref:expr 294-301 | ( 0 rule:expr choice 294-301 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @294 | < Sequence failed at entry 0 :: rule:funcCall seqnc @294 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @294 | < Rule `ident` didn't match :: rule:varExpr ref:ident @294 | < Sequence failed at entry 0 :: rule:ident seqnc @294 | < Rule `alpha` didn't match :: seq:0 ref:alpha @294 | < None of choices matched input :: rule:alpha choice @294 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @294 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @294 > : < Expected '_', but found '"' :: ch:2 text @294 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @294 | < Sequence failed at entry 0 :: rule:lambda seqnc @294 | < Expected '(', but found '"' :: seq:0 text @294 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @294 | < Rule `ident` didn't match :: rule:varExpr ref:ident @294 | < Sequence failed at entry 0 :: rule:ident seqnc @294 | < Rule `alpha` didn't match :: seq:0 ref:alpha @294 | < None of choices matched input :: rule:alpha choice @294 | < Expected character in range from 'a' to 'z', but found '"' :: ch:0 char-range @294 > : < Expected character in range from 'A' to 'Z', but found '"' :: ch:1 char-range @294 > : < Expected '_', but found '"' :: ch:2 text @294 > > > > > > : ( 0 ch:3 ref:stringLit 294-301 | ( 0 rule:stringLit seqnc 294-301 | ( 0 seq:0 text 294-295 ) : ( 0 seq:1 ref:stringContents 295-300 | ( 0 rule:stringContents repsep 295-300 | ( 0 rep ref:stringChar 295-296 | ( 0 rule:stringChar choice 295-296 | ( 0 ch:0 not-char 295-296 ) ) ) : ( 0 sep text 296-296 ) : ( 0 rep ref:stringChar 296-297 | ( 0 rule:stringChar choice 296-297 | ( 0 ch:0 not-char 296-297 ) ) ) : ( 0 sep text 297-297 ) : ( 0 rep ref:stringChar 297-298 | ( 0 rule:stringChar choice 297-298 | ( 0 ch:0 not-char 297-298 ) ) ) : ( 0 sep text 298-298 ) : ( 0 rep ref:stringChar 298-299 | ( 0 rule:stringChar choice 298-299 | ( 0 ch:0 not-char 298-299 ) ) ) : ( 0 sep text 299-299 ) : ( 0 rep ref:stringChar 299-300 | ( 0 rule:stringChar choice 299-300 | ( 0 ch:0 not-char 299-300 ) ) ) : ( 0 sep text 300-300 ) : < Rule `stringChar` didn't match :: rep ref:stringChar @300 | < None of choices matched input :: rule:stringChar choice @300 | < Expected not to find '"', but found '"' :: ch:0 not-char @300 > : < Sequence failed at entry 0 :: ch:1 seqnc @300 | < Expected '\\', but found '"' :: seq:0 char @300 > > > > ) ) : ( 0 seq:2 text 300-301 ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 301-303 | ( 0 rule:commaWS seqnc 301-303 | ( 0 seq:0 text 301-302 ) : ( 0 seq:1 ref:ws 302-303 | ( 0 rule:ws repsep 302-303 | ( 0 rep choice 302-303 | ( 0 ch:0 text 302-303 ) ) : ( 0 sep text 303-303 ) : < None of choices matched input :: rep choice @303 | < Expected ' ', but found 'a' :: ch:0 text @303 > : < Expected '
', but found 'a' :: ch:1 text @303 > > ) ) ) ) : ( 0 rep ref:funcArg 303-313 | ( 0 rule:funcArg seqnc 303-313 | ( 0 seq:0 choice 303-310 | ( 0 ch:0 seqnc 303-310 | ( 0 seq:0 ref:ident 303-309 | ( 0 rule:ident seqnc 303-309 | ( 0 seq:0 ref:alpha 303-304 | ( 0 rule:alpha choice 303-304 | ( 0 ch:0 char-range 303-304 ) ) ) : ( 0 seq:1 repsep 304-309 | ( 0 rep choice 304-305 | ( 0 ch:0 ref:alphaNum 304-305 | ( 0 rule:alphaNum choice 304-305 | ( 0 ch:0 ref:alpha 304-305 | ( 0 rule:alpha choice 304-305 | ( 0 ch:0 char-range 304-305 ) ) ) ) ) ) : ( 0 sep text 305-305 ) : ( 0 rep choice 305-306 | ( 0 ch:0 ref:alphaNum 305-306 | ( 0 rule:alphaNum choice 305-306 | ( 0 ch:0 ref:alpha 305-306 | ( 0 rule:alpha choice 305-306 | ( 0 ch:0 char-range 305-306 ) ) ) ) ) ) : ( 0 sep text 306-306 ) : ( 0 rep choice 306-307 | ( 0 ch:0 ref:alphaNum 306-307 | ( 0 rule:alphaNum choice 306-307 | ( 0 ch:0 ref:alpha 306-307 | ( 0 rule:alpha choice 306-307 | ( 0 ch:0 char-range 306-307 ) ) ) ) ) ) : ( 0 sep text 307-307 ) : ( 0 rep choice 307-308 | ( 0 ch:0 ref:alphaNum 307-308 | ( 0 rule:alphaNum choice 307-308 | ( 0 ch:0 ref:alpha 307-308 | ( 0 rule:alpha choice 307-308 | ( 0 ch:0 char-range 307-308 ) ) ) ) ) ) : ( 0 sep text 308-308 ) : ( 0 rep choice 308-309 | ( 0 ch:0 ref:alphaNum 308-309 | ( 0 rule:alphaNum choice 308-309 | ( 0 ch:0 ref:alpha 308-309 | ( 0 rule:alpha choice 308-309 | ( 0 ch:0 char-range 308-309 ) ) ) ) ) ) : ( 0 sep text 309-309 ) : < None of choices matched input :: rep choice @309 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @309 | < None of choices matched input :: rule:alphaNum choice @309 | < Rule `alpha` didn't match :: ch:0 ref:alpha @309 | < None of choices matched input :: rule:alpha choice @309 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @309 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @309 > : < Expected '_', but found ':' :: ch:2 text @309 > > > : < Rule `num` didn't match :: ch:1 ref:num @309 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @309 > > > > : < Expected '.', but found ':' :: ch:1 text @309 > > ) ) ) : ( 0 seq:1 text 309-310 ) ) ) : ( 0 seq:1 ref:expr 310-313 | ( 0 rule:expr choice 310-313 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @310 | < Sequence failed at entry 0 :: rule:funcCall seqnc @310 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @310 | < Rule `ident` didn't match :: rule:varExpr ref:ident @310 | < Sequence failed at entry 0 :: rule:ident seqnc @310 | < Rule `alpha` didn't match :: seq:0 ref:alpha @310 | < None of choices matched input :: rule:alpha choice @310 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @310 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @310 > : < Expected '_', but found '1' :: ch:2 text @310 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @310 | < Sequence failed at entry 0 :: rule:lambda seqnc @310 | < Expected '(', but found '1' :: seq:0 text @310 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @310 | < Rule `ident` didn't match :: rule:varExpr ref:ident @310 | < Sequence failed at entry 0 :: rule:ident seqnc @310 | < Rule `alpha` didn't match :: seq:0 ref:alpha @310 | < None of choices matched input :: rule:alpha choice @310 | < Expected character in range from 'a' to 'z', but found '1' :: ch:0 char-range @310 > : < Expected character in range from 'A' to 'Z', but found '1' :: ch:1 char-range @310 > : < Expected '_', but found '1' :: ch:2 text @310 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @310 | < Sequence failed at entry 0 :: rule:stringLit seqnc @310 | < Expected '"', but found '1' :: seq:0 text @310 > > > : ( 0 ch:4 ref:intLit 310-313 | ( 0 rule:intLit seqnc 310-313 | ( 0 seq:0 ref:num 310-311 | ( 0 rule:num char-range 310-311 ) ) : ( 0 seq:1 repsep 311-313 | ( 0 rep ref:num 311-312 | ( 0 rule:num char-range 311-312 ) ) : ( 0 sep text 312-312 ) : ( 0 rep ref:num 312-313 | ( 0 rule:num char-range 312-313 ) ) : ( 0 sep text 313-313 ) : < Rule `num` didn't match :: rep ref:num @313 | < Expected character in range from '0' to '9', but found ',' :: rule:num char-range @313 > > ) ) ) ) ) ) ) : ( 0 sep ref:commaWS 313-315 | ( 0 rule:commaWS seqnc 313-315 | ( 0 seq:0 text 313-314 ) : ( 0 seq:1 ref:ws 314-315 | ( 0 rule:ws repsep 314-315 | ( 0 rep choice 314-315 | ( 0 ch:0 text 314-315 ) ) : ( 0 sep text 315-315 ) : < None of choices matched input :: rep choice @315 | < Expected ' ', but found 't' :: ch:0 text @315 > : < Expected '
', but found 't' :: ch:1 text @315 > > ) ) ) ) : ( 0 rep ref:funcArg 315-322 | ( 0 rule:funcArg seqnc 315-322 | ( 0 seq:0 choice 315-320 | ( 0 ch:0 seqnc 315-320 | ( 0 seq:0 ref:ident 315-319 | ( 0 rule:ident seqnc 315-319 | ( 0 seq:0 ref:alpha 315-316 | ( 0 rule:alpha choice 315-316 | ( 0 ch:0 char-range 315-316 ) ) ) : ( 0 seq:1 repsep 316-319 | ( 0 rep choice 316-317 | ( 0 ch:0 ref:alphaNum 316-317 | ( 0 rule:alphaNum choice 316-317 | ( 0 ch:0 ref:alpha 316-317 | ( 0 rule:alpha choice 316-317 | ( 0 ch:0 char-range 316-317 ) ) ) ) ) ) : ( 0 sep text 317-317 ) : ( 0 rep choice 317-318 | ( 0 ch:0 ref:alphaNum 317-318 | ( 0 rule:alphaNum choice 317-318 | ( 0 ch:0 ref:alpha 317-318 | ( 0 rule:alpha choice 317-318 | ( 0 ch:0 char-range 317-318 ) ) ) ) ) ) : ( 0 sep text 318-318 ) : ( 0 rep choice 318-319 | ( 0 ch:0 ref:alphaNum 318-319 | ( 0 rule:alphaNum choice 318-319 | ( 0 ch:0 ref:alpha 318-319 | ( 0 rule:alpha choice 318-319 | ( 0 ch:0 char-range 318-319 ) ) ) ) ) ) : ( 0 sep text 319-319 ) : < None of choices matched input :: rep choice @319 | < Rule `alphaNum` didn't match :: ch:0 ref:alphaNum @319 | < None of choices matched input :: rule:alphaNum choice @319 | < Rule `alpha` didn't match :: ch:0 ref:alpha @319 | < None of choices matched input :: rule:alpha choice @319 | < Expected character in range from 'a' to 'z', but found ':' :: ch:0 char-range @319 > : < Expected character in range from 'A' to 'Z', but found ':' :: ch:1 char-range @319 > : < Expected '_', but found ':' :: ch:2 text @319 > > > : < Rule `num` didn't match :: ch:1 ref:num @319 | < Expected character in range from '0' to '9', but found ':' :: rule:num char-range @319 > > > > : < Expected '.', but found ':' :: ch:1 text @319 > > ) ) ) : ( 0 seq:1 text 319-320 ) ) ) : ( 0 seq:1 ref:expr 320-322 | ( 0 rule:expr choice 320-322 | < Rule `funcCall` didn't match :: ch:0 ref:funcCall @320 | < Sequence failed at entry 0 :: rule:funcCall seqnc @320 | < Rule `varExpr` didn't match :: seq:0 ref:varExpr @320 | < Rule `ident` didn't match :: rule:varExpr ref:ident @320 | < Sequence failed at entry 0 :: rule:ident seqnc @320 | < Rule `alpha` didn't match :: seq:0 ref:alpha @320 | < None of choices matched input :: rule:alpha choice @320 | < Expected character in range from 'a' to 'z', but found '3' :: ch:0 char-range @320 > : < Expected character in range from 'A' to 'Z', but found '3' :: ch:1 char-range @320 > : < Expected '_', but found '3' :: ch:2 text @320 > > > > > > > > : < Rule `lambda` didn't match :: ch:1 ref:lambda @320 | < Sequence failed at entry 0 :: rule:lambda seqnc @320 | < Expected '(', but found '3' :: seq:0 text @320 > > > : < Rule `varExpr` didn't match :: ch:2 ref:varExpr @320 | < Rule `ident` didn't match :: rule:varExpr ref:ident @320 | < Sequence failed at entry 0 :: rule:ident seqnc @320 | < Rule `alpha` didn't match :: seq:0 ref:alpha @320 | < None of choices matched input :: rule:alpha choice @320 | < Expected character in range from 'a' to 'z', but found '3' :: ch:0 char-range @320 > : < Expected character in range from 'A' to 'Z', but found '3' :: ch:1 char-range @320 > : < Expected '_', but found '3' :: ch:2 text @320 > > > > > > : < Rule `stringLit` didn't match :: ch:3 ref:stringLit @320 | < Sequence failed at entry 0 :: rule:stringLit seqnc @320 | < Expected '"', but found '3' :: seq:0 text @320 > > > : ( 0 ch:4 ref:intLit 320-322 | ( 0 rule:intLit seqnc 320-322 | ( 0 seq:0 ref:num 320-321 | ( 0 rule:num char-range 320-321 ) ) : ( 0 seq:1 repsep 321-322 | ( 0 rep ref:num 321-322 | ( 0 rule:num char-range 321-322 ) ) : ( 0 sep text 322-322 ) : < Rule `num` didn't match :: rep ref:num @322 | < Expected character in range from '0' to '9', but found ')' :: rule:num char-range @322 > > ) ) ) ) ) ) ) : < Rule `commaWS` didn't match :: sep ref:commaWS @322 | < Sequence failed at entry 0 :: rule:commaWS seqnc @322 | < Expected ',', but found ')' :: seq:0 text @322 > > > ) : ( 0 seq:3 ref:ws 322-322 | ( 0 rule:ws repsep 322-322 | < None of choices matched input :: rep choice @322 | < Expected ' ', but found ')' :: ch:0 text @322 > : < Expected '
', but found ')' :: ch:1 text @322 > > ) ) : ( 0 seq:4 text 322-323 ) ) ) ) ) ) : ( 0 seq:1 text 323-324 ) ) ) : ( 0 sep ref:ws 324-325 | ( 0 rule:ws repsep 324-325 | ( 0 rep choice 324-325 | < Expected ' ', but found '
' :: ch:0 text @324 > : ( 0 ch:1 text 324-325 ) ) : < End of input :: sep text @325 > ) ) : < Rule `stmt` didn't match :: rep ref:stmt @325 | < Sequence failed at entry 0 :: rule:stmt seqnc @325 | < None of choices matched input :: seq:0 choice @325 | < Rule `contractStmt` didn't match :: ch:0 ref:contractStmt @325 | < Sequence failed at entry 0 :: rule:contractStmt seqnc @325 | < Rule `contractKW` didn't match :: seq:0 ref:contractKW @325 | < Expected 'contract', but found end-of-input :: rule:contractKW text @325 > > > > : < Rule `paymentStmt` didn't match :: ch:1 ref:paymentStmt @325 | < Sequence failed at entry 0 :: rule:paymentStmt seqnc @325 | < Rule `paymentKW` didn't match :: seq:0 ref:paymentKW @325 | < Expected 'payment', but found end-of-input :: rule:paymentKW text @325 > > > > > > > )